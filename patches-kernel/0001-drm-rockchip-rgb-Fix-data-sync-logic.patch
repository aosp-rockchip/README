From 802974d4f2187d3454652078dfa83715b13a8d23 Mon Sep 17 00:00:00 2001
From: Andy Yan <andy.yan@rock-chips.com>
Date: Thu, 7 May 2020 17:03:40 +0800
Subject: [PATCH] drm/rockchip: rgb: Fix data-sync logic

According to IC designer:
For RGB screen: The data-sync should enabled to get better SI.
For MCU screen: The data-sync must bypassed, otherwise the mcu signal
can't output.

Because we use much more rgb screen than MCU screen, so it's better
to enable data-sync by default. And for MCU screen, add the
data-sync-bypass property to bypass data-sync.

Fixes: c8f3ab90c08b ("drm/rockchip: rgb: Allow to configure data sync from DT")
Change-Id: Iacb0f7813ea038a210c2bbb88126356381509bf6
Signed-off-by: Andy Yan <andy.yan@rock-chips.com>
---
 .../bindings/display/rockchip/rockchip-rgb.txt         |  2 +-
 drivers/gpu/drm/rockchip/rockchip_rgb.c                | 10 +++++-----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/Documentation/devicetree/bindings/display/rockchip/rockchip-rgb.txt b/Documentation/devicetree/bindings/display/rockchip/rockchip-rgb.txt
index 4c7cd916c6e1..fbd7660cded6 100644
--- a/Documentation/devicetree/bindings/display/rockchip/rockchip-rgb.txt
+++ b/Documentation/devicetree/bindings/display/rockchip/rockchip-rgb.txt
@@ -18,7 +18,7 @@ Optional properties:
 - pinctrl-names: the pin control state names; should contain "default"
 - pinctrl-0: the default pinctrl state (active)
 - pinctrl-1: the "sleep" pinctrl state
-- rockchip,data-sync: boolean to enable data sync
+- rockchip,data-sync-bypass: bypass the vop data-sync logic from io
 
 The rgb has two video ports described by:
 	Documentation/devicetree/bindings/media/video-interfaces.txt
diff --git a/drivers/gpu/drm/rockchip/rockchip_rgb.c b/drivers/gpu/drm/rockchip/rockchip_rgb.c
index b25822eea8fc..34e8b3e84e54 100644
--- a/drivers/gpu/drm/rockchip/rockchip_rgb.c
+++ b/drivers/gpu/drm/rockchip/rockchip_rgb.c
@@ -65,7 +65,7 @@ struct rockchip_rgb {
 	struct drm_encoder encoder;
 	struct phy *phy;
 	struct regmap *grf;
-	bool data_sync;
+	bool data_sync_bypass;
 	const struct rockchip_rgb_funcs *funcs;
 };
 
@@ -341,8 +341,8 @@ static int rockchip_rgb_probe(struct platform_device *pdev)
 	rgb->funcs = of_device_get_match_data(dev);
 	platform_set_drvdata(pdev, rgb);
 
-	rgb->data_sync = of_property_read_bool(dev->of_node,
-					       "rockchip,data-sync");
+	rgb->data_sync_bypass =
+	    of_property_read_bool(dev->of_node, "rockchip,data-sync-bypass");
 
 	if (dev->parent && dev->parent->of_node) {
 		rgb->grf = syscon_node_to_regmap(dev->parent->of_node);
@@ -376,7 +376,7 @@ static void px30_rgb_enable(struct rockchip_rgb *rgb)
 						     &rgb->encoder);
 
 	regmap_write(rgb->grf, PX30_GRF_PD_VO_CON1, PX30_RGB_VOP_SEL(pipe) |
-		     PX30_RGB_DATA_SYNC_BYPASS(!rgb->data_sync));
+		     PX30_RGB_DATA_SYNC_BYPASS(rgb->data_sync_bypass));
 }
 
 static const struct rockchip_rgb_funcs px30_rgb_funcs = {
@@ -386,7 +386,7 @@ static const struct rockchip_rgb_funcs px30_rgb_funcs = {
 static void rk1808_rgb_enable(struct rockchip_rgb *rgb)
 {
 	regmap_write(rgb->grf, RK1808_GRF_PD_VO_CON1,
-		     RK1808_RGB_DATA_SYNC_BYPASS(!rgb->data_sync));
+		     RK1808_RGB_DATA_SYNC_BYPASS(rgb->data_sync_bypass));
 }
 
 static const struct rockchip_rgb_funcs rk1808_rgb_funcs = {
-- 
2.35.3

