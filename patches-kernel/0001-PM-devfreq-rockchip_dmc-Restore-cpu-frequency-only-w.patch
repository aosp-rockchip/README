From 61c74576679e1eeabbeefad984f11debba07c3d0 Mon Sep 17 00:00:00 2001
From: Finley Xiao <finley.xiao@rock-chips.com>
Date: Thu, 3 May 2018 11:48:18 +0800
Subject: [PATCH] PM / devfreq: rockchip_dmc: Restore cpu frequency only when
 it has been changed

Change-Id: Ie845185b62f2b2e38766dab96d396d5dcbe4231f
Signed-off-by: Finley Xiao <finley.xiao@rock-chips.com>
---
 drivers/devfreq/rockchip_dmc.c | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/drivers/devfreq/rockchip_dmc.c b/drivers/devfreq/rockchip_dmc.c
index 3943b0ec3dc7..092e7d626f1b 100644
--- a/drivers/devfreq/rockchip_dmc.c
+++ b/drivers/devfreq/rockchip_dmc.c
@@ -930,6 +930,7 @@ static int rockchip_dmcfreq_target(struct device *dev, unsigned long *freq,
 	unsigned long old_clk_rate = dmcfreq->rate;
 	unsigned long target_volt, target_rate;
 	unsigned int cpu_cur, cpufreq_cur;
+	bool is_cpufreq_changed = false;
 	int err = 0;
 
 	rcu_read_lock();
@@ -987,12 +988,14 @@ static int rockchip_dmcfreq_target(struct device *dev, unsigned long *freq,
 
 	/* If we're thermally throttled; don't change; */
 	if (dmcfreq->min_cpu_freq && cpufreq_cur < dmcfreq->min_cpu_freq) {
-		if (policy->max >= dmcfreq->min_cpu_freq)
+		if (policy->max >= dmcfreq->min_cpu_freq) {
 			__cpufreq_driver_target(policy, dmcfreq->min_cpu_freq,
 						CPUFREQ_RELATION_L);
-		else
+			is_cpufreq_changed = true;
+		} else {
 			dev_dbg(dev, "CPU may too slow for DMC (%d MHz)\n",
 				policy->max);
+		}
 	}
 
 	/*
@@ -1048,7 +1051,9 @@ static int rockchip_dmcfreq_target(struct device *dev, unsigned long *freq,
 
 	dmcfreq->volt = target_volt;
 out:
-	__cpufreq_driver_target(policy, cpufreq_cur, CPUFREQ_RELATION_L);
+	if (is_cpufreq_changed)
+		__cpufreq_driver_target(policy, cpufreq_cur,
+					CPUFREQ_RELATION_L);
 	up_write(&policy->rwsem);
 	cpufreq_cpu_put(policy);
 cpufreq:
-- 
2.35.3

