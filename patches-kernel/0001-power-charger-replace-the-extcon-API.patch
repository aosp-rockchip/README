From 833f9df6a7edf5ab12631c0e401460975873f476 Mon Sep 17 00:00:00 2001
From: Shengfei Xu <xsf@rock-chips.com>
Date: Mon, 14 Oct 2019 11:20:24 +0800
Subject: [PATCH] power: charger: replace the extcon API

This patch replaces the deprecated extcon API as following:
- extcon_get_cable_state_() -> extcon_get_state()

Change-Id: Id800b939bad8695f23841d5534c285b51dd60fb0
Signed-off-by: Shengfei Xu <xsf@rock-chips.com>
---
 drivers/power/supply/bq25700_charger.c | 20 ++++++++++----------
 drivers/power/supply/rk816_battery.c   | 16 ++++++++--------
 drivers/power/supply/rk817_charger.c   | 16 ++++++++--------
 drivers/power/supply/rk818_charger.c   | 16 ++++++++--------
 4 files changed, 34 insertions(+), 34 deletions(-)

diff --git a/drivers/power/supply/bq25700_charger.c b/drivers/power/supply/bq25700_charger.c
index 2cc47edfa77e..5b2a516509ed 100644
--- a/drivers/power/supply/bq25700_charger.c
+++ b/drivers/power/supply/bq25700_charger.c
@@ -1321,7 +1321,7 @@ static void bq25700_pd_connect(struct bq25700_device *charger,
 	    charger->typec1_status == USB_STATUS_PD)
 		return;
 
-	if (extcon_get_cable_state_(edev, EXTCON_CHG_USB_FAST) > 0) {
+	if (extcon_get_state(edev, EXTCON_CHG_USB_FAST) > 0) {
 		ret = extcon_get_property(edev, EXTCON_CHG_USB_FAST,
 					  EXTCON_PROP_USB_TYPEC_POLARITY,
 					  &prop_val);
@@ -1413,18 +1413,18 @@ static void bq25700_charger_evt_handel(struct bq25700_device *charger,
 		return;
 
 	/* Determine cable/charger type */
-	if (extcon_get_cable_state_(edev, EXTCON_CHG_USB_SDP) > 0) {
+	if (extcon_get_state(edev, EXTCON_CHG_USB_SDP) > 0) {
 		charger_state = USB_TYPE_USB_CHARGER;
 
 		bq25700_enable_charger(charger,
 				       charger->init_data.input_current_sdp);
 		DBG("USB_TYPE_USB_CHARGER\n");
-	} else if (extcon_get_cable_state_(edev, EXTCON_CHG_USB_DCP) > 0) {
+	} else if (extcon_get_state(edev, EXTCON_CHG_USB_DCP) > 0) {
 		charger_state = USB_TYPE_AC_CHARGER;
 		bq25700_enable_charger(charger,
 				       charger->init_data.input_current_dcp);
 		DBG("USB_TYPE_AC_CHARGER\n");
-	} else if (extcon_get_cable_state_(edev, EXTCON_CHG_USB_CDP) > 0) {
+	} else if (extcon_get_state(edev, EXTCON_CHG_USB_CDP) > 0) {
 		charger_state = USB_TYPE_CDP_CHARGER;
 		bq25700_enable_charger(charger,
 				       charger->init_data.input_current_cdp);
@@ -1528,13 +1528,13 @@ static void bq25700_host_evt_worker(struct work_struct *work)
 		container_of(work, struct bq25700_device, host_work.work);
 	struct extcon_dev *edev = charger->cable_edev;
 
-	/* Determine cable/charger type */
-	if (extcon_get_cable_state_(edev, EXTCON_USB_VBUS_EN) > 0) {
+	/* Determine charger type */
+	if (extcon_get_state(edev, EXTCON_USB_VBUS_EN) > 0) {
 		if (!IS_ERR_OR_NULL(charger->otg_mode_en_io))
 			gpiod_direction_output(charger->otg_mode_en_io, 1);
 		bq25700_field_write(charger, EN_OTG, 1);
 		DBG("OTG enable\n");
-	} else if (extcon_get_cable_state_(edev, EXTCON_USB_VBUS_EN) == 0) {
+	} else if (extcon_get_state(edev, EXTCON_USB_VBUS_EN) == 0) {
 		if (!IS_ERR_OR_NULL(charger->otg_mode_en_io))
 			gpiod_direction_output(charger->otg_mode_en_io, 0);
 		bq25700_field_write(charger, EN_OTG, 0);
@@ -1548,13 +1548,13 @@ static void bq25700_host_evt_worker1(struct work_struct *work)
 		container_of(work, struct bq25700_device, host_work1.work);
 	struct extcon_dev *edev = charger->cable_edev_1;
 
-	/* Determine cable/charger type */
-	if (extcon_get_cable_state_(edev, EXTCON_USB_VBUS_EN) > 0) {
+	/* Determine charger type */
+	if (extcon_get_state(edev, EXTCON_USB_VBUS_EN) > 0) {
 		if (!IS_ERR_OR_NULL(charger->otg_mode_en_io))
 			gpiod_direction_output(charger->otg_mode_en_io, 1);
 		bq25700_field_write(charger, EN_OTG, 1);
 		DBG("OTG enable\n");
-	} else if (extcon_get_cable_state_(edev, EXTCON_USB_VBUS_EN) == 0) {
+	} else if (extcon_get_state(edev, EXTCON_USB_VBUS_EN) == 0) {
 		if (!IS_ERR_OR_NULL(charger->otg_mode_en_io))
 			gpiod_direction_output(charger->otg_mode_en_io, 0);
 		bq25700_field_write(charger, EN_OTG, 0);
diff --git a/drivers/power/supply/rk816_battery.c b/drivers/power/supply/rk816_battery.c
index 9c6f8dbd9126..cf9e3376dcc3 100644
--- a/drivers/power/supply/rk816_battery.c
+++ b/drivers/power/supply/rk816_battery.c
@@ -3775,7 +3775,7 @@ static void rk816_bat_discnt_evt_worker(struct work_struct *work)
 	struct rk816_battery *di = container_of(work,
 			struct rk816_battery, discnt_work.work);
 
-	if (extcon_get_cable_state_(di->cable_edev, EXTCON_USB) == 0) {
+	if (extcon_get_state(di->cable_edev, EXTCON_USB) == 0) {
 		BAT_INFO("receive extcon notifier event: DISCNT...\n");
 		rk816_bat_set_chrg_param(di, USB_TYPE_NONE_CHARGER);
 	}
@@ -3787,15 +3787,15 @@ static void rk816_bat_host_evt_worker(struct work_struct *work)
 			struct rk816_battery, host_work.work);
 	struct extcon_dev *edev = di->cable_edev;
 
-	/* Determine cable/charger type */
-	if (extcon_get_cable_state_(edev, EXTCON_USB_VBUS_EN) > 0) {
+	/* Determine charger type */
+	if (extcon_get_state(edev, EXTCON_USB_VBUS_EN) > 0) {
 		rk816_bat_set_otg_in(di, ONLINE);
 		BAT_INFO("receive extcon notifier event: OTG ON...\n");
 		if (di->dc_in && di->pdata->power_dc2otg)
 			BAT_INFO("otg power from dc adapter\n");
 		else
 			rk816_bat_set_otg_power(di, USB_OTG_POWER_ON);
-	} else if (extcon_get_cable_state_(edev, EXTCON_USB_VBUS_EN) == 0) {
+	} else if (extcon_get_state(edev, EXTCON_USB_VBUS_EN) == 0) {
 		BAT_INFO("receive extcon notifier event: OTG OFF...\n");
 		rk816_bat_set_otg_in(di, OFFLINE);
 		rk816_bat_set_otg_power(di, USB_OTG_POWER_OFF);
@@ -3810,12 +3810,12 @@ static void rk816_bat_charger_evt_worker(struct work_struct *work)
 	enum charger_t charger = USB_TYPE_UNKNOWN_CHARGER;
 	static const char *event[] = {"UN", "NONE", "USB", "AC", "CDP1.5A"};
 
-	/* Determine cable/charger type */
-	if (extcon_get_cable_state_(edev, EXTCON_CHG_USB_SDP) > 0)
+	/* Determine charger type */
+	if (extcon_get_state(edev, EXTCON_CHG_USB_SDP) > 0)
 		charger = USB_TYPE_USB_CHARGER;
-	else if (extcon_get_cable_state_(edev, EXTCON_CHG_USB_DCP) > 0)
+	else if (extcon_get_state(edev, EXTCON_CHG_USB_DCP) > 0)
 		charger = USB_TYPE_AC_CHARGER;
-	else if (extcon_get_cable_state_(edev, EXTCON_CHG_USB_CDP) > 0)
+	else if (extcon_get_state(edev, EXTCON_CHG_USB_CDP) > 0)
 		charger = USB_TYPE_CDP_CHARGER;
 	else
 		charger = USB_TYPE_NONE_CHARGER;
diff --git a/drivers/power/supply/rk817_charger.c b/drivers/power/supply/rk817_charger.c
index ab5cbc2b2689..cd604e5d6b67 100644
--- a/drivers/power/supply/rk817_charger.c
+++ b/drivers/power/supply/rk817_charger.c
@@ -980,14 +980,14 @@ static void rk817_charge_host_evt_worker(struct work_struct *work)
 			struct rk817_charger, host_work.work);
 	struct extcon_dev *edev = charge->cable_edev;
 
-	/* Determine cable/charger type */
-	if (extcon_get_cable_state_(edev, EXTCON_USB_VBUS_EN) > 0) {
+	/* Determine charger type */
+	if (extcon_get_state(edev, EXTCON_USB_VBUS_EN) > 0) {
 		DBG("receive type-c notifier event: OTG ON...\n");
 		if (charge->dc_in && charge->pdata->power_dc2otg)
 			DBG("otg power from dc adapter\n");
 		else
 			rk817_charge_set_otg_state(charge, USB_OTG_POWER_ON);
-	} else if (extcon_get_cable_state_(edev, EXTCON_USB_VBUS_EN) == 0) {
+	} else if (extcon_get_state(edev, EXTCON_USB_VBUS_EN) == 0) {
 		DBG("receive type-c notifier event: OTG OFF...\n");
 		rk817_charge_set_otg_state(charge, USB_OTG_POWER_OFF);
 	}
@@ -1002,12 +1002,12 @@ static void rk817_charger_evt_worker(struct work_struct *work)
 	static const char * const event[] = {"UN", "NONE", "USB",
 					     "AC", "CDP1.5A"};
 
-	/* Determine cable/charger type */
-	if (extcon_get_cable_state_(edev, EXTCON_CHG_USB_SDP) > 0)
+	/* Determine charger type */
+	if (extcon_get_state(edev, EXTCON_CHG_USB_SDP) > 0)
 		charger = USB_TYPE_USB_CHARGER;
-	else if (extcon_get_cable_state_(edev, EXTCON_CHG_USB_DCP) > 0)
+	else if (extcon_get_state(edev, EXTCON_CHG_USB_DCP) > 0)
 		charger = USB_TYPE_AC_CHARGER;
-	else if (extcon_get_cable_state_(edev, EXTCON_CHG_USB_CDP) > 0)
+	else if (extcon_get_state(edev, EXTCON_CHG_USB_CDP) > 0)
 		charger = USB_TYPE_CDP_CHARGER;
 
 	if (charger != USB_TYPE_UNKNOWN_CHARGER) {
@@ -1023,7 +1023,7 @@ static void rk817_charge_discnt_evt_worker(struct work_struct *work)
 	struct rk817_charger *charge = container_of(work,
 			struct rk817_charger, discnt_work.work);
 
-	if (extcon_get_cable_state_(charge->cable_edev, EXTCON_USB) == 0) {
+	if (extcon_get_state(charge->cable_edev, EXTCON_USB) == 0) {
 		DBG("receive type-c notifier event: DISCNT...\n");
 
 		rk817_charge_set_chrg_param(charge, USB_TYPE_NONE_CHARGER);
diff --git a/drivers/power/supply/rk818_charger.c b/drivers/power/supply/rk818_charger.c
index f24dcaccffda..35f08ff2d1d3 100644
--- a/drivers/power/supply/rk818_charger.c
+++ b/drivers/power/supply/rk818_charger.c
@@ -1179,7 +1179,7 @@ static void rk818_cg_discnt_evt_worker(struct work_struct *work)
 	struct rk818_charger *cg = container_of(work,
 			struct rk818_charger, discnt_work.work);
 
-	if (extcon_get_cable_state_(cg->cable_edev, EXTCON_USB) == 0) {
+	if (extcon_get_state(cg->cable_edev, EXTCON_USB) == 0) {
 		CG_INFO("receive type-c notifier event: DISCNT...\n");
 		rk818_cg_set_chrg_param(cg, USB_TYPE_NONE_CHARGER);
 		rk818_cg_pr_info(cg);
@@ -1192,15 +1192,15 @@ static void rk818_cg_host_evt_worker(struct work_struct *work)
 			struct rk818_charger, host_work.work);
 	struct extcon_dev *edev = cg->cable_edev;
 
-	/* Determine cable/charger type */
-	if (extcon_get_cable_state_(edev, EXTCON_USB_VBUS_EN) > 0) {
+	/* Determine charger type */
+	if (extcon_get_state(edev, EXTCON_USB_VBUS_EN) > 0) {
 		rk818_cg_set_otg_in(cg, ONLINE);
 		CG_INFO("receive type-c notifier event: OTG ON...\n");
 		if (cg->dc_in && cg->pdata->power_dc2otg)
 			CG_INFO("otg power from dc adapter\n");
 		else
 			rk818_cg_set_otg_power(cg, USB_OTG_POWER_ON);
-	} else if (extcon_get_cable_state_(edev, EXTCON_USB_VBUS_EN) == 0) {
+	} else if (extcon_get_state(edev, EXTCON_USB_VBUS_EN) == 0) {
 		CG_INFO("receive type-c notifier event: OTG OFF...\n");
 		rk818_cg_set_otg_in(cg, OFFLINE);
 		rk818_cg_set_otg_power(cg, USB_OTG_POWER_OFF);
@@ -1217,12 +1217,12 @@ static void rk818_cg_charger_evt_worker(struct work_struct *work)
 	enum charger_t charger = USB_TYPE_UNKNOWN_CHARGER;
 	const char *event[] = {"UN", "NONE", "USB", "AC", "CDP1.5A"};
 
-	/* Determine cable/charger type */
-	if (extcon_get_cable_state_(edev, EXTCON_CHG_USB_SDP) > 0)
+	/* Determine charger type */
+	if (extcon_get_state(edev, EXTCON_CHG_USB_SDP) > 0)
 		charger = USB_TYPE_USB_CHARGER;
-	else if (extcon_get_cable_state_(edev, EXTCON_CHG_USB_DCP) > 0)
+	else if (extcon_get_state(edev, EXTCON_CHG_USB_DCP) > 0)
 		charger = USB_TYPE_AC_CHARGER;
-	else if (extcon_get_cable_state_(edev, EXTCON_CHG_USB_CDP) > 0)
+	else if (extcon_get_state(edev, EXTCON_CHG_USB_CDP) > 0)
 		charger = USB_TYPE_CDP_CHARGER;
 
 	if (charger != USB_TYPE_UNKNOWN_CHARGER) {
-- 
2.35.3

