From 34760af99634df4cbf919647a01f3b44099a65f4 Mon Sep 17 00:00:00 2001
From: Yandong Lin <yandong.lin@rock-chips.com>
Date: Thu, 4 Feb 2021 16:35:15 +0800
Subject: [PATCH] video: rockchip: mpp: iep2: fix hw hang caused by OSD_MAX irq

Rootcause:
When hw detect there are more than eight rolling subtitles, it will
trigger a osd max irq but it still running, and that interruption make
the software takes for frame done and disable the clock gate, finally hw
hang when it access the bus.
Solution:
Ignore OSD MAX irq, clean and wait for frame done.

Signed-off-by: Yandong Lin <yandong.lin@rock-chips.com>
Change-Id: I660cefa013fe1419f7566b984556ea3450fe28e5
---
 drivers/video/rockchip/mpp/mpp_iep2.c           | 6 +++---
 drivers/video/rockchip/mpp/rockchip_iep2_regs.h | 1 +
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/drivers/video/rockchip/mpp/mpp_iep2.c b/drivers/video/rockchip/mpp/mpp_iep2.c
index e6992251a228..3f38180498d9 100644
--- a/drivers/video/rockchip/mpp/mpp_iep2.c
+++ b/drivers/video/rockchip/mpp/mpp_iep2.c
@@ -601,11 +601,11 @@ static int iep2_run(struct mpp_dev *mpp,
 static int iep2_irq(struct mpp_dev *mpp)
 {
 	mpp->irq_status = mpp_read(mpp, IEP2_REG_INT_STS);
-	if (!(mpp->irq_status))
-		return IRQ_NONE;
-
 	mpp_write(mpp, IEP2_REG_INT_CLR, 0xffffffff);
 
+	if (!IEP2_REG_RO_VALID_INT_STS(mpp->irq_status))
+		return IRQ_NONE;
+
 	return IRQ_WAKE_THREAD;
 }
 
diff --git a/drivers/video/rockchip/mpp/rockchip_iep2_regs.h b/drivers/video/rockchip/mpp/rockchip_iep2_regs.h
index cd53cb0074a8..8734bbddeaac 100644
--- a/drivers/video/rockchip/mpp/rockchip_iep2_regs.h
+++ b/drivers/video/rockchip/mpp/rockchip_iep2_regs.h
@@ -47,6 +47,7 @@
 #define     IEP2_REG_RO_BUS_ERROR_STS(x)		((x) & BIT(4))
 #define     IEP2_REG_RO_OSD_MAX_STS(x)			((x) & BIT(1))
 #define     IEP2_REG_RO_FRM_DONE_STS(x)			((x) & BIT(0))
+#define     IEP2_REG_RO_VALID_INT_STS(x)		((x) & (BIT(5) | BIT(4) | BIT(0)))
 #define IEP2_REG_INT_RAW_STS			0x002c
 #define IEP2_REG_VIR_SRC_IMG_WIDTH		0x0030
 #define     IEP2_REG_SRC_VIR_UV_STRIDE(x)		(((x) & 0xffff) << 16)
-- 
2.35.3

