From 7cd2aae8f904cfe25af2679cb557b8cdc6266676 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E9=BB=84=E6=B6=9B?= <huangtao@rock-chips.com>
Date: Sat, 30 Jul 2011 23:01:28 +0800
Subject: [PATCH] Revert "PM: wakelock: Don't dump unfrozen task list when
 aborting try_to_freeze_tasks after less than one second"

This reverts commit ddbad8da3109a04b623976e9585f10a184694843.

Conflicts:

	kernel/power/process.c
---
 kernel/power/process.c | 22 ++++++++++++----------
 1 file changed, 12 insertions(+), 10 deletions(-)

diff --git a/kernel/power/process.c b/kernel/power/process.c
index c713cdabd239..7b85cba64e62 100644
--- a/kernel/power/process.c
+++ b/kernel/power/process.c
@@ -84,20 +84,22 @@ static int try_to_freeze_tasks(bool sig_only)
 		 * and caller must call thaw_processes() if something fails),
 		 * but it cleans up leftover PF_FREEZE requests.
 		 */
-		printk("\n");
-		printk(KERN_ERR "Freezing of tasks %s after %d.%02d seconds "
-				"(%d tasks refusing to freeze):\n",
-				wakeup ? "aborted" : "failed",
-				elapsed_csecs / 100, elapsed_csecs % 100, todo);
-		if(!wakeup)
+		if(wakeup) {
+			printk("\n");
+			printk(KERN_ERR "Freezing of %s aborted\n",
+					sig_only ? "user space " : "tasks ");
+		}
+		else {
+			printk("\n");
+			printk(KERN_ERR "Freezing of tasks failed after %d.%02d seconds "
+					"(%d tasks refusing to freeze):\n",
+					elapsed_csecs / 100, elapsed_csecs % 100, todo);
 			show_state();
-		else
-			print_active_wake_locks(WAKE_LOCK_SUSPEND);
+		}
 		read_lock(&tasklist_lock);
 		do_each_thread(g, p) {
 			task_lock(p);
-			if (freezing(p) && !freezer_should_skip(p) &&
-							elapsed_csecs > 100)
+			if (freezing(p) && !freezer_should_skip(p))
 				printk(KERN_ERR " %s\n", p->comm);
 			cancel_freezing(p);
 			task_unlock(p);
-- 
2.35.3

