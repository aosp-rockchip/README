From 187fcbc7569032524a251287eca41498727afc97 Mon Sep 17 00:00:00 2001
From: Wu Liang feng <wulf@rock-chips.com>
Date: Mon, 18 Sep 2017 20:21:44 +0800
Subject: [PATCH] ANDROID: usb: gadget: fix NULL pointer dereference in
 mtp_read/write

The userspace may do an invalid mtp_open operation, e.g. the
usb function is configured to ADB only mode, but the userspace
may still call mtp_open operation because of error state machine
in the userspace. In this case, if the userspace try to set usb
function as ADB + MTP next time, it will call mtp_open again
and finally fail because that mtp_lock is busy, so the fp->
private_data is uninitiated. And this will cause cdev to be
NULL pointer in mtp_read and mtp_write.

Change-Id: Id82d0914ece850cfb2b3a8cacc2930cdccb5df46
Signed-off-by: Wu Liang feng <wulf@rock-chips.com>
---
 drivers/usb/gadget/function/f_mtp.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/usb/gadget/function/f_mtp.c b/drivers/usb/gadget/function/f_mtp.c
index 2279727d796d..0aa87bca51e7 100644
--- a/drivers/usb/gadget/function/f_mtp.c
+++ b/drivers/usb/gadget/function/f_mtp.c
@@ -543,6 +543,11 @@ static ssize_t mtp_read(struct file *fp, char __user *buf,
 	int ret = 0;
 	size_t len = 0;
 
+	if (!cdev) {
+		pr_err("%s: cdev is NULL, pls check mtp_open\n", __func__);
+		return -EINVAL;
+	}
+
 	DBG(cdev, "mtp_read(%zu)\n", count);
 
 	/* we will block until we're online */
@@ -627,6 +632,11 @@ static ssize_t mtp_write(struct file *fp, const char __user *buf,
 	int sendZLP = 0;
 	int ret;
 
+	if (!cdev) {
+		pr_err("%s: cdev is NULL, pls check mtp_open\n", __func__);
+		return -EINVAL;
+	}
+
 	DBG(cdev, "mtp_write(%zu)\n", count);
 
 	spin_lock_irq(&dev->lock);
-- 
2.35.3

