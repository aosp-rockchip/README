From b8c2578c5a8fcdd081f04e2edf385a39143710bd Mon Sep 17 00:00:00 2001
From: William Wu <william.wu@rock-chips.com>
Date: Fri, 25 Dec 2020 15:58:12 +0800
Subject: [PATCH] phy: rockchip: naneng-combphy: check status after deassert
 phy rst

Check the phy status after deassert phy reset for USB 3.0
mode, and wait at most 1ms for phy ready. If wait for phy
status ready timeout, just print warning log and continue
phy init for the time being.

Change-Id: I2677679a99153cf9ee0a043ab6cfb56d9e8dfdf2
Signed-off-by: William Wu <william.wu@rock-chips.com>
---
 .../rockchip/phy-rockchip-naneng-combphy.c    | 27 +++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/drivers/phy/rockchip/phy-rockchip-naneng-combphy.c b/drivers/phy/rockchip/phy-rockchip-naneng-combphy.c
index 5f79c2e3eb28..c07cc87eaef8 100644
--- a/drivers/phy/rockchip/phy-rockchip-naneng-combphy.c
+++ b/drivers/phy/rockchip/phy-rockchip-naneng-combphy.c
@@ -45,6 +45,7 @@ struct rockchip_combphy_grfcfg {
 	struct combphy_reg pipe_clk_25m;
 	struct combphy_reg pipe_clk_100m;
 	struct combphy_reg pipe_clk_ext;
+	struct combphy_reg pipe_phy_status;
 	struct combphy_reg con0_for_pcie;
 	struct combphy_reg con1_for_pcie;
 	struct combphy_reg con2_for_pcie;
@@ -107,6 +108,20 @@ static int param_write(struct regmap *base,
 	return regmap_write(base, reg->offset, val);
 }
 
+static u32 rockchip_combphy_is_ready(struct rockchip_combphy_priv *priv)
+{
+	const struct rockchip_combphy_grfcfg *cfg = priv->cfg->grfcfg;
+	u32 mask, val;
+
+	mask = GENMASK(cfg->pipe_phy_status.bitend,
+		       cfg->pipe_phy_status.bitstart);
+
+	regmap_read(priv->phy_grf, cfg->pipe_phy_status.offset, &val);
+	val = (val & mask) >> cfg->pipe_phy_status.bitstart;
+
+	return val;
+}
+
 static int rockchip_combphy_pcie_init(struct rockchip_combphy_priv *priv)
 {
 	int ret = 0;
@@ -175,6 +190,8 @@ static int rockchip_combphy_set_mode(struct rockchip_combphy_priv *priv)
 static int rockchip_combphy_init(struct phy *phy)
 {
 	struct rockchip_combphy_priv *priv = phy_get_drvdata(phy);
+	const struct rockchip_combphy_grfcfg *cfg = priv->cfg->grfcfg;
+	u32 val;
 	int ret;
 
 	ret = clk_bulk_prepare_enable(priv->num_clks, priv->clks);
@@ -191,6 +208,15 @@ static int rockchip_combphy_init(struct phy *phy)
 	if (ret)
 		goto err_clk;
 
+	if (priv->mode == PHY_TYPE_USB3) {
+		ret = readx_poll_timeout_atomic(rockchip_combphy_is_ready,
+						priv, val,
+						val == cfg->pipe_phy_status.enable,
+						10, 1000);
+		if (ret)
+			dev_warn(priv->dev, "wait phy status ready timeout\n");
+	}
+
 	return 0;
 
 err_clk:
@@ -494,6 +520,7 @@ static const struct rockchip_combphy_grfcfg rk3568_combphy_grfcfgs = {
 	.pipe_clk_25m		= { 0x0004, 14, 13, 0x00, 0x01 },
 	.pipe_clk_100m		= { 0x0004, 14, 13, 0x00, 0x02 },
 	.pipe_clk_ext		= { 0x000c, 9, 8, 0x02, 0x01 },
+	.pipe_phy_status	= { 0x0034, 6, 6, 0x01, 0x00 },
 	.con0_for_pcie		= { 0x0000, 15, 0, 0x00, 0x1000 },
 	.con1_for_pcie		= { 0x0004, 15, 0, 0x00, 0x0000 },
 	.con2_for_pcie		= { 0x0008, 15, 0, 0x00, 0x0101 },
-- 
2.35.3

