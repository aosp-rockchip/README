From b4a8810527daa3ca0475977a8a27f284a8c81d0f Mon Sep 17 00:00:00 2001
From: Shunqing Chen <csq@rock-chips.com>
Date: Tue, 25 Dec 2018 15:11:02 +0800
Subject: [PATCH] power: rk81x: fix suspend time error

the time get from do_gettimeofday and rtc_read_time
is different, and more than 80000 seconds.
so after resume the battery level jump down a lot.

Change-Id: Ica616240ce03dff73a65e6f724c28910e1786c81
Signed-off-by: Shunqing Chen <csq@rock-chips.com>
---
 drivers/power/rk816_battery.c | 23 +++++++++++-----
 drivers/power/rk817_battery.c | 51 ++++++++++++++++++++---------------
 drivers/power/rk818_battery.c | 23 +++++++++++-----
 3 files changed, 62 insertions(+), 35 deletions(-)

diff --git a/drivers/power/rk816_battery.c b/drivers/power/rk816_battery.c
index 0832ea3eeaf8..9c6f8dbd9126 100644
--- a/drivers/power/rk816_battery.c
+++ b/drivers/power/rk816_battery.c
@@ -172,7 +172,7 @@ struct rk816_battery {
 	struct wake_lock		wake_lock;
 	struct notifier_block           fb_nb;
 	struct timer_list		caltimer;
-	struct timeval			rtc_base;
+	time_t				rtc_base;
 	struct iio_channel		*iio_chan;
 	struct notifier_block		cable_cg_nb;
 	struct notifier_block		cable_host_nb;
@@ -4200,28 +4200,37 @@ static int rk816_bat_init_charger(struct rk816_battery *di)
 	return 0;
 }
 
-static int rk816_bat_rtc_sleep_sec(struct rk816_battery *di)
+static time_t rk816_get_rtc_sec(void)
 {
 	int err;
-	int interval_sec = 0;
 	struct rtc_time tm;
 	struct timespec tv = { .tv_nsec = NSEC_PER_SEC >> 1, };
 	struct rtc_device *rtc = rtc_class_open(CONFIG_RTC_HCTOSYS_DEVICE);
+	time_t sec;
 
 	err = rtc_read_time(rtc, &tm);
 	if (err) {
-		dev_err(rtc->dev.parent, "hctosys: read hardware clk failed\n");
+		dev_err(rtc->dev.parent, "read hardware clk failed\n");
 		return 0;
 	}
 
 	err = rtc_valid_tm(&tm);
 	if (err) {
-		dev_err(rtc->dev.parent, "hctosys: invalid date time\n");
+		dev_err(rtc->dev.parent, "invalid date time\n");
 		return 0;
 	}
 
 	rtc_tm_to_time(&tm, &tv.tv_sec);
-	interval_sec = tv.tv_sec - di->rtc_base.tv_sec;
+	sec = tv.tv_sec;
+
+	return sec;
+}
+
+static int rk816_bat_rtc_sleep_sec(struct rk816_battery *di)
+{
+	int interval_sec;
+
+	interval_sec = rk816_get_rtc_sec() - di->rtc_base;
 
 	return (interval_sec > 0) ? interval_sec : 0;
 }
@@ -4800,7 +4809,7 @@ static int rk816_battery_suspend(struct platform_device *dev,
 	di->current_avg = rk816_bat_get_avg_current(di);
 	di->remain_cap = rk816_bat_get_coulomb_cap(di);
 	di->rsoc = rk816_bat_get_rsoc(di);
-	do_gettimeofday(&di->rtc_base);
+	di->rtc_base = rk816_get_rtc_sec();
 	rk816_bat_save_data(di);
 	st = (rk816_bat_read(di, RK816_SUP_STS_REG) & CHRG_STATUS_MSK) >> 4;
 	di->slp_dcdc_en_reg = rk816_bat_read(di, RK816_SLP_DCDC_EN_REG);
diff --git a/drivers/power/rk817_battery.c b/drivers/power/rk817_battery.c
index 8114d448c93b..23615b93a839 100644
--- a/drivers/power/rk817_battery.c
+++ b/drivers/power/rk817_battery.c
@@ -550,7 +550,7 @@ struct rk817_battery_device {
 	int				zero_batocv_to_cap;
 	int				zero_xsoc;
 	unsigned long			finish_base;
-	struct timeval			rtc_base;
+	time_t				rtc_base;
 	int				sm_remain_cap;
 	int				sm_linek;
 	int				sm_chrg_dsoc;
@@ -2768,6 +2768,32 @@ static void rk817_battery_shutdown(struct platform_device *dev)
 {
 }
 
+static time_t rk817_get_rtc_sec(void)
+{
+	int err;
+	struct rtc_time tm;
+	struct timespec tv = { .tv_nsec = NSEC_PER_SEC >> 1, };
+	struct rtc_device *rtc = rtc_class_open(CONFIG_RTC_HCTOSYS_DEVICE);
+	time_t sec;
+
+	err = rtc_read_time(rtc, &tm);
+	if (err) {
+		dev_err(rtc->dev.parent, "read hardware clk failed\n");
+		return 0;
+	}
+
+	err = rtc_valid_tm(&tm);
+	if (err) {
+		dev_err(rtc->dev.parent, "invalid date time\n");
+		return 0;
+	}
+
+	rtc_tm_to_time(&tm, &tv.tv_sec);
+	sec = tv.tv_sec;
+
+	return sec;
+}
+
 #ifdef CONFIG_PM_SLEEP
 static int  rk817_bat_pm_suspend(struct device *dev)
 {
@@ -2789,7 +2815,7 @@ static int  rk817_bat_pm_suspend(struct device *dev)
 	battery->remain_cap = rk817_bat_get_capacity_uah(battery);
 	battery->rsoc = rk817_bat_get_rsoc(battery);
 
-	do_gettimeofday(&battery->rtc_base);
+	battery->rtc_base = rk817_get_rtc_sec();
 	rk817_bat_save_data(battery);
 
 	if (battery->sleep_chrg_status != CHARGE_FINISH)
@@ -2824,26 +2850,9 @@ static int  rk817_bat_pm_suspend(struct device *dev)
 
 static int rk817_bat_rtc_sleep_sec(struct rk817_battery_device *battery)
 {
-	int err;
-	int interval_sec = 0;
-	struct rtc_time tm;
-	struct timespec tv = { .tv_nsec = NSEC_PER_SEC >> 1, };
-	struct rtc_device *rtc = rtc_class_open(CONFIG_RTC_HCTOSYS_DEVICE);
+	int interval_sec;
 
-	err = rtc_read_time(rtc, &tm);
-	if (err) {
-		dev_err(rtc->dev.parent, "hctosys: read hardware clk failed\n");
-		return 0;
-	}
-
-	err = rtc_valid_tm(&tm);
-	if (err) {
-		dev_err(rtc->dev.parent, "hctosys: invalid date time\n");
-		return 0;
-	}
-
-	rtc_tm_to_time(&tm, &tv.tv_sec);
-	interval_sec = tv.tv_sec - battery->rtc_base.tv_sec;
+	interval_sec = rk817_get_rtc_sec() - battery->rtc_base;
 
 	return (interval_sec > 0) ? interval_sec : 0;
 }
diff --git a/drivers/power/rk818_battery.c b/drivers/power/rk818_battery.c
index c060808d3689..579238112d98 100644
--- a/drivers/power/rk818_battery.c
+++ b/drivers/power/rk818_battery.c
@@ -168,7 +168,7 @@ struct rk818_battery {
 	struct wake_lock		wake_lock;
 	struct notifier_block           fb_nb;
 	struct timer_list		caltimer;
-	struct timeval			rtc_base;
+	time_t				rtc_base;
 	int				bat_res;
 	int				chrg_status;
 	bool				is_initialized;
@@ -3062,28 +3062,37 @@ static void rk818_bat_init_info(struct rk818_battery *di)
 		       SAMPLE_RES_DIV1 : SAMPLE_RES_DIV2;
 }
 
-static int rk818_bat_rtc_sleep_sec(struct rk818_battery *di)
+static time_t rk818_get_rtc_sec(void)
 {
 	int err;
-	int interval_sec = 0;
 	struct rtc_time tm;
 	struct timespec tv = { .tv_nsec = NSEC_PER_SEC >> 1, };
 	struct rtc_device *rtc = rtc_class_open(CONFIG_RTC_HCTOSYS_DEVICE);
+	time_t sec;
 
 	err = rtc_read_time(rtc, &tm);
 	if (err) {
-		dev_err(rtc->dev.parent, "hctosys: read hardware clk failed\n");
+		dev_err(rtc->dev.parent, "read hardware clk failed\n");
 		return 0;
 	}
 
 	err = rtc_valid_tm(&tm);
 	if (err) {
-		dev_err(rtc->dev.parent, "hctosys: invalid date time\n");
+		dev_err(rtc->dev.parent, "invalid date time\n");
 		return 0;
 	}
 
 	rtc_tm_to_time(&tm, &tv.tv_sec);
-	interval_sec = tv.tv_sec - di->rtc_base.tv_sec;
+	sec = tv.tv_sec;
+
+	return sec;
+}
+
+static int rk818_bat_rtc_sleep_sec(struct rk818_battery *di)
+{
+	int interval_sec;
+
+	interval_sec = rk818_get_rtc_sec() - di->rtc_base;
 
 	return (interval_sec > 0) ? interval_sec : 0;
 }
@@ -3409,7 +3418,7 @@ static int rk818_battery_suspend(struct platform_device *dev,
 	di->current_avg = rk818_bat_get_avg_current(di);
 	di->remain_cap = rk818_bat_get_coulomb_cap(di);
 	di->rsoc = rk818_bat_get_rsoc(di);
-	do_gettimeofday(&di->rtc_base);
+	di->rtc_base = rk818_get_rtc_sec();
 	rk818_bat_save_data(di);
 	st = (rk818_bat_read(di, RK818_SUP_STS_REG) & CHRG_STATUS_MSK) >> 4;
 
-- 
2.35.3

