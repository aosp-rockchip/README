From 79c453a95aa5c073615c89cdb35b3958567d61d4 Mon Sep 17 00:00:00 2001
From: Wang Panzhenzhuan <randy.wang@rock-chips.com>
Date: Tue, 29 Oct 2019 11:02:09 +0800
Subject: [PATCH] media: rockchip: cif: fix compile failure on kernel-4.19

Change-Id: I56537c637deb714f186e163227c194b65968c187
Signed-off-by: Wang Panzhenzhuan <randy.wang@rock-chips.com>
---
 drivers/media/platform/Kconfig                |  1 +
 drivers/media/platform/Makefile               |  1 +
 drivers/media/platform/rockchip/cif/capture.c | 27 ++-----
 drivers/media/platform/rockchip/cif/dev.c     | 76 ++-----------------
 drivers/media/platform/rockchip/cif/dev.h     |  1 -
 5 files changed, 13 insertions(+), 93 deletions(-)

diff --git a/drivers/media/platform/Kconfig b/drivers/media/platform/Kconfig
index e5d4317b5ad1..b1a972cedf4f 100644
--- a/drivers/media/platform/Kconfig
+++ b/drivers/media/platform/Kconfig
@@ -137,6 +137,7 @@ source "drivers/media/platform/am437x/Kconfig"
 source "drivers/media/platform/xilinx/Kconfig"
 source "drivers/media/platform/rcar-vin/Kconfig"
 source "drivers/media/platform/atmel/Kconfig"
+source "drivers/media/platform/rockchip/cif/Kconfig"
 source "drivers/media/platform/rockchip/isp1/Kconfig"
 
 config VIDEO_TI_CAL
diff --git a/drivers/media/platform/Makefile b/drivers/media/platform/Makefile
index 585251480e30..ce94f5e8a1d3 100644
--- a/drivers/media/platform/Makefile
+++ b/drivers/media/platform/Makefile
@@ -67,6 +67,7 @@ obj-$(CONFIG_VIDEO_RENESAS_JPU)		+= rcar_jpu.o
 obj-$(CONFIG_VIDEO_RENESAS_VSP1)	+= vsp1/
 
 obj-$(CONFIG_VIDEO_ROCKCHIP_RGA)	+= rockchip/rga/
+obj-$(CONFIG_VIDEO_ROCKCHIP_CIF)	+= rockchip/cif/
 obj-$(CONFIG_VIDEO_ROCKCHIP_ISP1)	+= rockchip/isp1/
 
 obj-y	+= omap/
diff --git a/drivers/media/platform/rockchip/cif/capture.c b/drivers/media/platform/rockchip/cif/capture.c
index 8682ea5d7384..1b4993096702 100644
--- a/drivers/media/platform/rockchip/cif/capture.c
+++ b/drivers/media/platform/rockchip/cif/capture.c
@@ -720,27 +720,20 @@ static void rkcif_stream_stop(struct rkcif_stream *stream)
 }
 
 static int rkcif_queue_setup(struct vb2_queue *queue,
-			     const void *parg,
 			     unsigned int *num_buffers,
 			     unsigned int *num_planes,
 			     unsigned int sizes[],
-			     void *alloc_ctxs[])
+			     struct device *alloc_ctxs[])
 {
 	struct rkcif_stream *stream = queue->drv_priv;
 	struct rkcif_device *dev = stream->cifdev;
-	const struct v4l2_format *pfmt = parg;
 	const struct v4l2_pix_format_mplane *pixm;
 	const struct cif_output_fmt *cif_fmt;
 	u32 i;
 
-	if (pfmt) {
-		pixm = &pfmt->fmt.pix_mp;
-		cif_fmt = find_output_fmt(stream, pixm->pixelformat);
-	} else {
-		pixm = &stream->pixm;
-		cif_fmt = stream->cif_fmt_out;
-	}
 
+	pixm = &stream->pixm;
+	cif_fmt = stream->cif_fmt_out;
 	*num_planes = cif_fmt->mplanes;
 
 	for (i = 0; i < cif_fmt->mplanes; i++) {
@@ -748,7 +741,6 @@ static int rkcif_queue_setup(struct vb2_queue *queue,
 
 		plane_fmt = &pixm->plane_fmt[i];
 		sizes[i] = plane_fmt->sizeimage;
-		alloc_ctxs[i] = dev->alloc_ctx;
 	}
 
 	v4l2_dbg(1, rkcif_debug, &dev->v4l2_dev, "%s count %d, size %d\n",
@@ -1129,6 +1121,7 @@ static int rkcif_init_vb2_queue(struct vb2_queue *q,
 	q->min_buffers_needed = CIF_REQ_BUFS_MIN;
 	q->timestamp_flags = V4L2_BUF_FLAG_TIMESTAMP_MONOTONIC;
 	q->lock = &stream->vlock;
+	q->dev = stream->cifdev->dev;
 
 	return vb2_queue_init(q);
 }
@@ -1425,13 +1418,6 @@ int rkcif_register_stream_vdev(struct rkcif_device *dev)
 	vdev->vfl_dir = VFL_DIR_RX;
 	stream->pad.flags = MEDIA_PAD_FL_SINK;
 
-	dev->alloc_ctx = vb2_dma_contig_init_ctx(v4l2_dev->dev);
-	if (IS_ERR(dev->alloc_ctx)) {
-		v4l2_err(&dev->v4l2_dev, "Failed to init memory allocator\n");
-		ret = PTR_ERR(dev->alloc_ctx);
-		goto err;
-	}
-
 	rkcif_init_vb2_queue(&stream->buf_queue, stream,
 			     V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE);
 	vdev->queue = &stream->buf_queue;
@@ -1443,14 +1429,13 @@ int rkcif_register_stream_vdev(struct rkcif_device *dev)
 		return ret;
 	}
 
-	ret = media_entity_init(&vdev->entity, 1, &stream->pad, 0);
+	ret = media_entity_pads_init(&vdev->entity, 1, &stream->pad);
 	if (ret < 0)
 		goto unreg;
 
 	return 0;
 unreg:
 	video_unregister_device(vdev);
-err:
 	return ret;
 }
 
@@ -1465,7 +1450,7 @@ static void rkcif_vb_done_oneframe(struct rkcif_stream *stream,
 		vb2_set_plane_payload(&vb_done->vb2_buf, i,
 			stream->pixm.plane_fmt[i].sizeimage);
 	}
-	vb_done->timestamp = ns_to_timeval(ktime_get_ns());
+	vb_done->vb2_buf.timestamp = ktime_get_ns();
 	vb2_buffer_done(&vb_done->vb2_buf, VB2_BUF_STATE_DONE);
 }
 
diff --git a/drivers/media/platform/rockchip/cif/dev.c b/drivers/media/platform/rockchip/cif/dev.c
index d08aabdd4ae0..bf16d02366a6 100644
--- a/drivers/media/platform/rockchip/cif/dev.c
+++ b/drivers/media/platform/rockchip/cif/dev.c
@@ -16,7 +16,6 @@
 #include <linux/reset.h>
 #include <linux/pm_runtime.h>
 #include <linux/pinctrl/consumer.h>
-#include <linux/dma-iommu.h>
 #include <media/v4l2-fwnode.h>
 
 #include "dev.h"
@@ -57,9 +56,9 @@ static int rkcif_create_links(struct rkcif_device *dev)
 			return -ENXIO;
 		}
 
-		ret = media_entity_create_link(&sensor->sd->entity,
-				pad, &dev->stream.vdev.entity, 0,
-				s ? 0 : MEDIA_LNK_FL_ENABLED);
+		ret = media_create_pad_link(&sensor->sd->entity,
+					 pad, &dev->stream.vdev.entity, 0,
+					 s ? 0 : MEDIA_LNK_FL_ENABLED);
 		if (ret) {
 			dev_err(dev->dev, "failed to create link for %s\n",
 				sensor->sd->name);
@@ -379,63 +378,6 @@ static int rkcif_enable_sys_clk(struct rkcif_device *cif_dev)
 	return ret;
 }
 
-static int rkcif_iommu_init(struct rkcif_device *cif_dev)
-{
-	struct iommu_group *group;
-	int ret;
-
-	cif_dev->domain = iommu_domain_alloc(&platform_bus_type);
-	if (!cif_dev->domain)
-		return -ENOMEM;
-
-	ret = iommu_get_dma_cookie(cif_dev->domain);
-	if (ret)
-		goto err_free_domain;
-
-	group = iommu_group_get(cif_dev->dev);
-	if (!group) {
-		group = iommu_group_alloc();
-		if (IS_ERR(group)) {
-			ret = PTR_ERR(group);
-			goto err_put_cookie;
-		}
-		ret = iommu_group_add_device(group, cif_dev->dev);
-		iommu_group_put(group);
-		if (ret)
-			goto err_put_cookie;
-	}
-	iommu_group_put(group);
-
-	ret = iommu_attach_device(cif_dev->domain, cif_dev->dev);
-	if (ret)
-		goto err_put_cookie;
-	if (!common_iommu_setup_dma_ops(cif_dev->dev, 0x10000000, SZ_2G,
-					cif_dev->domain->ops)) {
-		ret = -ENODEV;
-		goto err_detach;
-	}
-
-	return 0;
-
-err_detach:
-	iommu_detach_device(cif_dev->domain, cif_dev->dev);
-err_put_cookie:
-	iommu_put_dma_cookie(cif_dev->domain);
-err_free_domain:
-	iommu_domain_free(cif_dev->domain);
-
-	dev_err(cif_dev->dev, "Failed to setup IOMMU, ret(%d)\n", ret);
-
-	return ret;
-}
-
-static void rkcif_iommu_cleanup(struct rkcif_device *cif_dev)
-{
-	iommu_detach_device(cif_dev->domain, cif_dev->dev);
-	iommu_put_dma_cookie(cif_dev->domain);
-	iommu_domain_free(cif_dev->domain);
-}
-
 static inline bool is_iommu_enable(struct device *dev)
 {
 	struct device_node *iommu;
@@ -458,9 +400,6 @@ void rkcif_soft_reset(struct rkcif_device *cif_dev)
 {
 	unsigned int i;
 
-	if (cif_dev->iommu_en)
-		rkcif_iommu_cleanup(cif_dev);
-
 	for (i = 0; i < ARRAY_SIZE(cif_dev->cif_rst); i++)
 		if (cif_dev->cif_rst[i])
 			reset_control_assert(cif_dev->cif_rst[i]);
@@ -469,8 +408,6 @@ void rkcif_soft_reset(struct rkcif_device *cif_dev)
 		if (cif_dev->cif_rst[i])
 			reset_control_deassert(cif_dev->cif_rst[i]);
 
-	if (cif_dev->iommu_en)
-		rkcif_iommu_init(cif_dev);
 }
 
 static int rkcif_plat_probe(struct platform_device *pdev)
@@ -594,6 +531,7 @@ static int rkcif_plat_probe(struct platform_device *pdev)
 	if (ret < 0)
 		return ret;
 
+	media_device_init(&cif_dev->media_dev);
 	ret = media_device_register(&cif_dev->media_dev);
 	if (ret < 0) {
 		v4l2_err(v4l2_dev, "Failed to register media device: %d\n",
@@ -607,9 +545,7 @@ static int rkcif_plat_probe(struct platform_device *pdev)
 		goto err_unreg_media_dev;
 
 	cif_dev->iommu_en = is_iommu_enable(dev);
-	if (cif_dev->iommu_en) {
-		rkcif_iommu_init(cif_dev);
-	} else {
+	if (!(cif_dev->iommu_en)) {
 		ret = of_reserved_mem_device_init(dev);
 		if (ret)
 			v4l2_warn(v4l2_dev,
@@ -632,8 +568,6 @@ static int rkcif_plat_remove(struct platform_device *pdev)
 	struct rkcif_device *cif_dev = platform_get_drvdata(pdev);
 
 	pm_runtime_disable(&pdev->dev);
-	if (cif_dev->iommu_en)
-		rkcif_iommu_cleanup(cif_dev);
 
 	media_device_unregister(&cif_dev->media_dev);
 	v4l2_device_unregister(&cif_dev->v4l2_dev);
diff --git a/drivers/media/platform/rockchip/cif/dev.h b/drivers/media/platform/rockchip/cif/dev.h
index 947b61a34f3c..5098cf8091f7 100644
--- a/drivers/media/platform/rockchip/cif/dev.h
+++ b/drivers/media/platform/rockchip/cif/dev.h
@@ -190,7 +190,6 @@ struct rkcif_device {
 	void __iomem			*csi_base;
 	struct clk			*clks[RKCIF_MAX_BUS_CLK];
 	int				clk_size;
-	struct vb2_alloc_ctx		*alloc_ctx;
 	bool				iommu_en;
 	struct iommu_domain		*domain;
 	struct reset_control		*cif_rst[RKCIF_MAX_RESET];
-- 
2.35.3

