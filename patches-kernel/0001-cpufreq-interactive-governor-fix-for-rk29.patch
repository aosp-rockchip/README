From dc803d68dda8a100657d74ceb9d81f2c184045d5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E9=BB=84=E6=B6=9B?= <huangtao@rock-chips.com>
Date: Wed, 28 Dec 2011 17:22:06 +0800
Subject: [PATCH] cpufreq: interactive governor: fix for rk29

default hispeed_freq 816MHz
default go_hispeed_load 80%
update target_freq with policy->cur in timer
---
 drivers/cpufreq/cpufreq_interactive.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/drivers/cpufreq/cpufreq_interactive.c b/drivers/cpufreq/cpufreq_interactive.c
index 45266d5b6cd5..e2664a629b17 100644
--- a/drivers/cpufreq/cpufreq_interactive.c
+++ b/drivers/cpufreq/cpufreq_interactive.c
@@ -63,7 +63,11 @@ static struct mutex set_speed_lock;
 static u64 hispeed_freq;
 
 /* Go to hi speed when CPU load at or above this value. */
+#ifdef CONFIG_ARCH_RK29
+#define DEFAULT_GO_HISPEED_LOAD 80
+#else
 #define DEFAULT_GO_HISPEED_LOAD 95
+#endif
 static unsigned long go_hispeed_load;
 
 /*
@@ -182,6 +186,9 @@ static void cpufreq_interactive_timer(unsigned long data)
 
 	new_freq = pcpu->freq_table[index].frequency;
 
+#ifdef CONFIG_ARCH_RK29
+	pcpu->target_freq = pcpu->policy->cur;
+#endif
 	if (pcpu->target_freq == new_freq)
 		goto rearm_if_notmax;
 
@@ -563,7 +570,11 @@ static int cpufreq_governor_interactive(struct cpufreq_policy *policy,
 		}
 
 		if (!hispeed_freq)
+#ifdef CONFIG_ARCH_RK29
+			hispeed_freq = 816000;
+#else
 			hispeed_freq = policy->max;
+#endif
 
 		/*
 		 * Do not register the idle hook and create sysfs
-- 
2.35.3

