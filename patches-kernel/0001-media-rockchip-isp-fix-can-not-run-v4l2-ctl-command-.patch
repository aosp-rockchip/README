From f4aac81d8b5a36b22c60624778ed4a4555b2be9b Mon Sep 17 00:00:00 2001
From: Hu Kejun <william.hu@rock-chips.com>
Date: Mon, 13 Jul 2020 14:19:34 +0800
Subject: [PATCH] media: rockchip: isp: fix can not run v4l2-ctl command first
 time after boot

Signed-off-by: Hu Kejun <william.hu@rock-chips.com>
Change-Id: I5579ac72aeb13e89c5a175870d9a5783f70f4ff0
---
 drivers/media/platform/rockchip/isp/bridge.c |  1 +
 drivers/media/platform/rockchip/isp/rkisp.c  | 27 ++++++++++++--------
 2 files changed, 17 insertions(+), 11 deletions(-)

diff --git a/drivers/media/platform/rockchip/isp/bridge.c b/drivers/media/platform/rockchip/isp/bridge.c
index 2ee023fdeab7..4399b2f73fba 100644
--- a/drivers/media/platform/rockchip/isp/bridge.c
+++ b/drivers/media/platform/rockchip/isp/bridge.c
@@ -654,6 +654,7 @@ static long bridge_ioctl(struct v4l2_subdev *sd, unsigned int cmd, void *arg)
 		dev->work_mode = mode->work_mode;
 		dev->buf_num = mode->buf_num;
 		ret = config_mode(dev);
+		rkisp_chk_tb_over(dev->ispdev);
 		break;
 	default:
 		ret = -ENOIOCTLCMD;
diff --git a/drivers/media/platform/rockchip/isp/rkisp.c b/drivers/media/platform/rockchip/isp/rkisp.c
index 5464dec8746b..8a4863a9f377 100644
--- a/drivers/media/platform/rockchip/isp/rkisp.c
+++ b/drivers/media/platform/rockchip/isp/rkisp.c
@@ -1863,15 +1863,6 @@ static long rkisp_ioctl(struct v4l2_subdev *sd, unsigned int cmd, void *arg)
 			isp_dev->resmem_pa = 0;
 			isp_dev->resmem_size = 0;
 		}
-
-		v4l2_info(sd, "thunderboot info: %d, %d, %d, %d, %d, %d, 0x%x\n",
-			  head->enable,
-			  head->complete,
-			  head->frm_total,
-			  head->hdr_mode,
-			  head->width,
-			  head->height,
-			  head->bus_fmt);
 		break;
 	case RKISP_CMD_FREE_SHARED_BUF:
 		if (isp_dev->resmem_pa && isp_dev->resmem_size)
@@ -2043,6 +2034,7 @@ void rkisp_unregister_isp_subdev(struct rkisp_device *isp_dev)
 void rkisp_chk_tb_over(struct rkisp_device *isp_dev)
 {
 	struct rkisp_thunderboot_resmem_head *head;
+	enum rkisp_tb_state tb_state;
 	void *resmem_va;
 	u32 i;
 
@@ -2067,10 +2059,23 @@ void rkisp_chk_tb_over(struct rkisp_device *isp_dev)
 					  "wait thunderboot over timeout\n");
 		}
 
-		if (head->complete != RKISP_TB_OK)
+		v4l2_info(&isp_dev->v4l2_dev,
+			  "thunderboot info: %d, %d, %d, %d, %d, %d, 0x%x\n",
+			  head->enable,
+			  head->complete,
+			  head->frm_total,
+			  head->hdr_mode,
+			  head->width,
+			  head->height,
+			  head->bus_fmt);
+
+		tb_state = RKISP_TB_OK;
+		if (head->complete != RKISP_TB_OK) {
 			head->frm_total = 0;
+			tb_state = RKISP_TB_NG;
+		}
 
-		rkisp_tb_set_state((enum rkisp_tb_state)head->complete);
+		rkisp_tb_set_state(tb_state);
 		rkisp_tb_unprotect_clk();
 		rkisp_register_irq(isp_dev);
 		isp_dev->is_thunderboot = false;
-- 
2.35.3

