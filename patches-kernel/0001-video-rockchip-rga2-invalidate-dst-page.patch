From e0159849f01be6998471062c4bfb27536081d838 Mon Sep 17 00:00:00 2001
From: Yu Qiaowei <cerf.yu@rock-chips.com>
Date: Mon, 14 Sep 2020 15:40:59 +0800
Subject: [PATCH] video/rockchip: rga2: invalidate dst page.

When dst needs to write data to the virtual address,
it needs to make the dst page invlaid after rga runs.

Signed-off-by: Yu Qiaowei <cerf.yu@rock-chips.com>
Change-Id: I7abf580fbca302dba043bb0f84d32cb0369e4e48
---
 drivers/video/rockchip/rga2/rga2.h          |  1 +
 drivers/video/rockchip/rga2/rga2_drv.c      | 17 +++++++++++++++++
 drivers/video/rockchip/rga2/rga2_mmu_info.c |  8 +++++++-
 drivers/video/rockchip/rga2/rga2_mmu_info.h |  1 +
 4 files changed, 26 insertions(+), 1 deletion(-)

diff --git a/drivers/video/rockchip/rga2/rga2.h b/drivers/video/rockchip/rga2/rga2.h
index 05b7e8a15480..229cc6477c6d 100644
--- a/drivers/video/rockchip/rga2/rga2.h
+++ b/drivers/video/rockchip/rga2/rga2.h
@@ -682,6 +682,7 @@ struct rga2_reg {
 
 	uint32_t *MMU_base;
 	uint32_t MMU_len;
+	uint32_t MMU_count;
 	bool MMU_map;
 
 	struct sg_table *sg_src0;
diff --git a/drivers/video/rockchip/rga2/rga2_drv.c b/drivers/video/rockchip/rga2/rga2_drv.c
index 1953d5bf3bdb..eb534194c2fa 100644
--- a/drivers/video/rockchip/rga2/rga2_drv.c
+++ b/drivers/video/rockchip/rga2/rga2_drv.c
@@ -2024,6 +2024,22 @@ static int rga2_release(struct inode *inode, struct file *file)
 	return 0;
 }
 
+static void RGA2_flush_page(void)
+{
+	struct rga2_reg *reg;
+	int i;
+
+	reg = list_entry(rga2_service.running.prev,
+			 struct rga2_reg, status_link);
+
+	if (reg == NULL && reg->MMU_base == NULL)
+		return;
+
+	for (i = 0; i < reg->MMU_count; i++)
+		rga2_dma_flush_page(phys_to_page(reg->MMU_base[i]),
+				    MMU_UNMAP_INVALID);
+}
+
 static irqreturn_t rga2_irq_thread(int irq, void *dev_id)
 {
 #if RGA2_DEBUGFS
@@ -2031,6 +2047,7 @@ static irqreturn_t rga2_irq_thread(int irq, void *dev_id)
 		INFO("irqthread INT[%x],STATS[%x]\n", rga2_read(RGA2_INT),
 		     rga2_read(RGA2_STATUS));
 #endif
+	RGA2_flush_page();
 	mutex_lock(&rga2_service.lock);
 	if (rga2_service.enable) {
 		rga2_del_running_list();
diff --git a/drivers/video/rockchip/rga2/rga2_mmu_info.c b/drivers/video/rockchip/rga2/rga2_mmu_info.c
index 9b16b540ad09..e05995ea401c 100644
--- a/drivers/video/rockchip/rga2/rga2_mmu_info.c
+++ b/drivers/video/rockchip/rga2/rga2_mmu_info.c
@@ -43,7 +43,7 @@ void rga2_dma_flush_range(void *pstart, void *pend)
 	dma_sync_single_for_device(rga2_drvdata->dev, virt_to_phys(pstart), pend - pstart, DMA_TO_DEVICE);
 }
 
-static void rga2_dma_flush_page(struct page *page, int map)
+void rga2_dma_flush_page(struct page *page, int map)
 {
 	dma_addr_t paddr;
 
@@ -766,6 +766,9 @@ static int rga2_mmu_info_BitBlt_mode(struct rga2_reg *reg, struct rga2_req *req)
 						       req->src.format,
 						       2);
 #endif
+			/* Save the physical address of dst to invalid cache */
+			reg->MMU_base = (MMU_Base + Src0MemSize + Src1MemSize);
+			reg->MMU_count = DstPageCount;
 		} else {
 			ret = rga2_MapUserMemory(&pages[0], MMU_Base
 						 + Src0MemSize + Src1MemSize,
@@ -777,6 +780,9 @@ static int rga2_mmu_info_BitBlt_mode(struct rga2_reg *reg, struct rga2_req *req)
 					       req->src.vir_h, req->src.format,
 					       2);
 #endif
+			/* Save the physical address of dst to invalid cache */
+			reg->MMU_base = (MMU_Base + Src0MemSize + Src1MemSize);
+			reg->MMU_count = DstPageCount;
 		}
 		if (ret < 0) {
 			pr_err("rga2 map dst memory failed\n");
diff --git a/drivers/video/rockchip/rga2/rga2_mmu_info.h b/drivers/video/rockchip/rga2/rga2_mmu_info.h
index 36e386c62caf..551ac974ab4c 100644
--- a/drivers/video/rockchip/rga2/rga2_mmu_info.h
+++ b/drivers/video/rockchip/rga2/rga2_mmu_info.h
@@ -26,6 +26,7 @@ enum {
 
 int rga2_set_mmu_info(struct rga2_reg *reg, struct rga2_req *req);
 void rga2_dma_flush_range(void *pstart, void *pend);
+void rga2_dma_flush_page(struct page *page, int map);
 
 #endif
 
-- 
2.35.3

