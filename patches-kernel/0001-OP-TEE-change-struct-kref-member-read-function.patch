From dc2876e75b100957f920614879ef51e217a3ea04 Mon Sep 17 00:00:00 2001
From: Elon Zhang <zhangzj@rock-chips.com>
Date: Tue, 25 Jun 2019 10:33:09 +0800
Subject: [PATCH] OP-TEE: change 'struct kref' member read function

Since the refcount_t 'atomic' type is used to implement 'struct kref',
refcount_read() is used to replace atomic_read().

Change-Id: I9fc7876cfd7ed8107551bc1909fa0305ab41d9fd
Signed-off-by: Elon Zhang <zhangzj@rock-chips.com>
---
 security/optee_linuxdriver/core/tee_context.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/security/optee_linuxdriver/core/tee_context.c b/security/optee_linuxdriver/core/tee_context.c
index 79a5afd3b3a5..7fae11aea9b9 100644
--- a/security/optee_linuxdriver/core/tee_context.c
+++ b/security/optee_linuxdriver/core/tee_context.c
@@ -50,7 +50,7 @@ int tee_context_dump(struct tee *tee, char *buff, size_t len)
 		pos += sprintf(buff + pos,
 				"[%02d] ctx=%p (refcount=%d) (usr=%d)",
 				i, ctx,
-				(int)atomic_read(&ctx->refcount.
+				(int)refcount_read(&ctx->refcount.
 					refcount),
 				ctx->usr_client);
 		pos += sprintf(buff + pos, "name=\"%s\" (tgid=%d)\n",
@@ -193,7 +193,7 @@ void tee_context_get(struct tee_context *ctx)
 	kref_get(&ctx->refcount);
 
 	dev_dbg(_DEV(ctx->tee), "%s: ctx=%p, kref=%d\n", __func__,
-		ctx, (int)atomic_read(&ctx->refcount.refcount));
+		ctx, (int)refcount_read(&ctx->refcount.refcount));
 }
 
 static int is_in_list(struct tee *tee, struct list_head *entry)
@@ -224,7 +224,7 @@ void tee_context_put(struct tee_context *ctx)
 	kref_put(&ctx->refcount, _tee_context_do_release);
 
 	dev_dbg(_DEV(tee), "%s: ctx=%p, kref=%d\n", __func__,
-		_ctx, (int)atomic_read(&ctx->refcount.refcount));
+		_ctx, (int)refcount_read(&ctx->refcount.refcount));
 }
 
 /**
-- 
2.35.3

