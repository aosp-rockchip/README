From 81e58a6d23d8ab11cd9330c203c5999274e63e2e Mon Sep 17 00:00:00 2001
From: Putin Lee <putin.li@rock-chips.com>
Date: Wed, 23 May 2018 16:15:05 +0800
Subject: [PATCH] Revert "video/rockchip: rga2: remove flush cache"

This change has some bug, revert it.

This reverts commit cc06fabbcd229dc77a5d7556c54d5875352ce1a7.

Change-Id: I8f772f01d50379f68767d9b79b13826b1dd3610a
Signed-off-by: Putin Lee <putin.li@rock-chips.com>
---
 drivers/video/rockchip/rga2/rga2_mmu_info.c | 31 +++++++++++++++++++++
 1 file changed, 31 insertions(+)

diff --git a/drivers/video/rockchip/rga2/rga2_mmu_info.c b/drivers/video/rockchip/rga2/rga2_mmu_info.c
index 8f69b28b6fae..97cb671f5d0a 100644
--- a/drivers/video/rockchip/rga2/rga2_mmu_info.c
+++ b/drivers/video/rockchip/rga2/rga2_mmu_info.c
@@ -46,6 +46,35 @@ static void rga_dma_flush_range(void *pstart, void *pend)
 #endif
 }
 
+static void rga_dma_flush_page(struct page *page)
+{
+	phys_addr_t paddr;
+	void *virt;
+
+	paddr = page_to_phys(page);
+#ifdef CONFIG_ARM
+	if (PageHighMem(page)) {
+		if (cache_is_vipt_nonaliasing()) {
+			virt = kmap_atomic(page);
+			dmac_flush_range(virt, virt + PAGE_SIZE);
+			kunmap_atomic(virt);
+		} else {
+			virt = kmap_high_get(page);
+			dmac_flush_range(virt, virt + PAGE_SIZE);
+			kunmap_high(page);
+		}
+	} else {
+		virt = page_address(page);
+		dmac_flush_range(virt, virt + PAGE_SIZE);
+	}
+
+	outer_flush_range(paddr, paddr + PAGE_SIZE);
+#elif defined(CONFIG_ARM64)
+	virt = page_address(page);
+	__dma_flush_range(virt, virt + PAGE_SIZE);
+#endif
+}
+
 #if 0
 static unsigned int armv7_va_to_pa(unsigned int v_addr)
 {
@@ -294,6 +323,7 @@ static int rga2_MapUserMemory(struct page **pages, uint32_t *pageTable,
 		for (i = 0; i < pageCount; i++) {
 			/* Get the physical address from page struct. */
 			pageTable[i] = page_to_phys(pages[i]);
+			rga_dma_flush_page(pages[i]);
 		}
 		for (i = 0; i < result; i++)
 			put_page(pages[i]);
@@ -342,6 +372,7 @@ static int rga2_MapUserMemory(struct page **pages, uint32_t *pageTable,
 			   << PAGE_SHIFT)) & ~PAGE_MASK));
 		pte_unmap_unlock(pte, ptl);
 		pageTable[i] = (uint32_t)Address;
+		rga_dma_flush_page(pfn_to_page(pfn));
 	}
 	up_read(&current->mm->mmap_sem);
 	return status;
-- 
2.35.3

