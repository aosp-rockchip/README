From 49c623158cc495ea576ce7e971ef408343b7711b Mon Sep 17 00:00:00 2001
From: Zorro Liu <lyx@rock-chips.com>
Date: Tue, 14 Nov 2017 11:49:35 +0800
Subject: [PATCH] driver: input: sensor: update mpu6500 and mpu6880 accel
 driver

rate is not correct in interrupt mode, so just return and we
always use poll mode

Change-Id: I494600852907a8fff6599305195f5b4ccdb0bf7c
Signed-off-by: Zorro Liu <lyx@rock-chips.com>
---
 drivers/input/sensors/accel/mpu6500_acc.c | 7 +++++--
 drivers/input/sensors/accel/mpu6880_acc.c | 8 ++++++--
 2 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/drivers/input/sensors/accel/mpu6500_acc.c b/drivers/input/sensors/accel/mpu6500_acc.c
index 004679133da9..042ddfe21a58 100644
--- a/drivers/input/sensors/accel/mpu6500_acc.c
+++ b/drivers/input/sensors/accel/mpu6500_acc.c
@@ -59,6 +59,9 @@ static int mpu6500_set_rate(struct i2c_client *client, int rate)
 	int result;
 	u16 fifo_rate;
 
+	/* always use poll mode, no need to set rate */
+	return 0;
+
 	if ((rate < 1) || (rate > 250))
 		return -1;
 
@@ -90,7 +93,7 @@ static int sensor_active(struct i2c_client *client, int enable, int rate)
 	if (!enable) {
 		status = BIT_ACCEL_STBY;
 		sensor->ops->ctrl_data |= status;
-		if (sensor->ops->ctrl_data && (BIT_ACCEL_STBY | BIT_GYRO_STBY) != 0) {
+		if ((sensor->ops->ctrl_data &  BIT_GYRO_STBY) == BIT_GYRO_STBY) {
 			pwrm1 |= MPU6500_PWRM1_SLEEP;
 		}
 	} else {
@@ -112,7 +115,7 @@ static int sensor_active(struct i2c_client *client, int enable, int rate)
 		dev_err(&client->dev, "%s:fail to set pwrm1\n", __func__);
 		return -1;
 	}
-	msleep(100);
+	msleep(50);
 
 	return result;
 }
diff --git a/drivers/input/sensors/accel/mpu6880_acc.c b/drivers/input/sensors/accel/mpu6880_acc.c
index c85d607b8034..105b42003734 100644
--- a/drivers/input/sensors/accel/mpu6880_acc.c
+++ b/drivers/input/sensors/accel/mpu6880_acc.c
@@ -59,6 +59,9 @@ static int mpu6880_set_rate(struct i2c_client *client, int rate)
 	int result;
 	u16 fifo_rate;
 
+	/* always use poll mode, no need to set rate */
+	return 0;
+
 	if ((rate < 1) || (rate > 250))
 		return -1;
 
@@ -90,8 +93,9 @@ static int sensor_active(struct i2c_client *client, int enable, int rate)
 	if (!enable) {
 		status = BIT_ACCEL_STBY;
 		sensor->ops->ctrl_data |= status;
-		if (sensor->ops->ctrl_data && (BIT_ACCEL_STBY | BIT_GYRO_STBY) != 0)
+		if ((sensor->ops->ctrl_data &  BIT_GYRO_STBY) == BIT_GYRO_STBY) {
 			pwrm1 |= MPU6880_PWRM1_SLEEP;
+		}
 	} else {
 		status = ~BIT_ACCEL_STBY;
 		sensor->ops->ctrl_data &= status;
@@ -111,7 +115,7 @@ static int sensor_active(struct i2c_client *client, int enable, int rate)
 		dev_err(&client->dev, "%s:fail to set pwrm1\n", __func__);
 		return -1;
 	}
-	msleep(100);
+	msleep(50);
 
 	return result;
 }
-- 
2.35.3

