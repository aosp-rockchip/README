From b55a7eeb64c804f9cebe46f8c709287a07dd22b4 Mon Sep 17 00:00:00 2001
From: lw <lw@rock-chips.com>
Date: Mon, 16 Jan 2012 11:42:48 +0800
Subject: [PATCH] fix wm831x building warning

---
 drivers/mfd/wm831x-core.c       | 6 ++----
 drivers/mfd/wm831x-irq.c        | 6 +++---
 drivers/power/wm831x_power.c    | 4 ++--
 drivers/regulator/wm831x-dcdc.c | 4 ++--
 drivers/regulator/wm831x-ldo.c  | 9 ++++-----
 5 files changed, 13 insertions(+), 16 deletions(-)

diff --git a/drivers/mfd/wm831x-core.c b/drivers/mfd/wm831x-core.c
index 1bfd65bd3743..dd8c9d9b1881 100755
--- a/drivers/mfd/wm831x-core.c
+++ b/drivers/mfd/wm831x-core.c
@@ -1751,9 +1751,8 @@ int wm831x_device_suspend(struct wm831x *wm831x)
 }
 void wm831x_enter_sleep(void){
 #if 1//def CONFIG_RK2818_SOC_PM
-	struct regulator *dcdc;
+	struct regulator *dcdc = regulator_get(NULL, "dcdc1");
 	int i;		
-	dcdc=regulator_get(NULL, "dcdc1");
 	struct wm831x_dcdc *dc = regulator_get_drvdata(dcdc);
 	struct wm831x *wm831x = dc->wm831x;
 	if(wm831x){
@@ -1773,8 +1772,7 @@ EXPORT_SYMBOL_GPL(wm831x_enter_sleep);
 
 void wm831x_exit_sleep(void){
 #if 1//def CONFIG_RK2818_SOC_PM
-	struct regulator *dcdc;
-	dcdc=regulator_get(NULL, "dcdc1");
+	struct regulator *dcdc = regulator_get(NULL, "dcdc1");
 	struct wm831x_dcdc *dc = regulator_get_drvdata(dcdc);
 	struct wm831x *wm831x = dc->wm831x;
 	if(wm831x){
diff --git a/drivers/mfd/wm831x-irq.c b/drivers/mfd/wm831x-irq.c
index 7070c3c916f5..f54285b60365 100755
--- a/drivers/mfd/wm831x-irq.c
+++ b/drivers/mfd/wm831x-irq.c
@@ -501,7 +501,7 @@ static void wm831x_handle_worker(struct work_struct *work)
  * interrupts enabled to interact with the chip. */
 static void wm831x_irq_worker(struct work_struct *work)
 {
-	struct wm831x *wm831x = container_of(work, struct wm831x, irq_work);
+	struct wm831x *wm831x = container_of(to_delayed_work(work), struct wm831x, irq_work);
 	unsigned int i;
 	int primary;
 	int status_regs[WM831X_NUM_IRQ_REGS] = { 0 };
@@ -509,10 +509,10 @@ static void wm831x_irq_worker(struct work_struct *work)
 	int *status;
 	unsigned long flags;
 	struct wm831x_handle_irq *hd;
-	int ret;
 
 #if (WM831X_IRQ_TYPE != IRQF_TRIGGER_LOW)
-	/*mask wm831x irq at first*/
+	/*mask wm831x irq at first*/	
+	int ret;
 	ret = wm831x_set_bits(wm831x, WM831X_IRQ_CONFIG,
 			      WM831X_IRQ_IM_MASK, WM831X_IRQ_IM_EANBLE);
 	if (ret < 0) {
diff --git a/drivers/power/wm831x_power.c b/drivers/power/wm831x_power.c
index 6c99beff2174..263ad8bcad16 100755
--- a/drivers/power/wm831x_power.c
+++ b/drivers/power/wm831x_power.c
@@ -1063,7 +1063,7 @@ static __devinit int wm831x_power_probe(struct platform_device *pdev)
 	struct power_supply *usb;
 	struct power_supply *battery;
 	struct power_supply *wall;
-	int ret, irq, i;
+	int ret, irq;
 
 	power = kzalloc(sizeof(struct wm831x_power), GFP_KERNEL);
 	if (power == NULL)
@@ -1195,7 +1195,7 @@ static __devinit int wm831x_power_probe(struct platform_device *pdev)
 static __devexit int wm831x_power_remove(struct platform_device *pdev)
 {
 	struct wm831x_power *wm831x_power = platform_get_drvdata(pdev);
-	int irq, i;
+	int irq;
 #ifdef CONFIG_WM831X_WITH_BATTERY
 	for (i = 0; i < ARRAY_SIZE(wm831x_bat_irqs); i++) {
 		irq = platform_get_irq_byname(pdev, wm831x_bat_irqs[i]);
diff --git a/drivers/regulator/wm831x-dcdc.c b/drivers/regulator/wm831x-dcdc.c
index 5607a160fde5..edff1e53ebdd 100755
--- a/drivers/regulator/wm831x-dcdc.c
+++ b/drivers/regulator/wm831x-dcdc.c
@@ -424,7 +424,7 @@ static u16 wm831x_dcdc_ilim[] = {
 	125, 250, 375, 500, 625, 750, 875, 1000
 };
 
-static int wm831x_buckv_set_voltage_step(struct regulator_dev * rdev, int min_uV, int max_uV)
+static int wm831x_buckv_set_voltage_step(struct regulator_dev * rdev, int min_uV, int max_uV, unsigned *selector)
 {
 	int old_vol;
 	int new_min_uV,new_max_uV;
@@ -773,7 +773,7 @@ static int wm831x_buckp_set_voltage_int(struct regulator_dev *rdev, int reg,
 }
 
 static int wm831x_buckp_set_voltage(struct regulator_dev *rdev,
-				    int min_uV, int max_uV)
+				    int min_uV, int max_uV, unsigned *selector)
 {
 	struct wm831x_dcdc *dcdc = rdev_get_drvdata(rdev);
 	u16 reg = dcdc->base + WM831X_DCDC_ON_CONFIG;
diff --git a/drivers/regulator/wm831x-ldo.c b/drivers/regulator/wm831x-ldo.c
index 885844a33524..aa9e95572bb5 100755
--- a/drivers/regulator/wm831x-ldo.c
+++ b/drivers/regulator/wm831x-ldo.c
@@ -139,7 +139,7 @@ static int wm831x_gp_ldo_set_voltage_int(struct regulator_dev *rdev, int reg,
 }
 
 static int wm831x_gp_ldo_set_voltage(struct regulator_dev *rdev,
-				     int min_uV, int max_uV)
+				     int min_uV, int max_uV, unsigned *selector)
 {
 	struct wm831x_ldo *ldo = rdev_get_drvdata(rdev);
 	int reg = ldo->base + WM831X_LDO_ON_CONTROL;
@@ -451,7 +451,7 @@ static int wm831x_aldo_set_voltage_int(struct regulator_dev *rdev, int reg,
 }
 
 static int wm831x_aldo_set_voltage(struct regulator_dev *rdev,
-				     int min_uV, int max_uV)
+				     int min_uV, int max_uV, unsigned *selector)
 {
 	struct wm831x_ldo *ldo = rdev_get_drvdata(rdev);
 	int reg = ldo->base + WM831X_LDO_ON_CONTROL;
@@ -700,7 +700,7 @@ static int wm831x_alive_ldo_set_voltage_int(struct regulator_dev *rdev,
 }
 
 static int wm831x_alive_ldo_set_voltage(struct regulator_dev *rdev,
-				     int min_uV, int max_uV)
+				     int min_uV, int max_uV, unsigned *selector)
 {
 	struct wm831x_ldo *ldo = rdev_get_drvdata(rdev);
 	int reg = ldo->base + WM831X_ALIVE_LDO_ON_CONTROL;
@@ -830,7 +830,7 @@ static __devexit int wm831x_alive_ldo_remove(struct platform_device *pdev)
 	return 0;
 }
 
-static __devexit int wm831x_alive_ldo_shutdown(struct platform_device *pdev)	/*ZMF*/
+static __devexit void wm831x_alive_ldo_shutdown(struct platform_device *pdev)	/*ZMF*/
 {
 	//struct wm831x_ldo *ldo = platform_get_drvdata(pdev);
 #if 0
@@ -881,7 +881,6 @@ static __devexit int wm831x_alive_ldo_shutdown(struct platform_device *pdev)	/*Z
 	regulator_disable(ldo);						
 	regulator_put(ldo);
 #endif
-	return 0;
 }
 
 static struct platform_driver wm831x_alive_ldo_driver = {
-- 
2.35.3

