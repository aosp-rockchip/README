From 917c728cb244175790295d84881f35ad8346e501 Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Mon, 2 Jul 2018 18:26:16 +0800
Subject: [PATCH] input: touchscreen: gt1x: Fix some warnings reported by
 jenkins

Change-Id: Ibae24626d24d9a358285d9fd8693229b87e7a1e1
Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 drivers/input/touchscreen/gt1x/gt1x.c         | 18 ++++------
 drivers/input/touchscreen/gt1x/gt1x_generic.c | 35 +------------------
 2 files changed, 8 insertions(+), 45 deletions(-)

diff --git a/drivers/input/touchscreen/gt1x/gt1x.c b/drivers/input/touchscreen/gt1x/gt1x.c
index 75896a9e6215..337a4c2ac343 100644
--- a/drivers/input/touchscreen/gt1x/gt1x.c
+++ b/drivers/input/touchscreen/gt1x/gt1x.c
@@ -373,25 +373,21 @@ static s32 gt1x_request_io_port(void)
 	ret = gpio_request(GTP_INT_PORT, "GTP_INT_IRQ");
 	if (ret < 0) {
 		GTP_ERROR("Failed to request GPIO:%d, ERRNO:%d", (s32) GTP_INT_PORT, ret);
-		ret = -ENODEV;
-	} else {
-		GTP_GPIO_AS_INT(GTP_INT_PORT);
-		gt1x_i2c_client->irq = GTP_INT_IRQ;
+		return ret;
 	}
 
+	GTP_GPIO_AS_INT(GTP_INT_PORT);
+	gt1x_i2c_client->irq = GTP_INT_IRQ;
+
 	ret = gpio_request(GTP_RST_PORT, "GTP_RST_PORT");
 	if (ret < 0) {
 		GTP_ERROR("Failed to request GPIO:%d, ERRNO:%d", (s32) GTP_RST_PORT, ret);
-		ret = -ENODEV;
-	}
-
-	GTP_GPIO_AS_INPUT(GTP_RST_PORT);
-	if (ret < 0) {
-		gpio_free(GTP_RST_PORT);
 		gpio_free(GTP_INT_PORT);
+		return ret;
 	}
 
-	return ret;
+	GTP_GPIO_AS_INPUT(GTP_RST_PORT);
+	return 0;
 }
 
 /**
diff --git a/drivers/input/touchscreen/gt1x/gt1x_generic.c b/drivers/input/touchscreen/gt1x/gt1x_generic.c
index fc7aa021a523..98d2790949e7 100644
--- a/drivers/input/touchscreen/gt1x/gt1x_generic.c
+++ b/drivers/input/touchscreen/gt1x/gt1x_generic.c
@@ -504,35 +504,6 @@ s32 gt1x_i2c_read_dbl_check(u16 addr, u8 *buffer, s32 len)
 	return 1;
 }
 
-/**
- * gt1x_get_info - Get information from ic, such as resolution and
- * int trigger type
- * Return    <0: i2c failed, 0: i2c ok
- */
-s32 gt1x_get_info(void)
-{
-	u8 opr_buf[4] = { 0 };
-	s32 ret = 0;
-
-	ret = gt1x_i2c_read(GTP_REG_CONFIG_DATA + 1, opr_buf, 4);
-	if (ret < 0) {
-		return ret;
-	}
-
-	gt1x_abs_x_max = (opr_buf[1] << 8) + opr_buf[0];
-	gt1x_abs_y_max = (opr_buf[3] << 8) + opr_buf[2];
-
-	ret = gt1x_i2c_read(GTP_REG_CONFIG_DATA + 6, opr_buf, 1);
-	if (ret < 0) {
-		return ret;
-	}
-	gt1x_int_type = opr_buf[0] & 0x03;
-
-	GTP_INFO("X_MAX = %d, Y_MAX = %d, TRIGGER = 0x%02x", gt1x_abs_x_max, gt1x_abs_y_max, gt1x_int_type);
-
-	return 0;
-}
-
 /**
  * gt1x_send_cfg - Send gt1x_config Function.
  * @config: pointer of the configuration array.
@@ -843,7 +814,7 @@ s32 gt1x_read_version(struct gt1x_version_info *ver_info)
 	u8 product_id[5] = { 0 };
 	u8 sensor_id = 0;
 	u8 match_opt = 0;
-	int i, retry = 3;
+	unsigned int i, retry = 3;
 	u8 checksum = 0;
 
 	GTP_DEBUG_FUNC();
@@ -944,9 +915,7 @@ static s32 gt1x_enter_sleep(void)
 	gt1x_power_switch(SWITCH_OFF);
 	return 0;
 #else
-	int ret;
 	{
-		int ret;
 		s32 retry = 0;
 		if (gt1x_wakeup_level == 1) {	/* high level wakeup */
 			GTP_GPIO_OUTPUT(GTP_INT_PORT, 0);
@@ -956,8 +925,6 @@ static s32 gt1x_enter_sleep(void)
 		while (retry++ < 3) {
 			if (!gt1x_send_cmd(GTP_CMD_SLEEP, 0)) {
 				GTP_INFO("Enter sleep mode!");
-				if (ret < 0)
-					GTP_ERROR("disable power-supply error %d\n", ret);
 				return 0;
 			}
 			msleep(10);
-- 
2.35.3

