From 00608bfd1d7d5de74a989d8e219f7aafa31585ae Mon Sep 17 00:00:00 2001
From: Tao Huang <huangtao@rock-chips.com>
Date: Sat, 3 Nov 2018 12:49:56 +0800
Subject: [PATCH] drivers/misc: remove unused gps drivers

Change-Id: I91733b33eec6f33e2a9a3b9a40475138dcb2a92f
Signed-off-by: Tao Huang <huangtao@rock-chips.com>
---
 drivers/misc/gps/Kconfig              |  23 --
 drivers/misc/gps/Makefile             |   3 -
 drivers/misc/gps/rk29_gps.c           | 333 --------------------------
 drivers/misc/gps/rk29_gps.h           |  20 --
 drivers/misc/gps/rk_gps/Kconfig       |  14 --
 drivers/misc/gps/rk_gps/Makefile      |   5 -
 drivers/misc/gps/rk_gps/rk_gps.h      |  35 ---
 drivers/misc/gps/rk_gps/rk_gps_null.c |   2 -
 8 files changed, 435 deletions(-)
 delete mode 100644 drivers/misc/gps/Kconfig
 delete mode 100644 drivers/misc/gps/Makefile
 delete mode 100644 drivers/misc/gps/rk29_gps.c
 delete mode 100644 drivers/misc/gps/rk29_gps.h
 delete mode 100644 drivers/misc/gps/rk_gps/Kconfig
 delete mode 100644 drivers/misc/gps/rk_gps/Makefile
 delete mode 100644 drivers/misc/gps/rk_gps/rk_gps.h
 delete mode 100644 drivers/misc/gps/rk_gps/rk_gps_null.c

diff --git a/drivers/misc/gps/Kconfig b/drivers/misc/gps/Kconfig
deleted file mode 100644
index 7da51e0e6bbb..000000000000
--- a/drivers/misc/gps/Kconfig
+++ /dev/null
@@ -1,23 +0,0 @@
-# SPDX-License-Identifier: GPL-2.0
-#
-# gps device configuration
-#
-
-menuconfig GPS_DEVICES
-	bool "support GPS devices"
-	default n
-	---help---
-	 Say Y here if you support gps
-
-if GPS_DEVICES
-
-source "drivers/misc/gps/rk_gps/Kconfig"	
-
-config GPS_GNS7560
-	bool "gns7560 support"
-	default n
-	
-
-endif # RK29_GPS
-
-
diff --git a/drivers/misc/gps/Makefile b/drivers/misc/gps/Makefile
deleted file mode 100644
index e135d7bada41..000000000000
--- a/drivers/misc/gps/Makefile
+++ /dev/null
@@ -1,3 +0,0 @@
-# SPDX-License-Identifier: GPL-2.0
-obj-$(CONFIG_GPS_DEVICES)		+= rk_gps/
-obj-$(CONFIG_GPS_GNS7560)    += rk29_gps.o
diff --git a/drivers/misc/gps/rk29_gps.c b/drivers/misc/gps/rk29_gps.c
deleted file mode 100644
index f5e94b0acfab..000000000000
--- a/drivers/misc/gps/rk29_gps.c
+++ /dev/null
@@ -1,333 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-#include <linux/input.h>
-#include <linux/module.h>
-#include <linux/init.h>
-#include <linux/interrupt.h>
-#include <linux/kernel.h>
-#include <linux/fcntl.h>
-#include <linux/delay.h>
-#include <linux/device.h>
-#include <linux/miscdevice.h>
-#include <asm/types.h>
-#include <mach/gpio.h>
-#include <mach/iomux.h>
-#include <linux/platform_device.h>
-#include <asm/uaccess.h>
-#include <linux/wait.h>
-#include "rk29_gps.h"
-#if 0
-#define DBG(x...)	printk(KERN_INFO x)
-#else
-#define DBG(x...)
-#endif
-
-#define ENABLE  1
-#define DISABLE 0
-
-static struct rk29_gps_data *pgps;
-
-static int rk29_gps_uart_to_gpio(int uart_id)
-{
-	if(uart_id == 3) {
-		rk29_mux_api_set(GPIO2B3_UART3SOUT_NAME, GPIO2L_GPIO2B3); 			
-		rk29_mux_api_set(GPIO2B2_UART3SIN_NAME, GPIO2L_GPIO2B2); 		
-
-		gpio_request(RK29_PIN2_PB3, NULL);
-		gpio_request(RK29_PIN2_PB2, NULL);
-
-		gpio_pull_updown(RK29_PIN2_PB3, PullDisable);
-		gpio_pull_updown(RK29_PIN2_PB2, PullDisable);
-
-		gpio_direction_output(RK29_PIN2_PB3, GPIO_LOW);
-		gpio_direction_output(RK29_PIN2_PB2, GPIO_LOW);
-
-		gpio_free(RK29_PIN2_PB3);
-		gpio_free(RK29_PIN2_PB2);
-	}
-	else if(uart_id == 2) {
-		rk29_mux_api_set(GPIO2B1_UART2SOUT_NAME, GPIO2L_GPIO2B1); 			
-		rk29_mux_api_set(GPIO2B0_UART2SIN_NAME, GPIO2L_GPIO2B0); 		
-
-		gpio_request(RK29_PIN2_PB1, NULL);
-		gpio_request(RK29_PIN2_PB0, NULL);
-
-		gpio_direction_output(RK29_PIN2_PB1, GPIO_LOW);
-		gpio_direction_output(RK29_PIN2_PB0, GPIO_LOW);
-	}
-	else if(uart_id == 1) {
-		rk29_mux_api_set(GPIO2A5_UART1SOUT_NAME, GPIO2L_GPIO2A5); 			
-		rk29_mux_api_set(GPIO2A4_UART1SIN_NAME, GPIO2L_GPIO2A4); 		
-
-		gpio_request(RK29_PIN2_PA5, NULL);
-		gpio_request(RK29_PIN2_PA4, NULL);
-
-		gpio_direction_output(RK29_PIN2_PA5, GPIO_LOW);
-		gpio_direction_output(RK29_PIN2_PA4, GPIO_LOW);
-	}
-	else {
-		//to do
-	}
-
-	return 0;
-}
-
-static int rk29_gps_gpio_to_uart(int uart_id)
-{
-	if(uart_id == 3) {
-		rk29_mux_api_set(GPIO2B3_UART3SOUT_NAME, GPIO2L_UART3_SOUT);
-		rk29_mux_api_set(GPIO2B2_UART3SIN_NAME, GPIO2L_UART3_SIN); 
-
-		gpio_request(RK29_PIN2_PB3, NULL);
-		gpio_request(RK29_PIN2_PB2, NULL);
-
-		gpio_direction_output(RK29_PIN2_PB3, GPIO_HIGH);
-		gpio_direction_output(RK29_PIN2_PB2, GPIO_HIGH);
-	}
-	else if(uart_id == 2) {
-		rk29_mux_api_set(GPIO2B1_UART2SOUT_NAME, GPIO2L_UART2_SOUT); 			
-		rk29_mux_api_set(GPIO2B0_UART2SIN_NAME, GPIO2L_UART2_SIN); 		
-
-		gpio_request(RK29_PIN2_PB1, NULL);
-		gpio_request(RK29_PIN2_PB0, NULL);
-
-		gpio_direction_output(RK29_PIN2_PB1, GPIO_HIGH);
-		gpio_direction_output(RK29_PIN2_PB0, GPIO_HIGH);
-	}
-	else if(uart_id == 1) {
-		rk29_mux_api_set(GPIO2A5_UART1SOUT_NAME, GPIO2L_UART1_SOUT); 			
-		rk29_mux_api_set(GPIO2A4_UART1SIN_NAME, GPIO2L_UART1_SIN); 		
-
-		gpio_request(RK29_PIN2_PA5, NULL);
-		gpio_request(RK29_PIN2_PA4, NULL);
-
-		gpio_direction_output(RK29_PIN2_PA5, GPIO_HIGH);
-		gpio_direction_output(RK29_PIN2_PA4, GPIO_HIGH);
-	}
-	else {
-		//to do
-	}
-
-	return 0;
-
-}
-
-static int rk29_gps_suspend(struct platform_device *pdev,  pm_message_t state)
-{
-	struct rk29_gps_data *pdata = pdev->dev.platform_data;
-
-	if(!pdata) {
-		printk("%s: pdata = NULL ...... \n", __func__);
-		return -1;
-	}
-		
-	if(pdata->power_flag == 1)
-	{
-		rk29_gps_uart_to_gpio(pdata->uart_id);
-		pdata->power_down();	
-		pdata->reset(GPIO_LOW);
-	}
-	
-	printk("%s\n",__FUNCTION__);
-	return 0;	
-}
-
-static int rk29_gps_resume(struct platform_device *pdev)
-{
-	struct rk29_gps_data *pdata = pdev->dev.platform_data;
-
-	if(!pdata) {
-		printk("%s: pdata = NULL ...... \n", __func__);
-		return -1;
-	}
-	
-	if(pdata->power_flag == 1)
-	{
-		queue_work(pdata->wq, &pdata->work);
-	}
-	
-	printk("%s\n",__FUNCTION__);
-	return 0;
-}
-
-static void rk29_gps_delay_power_downup(struct work_struct *work)
-{
-	struct rk29_gps_data *pdata = container_of(work, struct rk29_gps_data, work);
-	if (pdata == NULL) {
-		printk("%s: pdata = NULL\n", __func__);
-		return;
-	}
-
-	//DBG("%s: suspend=%d\n", __func__, pdata->suspend);
-
-	down(&pdata->power_sem);
-	
-	pdata->reset(GPIO_LOW);
-	mdelay(5);
-	pdata->power_up();
-	msleep(500);
-	pdata->reset(GPIO_HIGH);
-	rk29_gps_gpio_to_uart(pdata->uart_id);
-
-	up(&pdata->power_sem);
-}
-
-static int rk29_gps_open(struct inode *inode, struct file *filp)
-{
-    DBG("rk29_gps_open\n");
-
-	return 0;
-}
-
-static ssize_t rk29_gps_read(struct file *filp, char __user *ptr, size_t size, loff_t *pos)
-{
-	if (ptr == NULL)
-		printk("%s: user space address is NULL\n", __func__);
-
-	if (pgps == NULL) {
-		printk("%s: pgps addr is NULL\n", __func__);
-		return -1;
-	}
-
-	put_user(pgps->uart_id, ptr);
-	
-	return sizeof(int);
-}
-
-static long rk29_gps_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
-{
-	long ret = 0;
-	struct rk29_gps_data *pdata = pgps;
-
-	DBG("rk29_gps_ioctl: cmd = %d arg = %ld\n",cmd, arg);
-
-	ret = down_interruptible(&pdata->power_sem);
-	if (ret < 0) {
-		printk("%s: down power_sem error ret = %ld\n", __func__, ret);
-		return ret;
-	}
-
-	switch (cmd){
-		case ENABLE:
-			pdata->reset(GPIO_LOW);
-			mdelay(5);
-			pdata->power_up();
-			mdelay(5);
-			rk29_gps_gpio_to_uart(pdata->uart_id);
-			mdelay(500);
-			pdata->reset(GPIO_HIGH);
-			pdata->power_flag = 1;
-			break;
-			
-		case DISABLE:
-			rk29_gps_uart_to_gpio(pdata->uart_id);
-			pdata->power_down();
-			pdata->reset(GPIO_LOW);
-			pdata->power_flag = 0;
-			break;
-
-		default:
-			printk("unknown ioctl cmd!\n");
-			up(&pdata->power_sem);
-			ret = -EINVAL;
-			break;
-	}
-
-	up(&pdata->power_sem);
-
-	return ret;
-}
-
-
-static int rk29_gps_release(struct inode *inode, struct file *filp)
-{
-    DBG("rk29_gps_release\n");
-    
-	return 0;
-}
-
-static struct file_operations rk29_gps_fops = {
-	.owner   = THIS_MODULE,
-	.open    = rk29_gps_open,
-	.read    = rk29_gps_read,
-	.unlocked_ioctl   = rk29_gps_ioctl,
-	.release = rk29_gps_release,
-};
-
-static struct miscdevice rk29_gps_dev = 
-{
-    .minor = MISC_DYNAMIC_MINOR,
-    .name = "rk29_gps",
-    .fops = &rk29_gps_fops,
-};
-
-static int rk29_gps_probe(struct platform_device *pdev)
-{
-	int ret = 0;
-	struct rk29_gps_data *pdata = pdev->dev.platform_data;
-	if(!pdata)
-		return -1;
-		
-	ret = misc_register(&rk29_gps_dev);
-	if (ret < 0){
-		printk("rk29 gps register err!\n");
-		return ret;
-	}
-	
-	sema_init(&pdata->power_sem,1);
-	pdata->wq = create_freezable_workqueue("rk29_gps");
-	INIT_WORK(&pdata->work, rk29_gps_delay_power_downup);
-	pdata->power_flag = 0;
-
-	//gps power down
-	rk29_gps_uart_to_gpio(pdata->uart_id);
-	if (pdata->power_down)
-		pdata->power_down();
-	if (pdata->reset)
-		pdata->reset(GPIO_LOW);
-
-	pgps = pdata;
-
-
-	printk("%s:rk29 GPS initialized\n",__FUNCTION__);
-
-	return ret;
-}
-
-static int rk29_gps_remove(struct platform_device *pdev)
-{
-	struct rk29_gps_data *pdata = pdev->dev.platform_data;
-	if(!pdata)
-		return -1;
-
-	misc_deregister(&rk29_gps_dev);
-	destroy_workqueue(pdata->wq);
-
-	return 0;
-}
-
-static struct platform_driver rk29_gps_driver = {
-	.probe	= rk29_gps_probe,
-	.remove = rk29_gps_remove,
-	.suspend  	= rk29_gps_suspend,
-	.resume		= rk29_gps_resume,
-	.driver	= {
-		.name	= "rk29_gps",
-		.owner	= THIS_MODULE,
-	},
-};
-
-static int __init rk29_gps_init(void)
-{
-	return platform_driver_register(&rk29_gps_driver);
-}
-
-static void __exit rk29_gps_exit(void)
-{
-	platform_driver_unregister(&rk29_gps_driver);
-}
-
-module_init(rk29_gps_init);
-module_exit(rk29_gps_exit);
-MODULE_DESCRIPTION ("rk29 gps driver");
-MODULE_LICENSE("GPL");
-
diff --git a/drivers/misc/gps/rk29_gps.h b/drivers/misc/gps/rk29_gps.h
deleted file mode 100644
index c50ca1d7288b..000000000000
--- a/drivers/misc/gps/rk29_gps.h
+++ /dev/null
@@ -1,20 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-/*
-	2011.01.2  lw@rock-chips.com
-*/
-
-#ifndef __RK29_GPS_H__
-#define __RK29_GPS_H__
-
-struct rk29_gps_data {
-	int (*power_up)(void);
-	int (*power_down)(void);
-	int (*reset)(int);
-	int uart_id;
-	int power_flag;
-	struct semaphore power_sem;
-	struct workqueue_struct *wq;
-	struct work_struct work;
-};
-
-#endif
diff --git a/drivers/misc/gps/rk_gps/Kconfig b/drivers/misc/gps/rk_gps/Kconfig
deleted file mode 100644
index 3a20096c3105..000000000000
--- a/drivers/misc/gps/rk_gps/Kconfig
+++ /dev/null
@@ -1,14 +0,0 @@
-# SPDX-License-Identifier: GPL-2.0
-#
-# gps device configuration
-#
-
-
-
-config GPS_RK
-	tristate "rk gps support"
-	default M
-
-
-
-
diff --git a/drivers/misc/gps/rk_gps/Makefile b/drivers/misc/gps/rk_gps/Makefile
deleted file mode 100644
index 560d4a2c4f7d..000000000000
--- a/drivers/misc/gps/rk_gps/Makefile
+++ /dev/null
@@ -1,5 +0,0 @@
-# SPDX-License-Identifier: GPL-2.0
-# All selected in one module named smsmdtv
-gps-objs                   := rk_gps_null.o
-obj-$(CONFIG_GPS_RK)		+= gps.o
-
diff --git a/drivers/misc/gps/rk_gps/rk_gps.h b/drivers/misc/gps/rk_gps/rk_gps.h
deleted file mode 100644
index 1a2f931a0b7d..000000000000
--- a/drivers/misc/gps/rk_gps/rk_gps.h
+++ /dev/null
@@ -1,35 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-/*
-	2012.07.25  lby@rock-chips.com
-*/
-
-#ifndef __RK_GPS_H__
-#define __RK_GPS_H__
-
-struct rk_gps_data {
-	int (*io_init)(void);
-	int (*power_up)(void);
-	int (*power_down)(void);
-	int (*reset)(int);
-	int (*enable_hclk_gps)(void);
-	int (*disable_hclk_gps)(void);
-	int   GpsSign;
-	int    GpsMag;        //GPIO index
-	int    GpsClk;        //GPIO index
-	int    GpsVCCEn;      //GPIO index
-	int    GpsSpi_CSO;    //GPIO index
-	int    GpsSpiClk;     //GPIO index
-	int    GpsSpiMOSI;	  //GPIO index
-	int    GpsSpiEn;	//USE SPI
-	int    GpsAdcCh;	//ADC CHANNEL
-	int    GpsIrq;
-	
-	unsigned long   u32GpsPhyAddr;
-	int		u32GpsPhySize;
-	unsigned long   u32MemoryPhyAddr; //must reserved 8MB memory for GPS
-	unsigned long   u32MemoryVirAddr;
-	unsigned long   u32GpsRegBase;    //GPS register base virtual address
-
-};
-
-#endif
diff --git a/drivers/misc/gps/rk_gps/rk_gps_null.c b/drivers/misc/gps/rk_gps/rk_gps_null.c
deleted file mode 100644
index 589b8bb768ad..000000000000
--- a/drivers/misc/gps/rk_gps/rk_gps_null.c
+++ /dev/null
@@ -1,2 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-//for rk_gps building
-- 
2.35.3

