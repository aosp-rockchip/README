From 9c1a6c96d1b7dae836acf52c7f20bc2a653c5b49 Mon Sep 17 00:00:00 2001
From: Hu Kejun <william.hu@rock-chips.com>
Date: Thu, 14 May 2020 16:51:36 +0800
Subject: [PATCH] media: rockchip: isp: add missing dpcc1/dpcc2

Signed-off-by: Hu Kejun <william.hu@rock-chips.com>
Change-Id: I1fad9f1d6b9274a9218c00022f17a60b5b421468
---
 .../platform/rockchip/isp/isp_params_v2x.c    | 148 +++++++++++----
 .../media/platform/rockchip/isp/regs_v2x.h    | 174 +++++++++++++-----
 2 files changed, 241 insertions(+), 81 deletions(-)

diff --git a/drivers/media/platform/rockchip/isp/isp_params_v2x.c b/drivers/media/platform/rockchip/isp/isp_params_v2x.c
index 6d57bda6ab1e..f5a24751d4d8 100644
--- a/drivers/media/platform/rockchip/isp/isp_params_v2x.c
+++ b/drivers/media/platform/rockchip/isp/isp_params_v2x.c
@@ -71,12 +71,14 @@ isp_dpcc_config(struct rkisp_isp_params_vdev *params_vdev,
 	u32 value;
 	int i;
 
-	value = rkisp_ioread32(params_vdev, ISP_DPCC_MODE);
+	value = rkisp_ioread32(params_vdev, ISP_DPCC0_MODE);
 	value &= ISP_DPCC_EN;
 
 	value |= (arg->stage1_enable & 0x01) << 2 |
 		 (arg->grayscale_mode & 0x01) << 1;
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_MODE);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_MODE);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_MODE);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_MODE);
 
 	value = (arg->sw_rk_out_sel & 0x03) << 5 |
 		(arg->sw_dpcc_output_sel & 0x01) << 4 |
@@ -84,13 +86,17 @@ isp_dpcc_config(struct rkisp_isp_params_vdev *params_vdev,
 		(arg->stage1_g_3x3 & 0x01) << 2 |
 		(arg->stage1_incl_rb_center & 0x01) << 1 |
 		(arg->stage1_incl_green_center & 0x01);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_OUTPUT_MODE);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_OUTPUT_MODE);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_OUTPUT_MODE);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_OUTPUT_MODE);
 
 	value = (arg->stage1_use_fix_set & 0x01) << 3 |
 		(arg->stage1_use_set_3 & 0x01) << 2 |
 		(arg->stage1_use_set_2 & 0x01) << 1 |
 		(arg->stage1_use_set_1 & 0x01);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_SET_USE);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_SET_USE);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_SET_USE);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_SET_USE);
 
 	value = (arg->sw_rk_red_blue1_en & 0x01) << 13 |
 		(arg->rg_red_blue1_enable & 0x01) << 12 |
@@ -104,7 +110,9 @@ isp_dpcc_config(struct rkisp_isp_params_vdev *params_vdev,
 		(arg->ro_green1_enable & 0x01) << 2 |
 		(arg->lc_green1_enable & 0x01) << 1 |
 		(arg->pg_green1_enable & 0x01);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_METHODS_SET_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_METHODS_SET_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_METHODS_SET_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_METHODS_SET_1);
 
 	value = (arg->sw_rk_red_blue2_en & 0x01) << 13 |
 		(arg->rg_red_blue2_enable & 0x01) << 12 |
@@ -118,7 +126,9 @@ isp_dpcc_config(struct rkisp_isp_params_vdev *params_vdev,
 		(arg->ro_green2_enable & 0x01) << 2 |
 		(arg->lc_green2_enable & 0x01) << 1 |
 		(arg->pg_green2_enable & 0x01);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_METHODS_SET_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_METHODS_SET_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_METHODS_SET_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_METHODS_SET_2);
 
 	value = (arg->sw_rk_red_blue3_en & 0x01) << 13 |
 		(arg->rg_red_blue3_enable & 0x01) << 12 |
@@ -132,58 +142,90 @@ isp_dpcc_config(struct rkisp_isp_params_vdev *params_vdev,
 		(arg->ro_green3_enable & 0x01) << 2 |
 		(arg->lc_green3_enable & 0x01) << 1 |
 		(arg->pg_green3_enable & 0x01);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_METHODS_SET_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_METHODS_SET_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_METHODS_SET_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_METHODS_SET_3);
 
 	value = ISP2X_PACK_4BYTE(arg->line_thr_1_g, arg->line_thr_1_rb,
 				 arg->sw_mindis1_g, arg->sw_mindis1_rb);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_LINE_THRESH_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_LINE_THRESH_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_LINE_THRESH_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_LINE_THRESH_1);
 
 	value = ISP2X_PACK_4BYTE(arg->line_mad_fac_1_g, arg->line_mad_fac_1_rb,
 				 arg->sw_dis_scale_max1, arg->sw_dis_scale_min1);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_LINE_MAD_FAC_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_LINE_MAD_FAC_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_LINE_MAD_FAC_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_LINE_MAD_FAC_1);
 
 	value = ISP2X_PACK_4BYTE(arg->pg_fac_1_g, arg->pg_fac_1_rb, 0, 0);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_PG_FAC_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_PG_FAC_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_PG_FAC_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_PG_FAC_1);
 
 	value = ISP2X_PACK_4BYTE(arg->rnd_thr_1_g, arg->rnd_thr_1_rb, 0, 0);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_RND_THRESH_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_RND_THRESH_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_RND_THRESH_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_RND_THRESH_1);
 
 	value = ISP2X_PACK_4BYTE(arg->rg_fac_1_g, arg->rg_fac_1_rb, 0, 0);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_RG_FAC_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_RG_FAC_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_RG_FAC_1);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_RG_FAC_1);
 
 	value = ISP2X_PACK_4BYTE(arg->line_thr_2_g, arg->line_thr_2_rb,
 				 arg->sw_mindis2_g, arg->sw_mindis2_rb);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_LINE_THRESH_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_LINE_THRESH_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_LINE_THRESH_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_LINE_THRESH_2);
 
 	value = ISP2X_PACK_4BYTE(arg->line_mad_fac_2_g, arg->line_mad_fac_2_rb,
 				 arg->sw_dis_scale_max2, arg->sw_dis_scale_min2);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_LINE_MAD_FAC_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_LINE_MAD_FAC_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_LINE_MAD_FAC_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_LINE_MAD_FAC_2);
 
 	value = ISP2X_PACK_4BYTE(arg->pg_fac_2_g, arg->pg_fac_2_rb, 0, 0);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_PG_FAC_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_PG_FAC_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_PG_FAC_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_PG_FAC_2);
 
 	value = ISP2X_PACK_4BYTE(arg->rnd_thr_2_g, arg->rnd_thr_2_rb, 0, 0);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_RND_THRESH_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_RND_THRESH_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_RND_THRESH_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_RND_THRESH_2);
 
 	value = ISP2X_PACK_4BYTE(arg->rg_fac_2_g, arg->rg_fac_2_rb, 0, 0);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_RG_FAC_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_RG_FAC_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_RG_FAC_2);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_RG_FAC_2);
 
 	value = ISP2X_PACK_4BYTE(arg->line_thr_3_g, arg->line_thr_3_rb,
 				 arg->sw_mindis3_g, arg->sw_mindis3_rb);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_LINE_THRESH_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_LINE_THRESH_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_LINE_THRESH_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_LINE_THRESH_3);
 
 	value = ISP2X_PACK_4BYTE(arg->line_mad_fac_3_g, arg->line_mad_fac_3_rb,
 				 arg->sw_dis_scale_max3, arg->sw_dis_scale_min3);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_LINE_MAD_FAC_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_LINE_MAD_FAC_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_LINE_MAD_FAC_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_LINE_MAD_FAC_3);
 
 	value = ISP2X_PACK_4BYTE(arg->pg_fac_3_g, arg->pg_fac_3_rb, 0, 0);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_PG_FAC_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_PG_FAC_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_PG_FAC_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_PG_FAC_3);
 
 	value = ISP2X_PACK_4BYTE(arg->rnd_thr_3_g, arg->rnd_thr_3_rb, 0, 0);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_RND_THRESH_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_RND_THRESH_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_RND_THRESH_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_RND_THRESH_3);
 
 	value = ISP2X_PACK_4BYTE(arg->rg_fac_3_g, arg->rg_fac_3_rb, 0, 0);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_RG_FAC_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_RG_FAC_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_RG_FAC_3);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_RG_FAC_3);
 
 	value = (arg->ro_lim_3_rb & 0x03) << 10 |
 		(arg->ro_lim_3_g & 0x03) << 8 |
@@ -191,7 +233,9 @@ isp_dpcc_config(struct rkisp_isp_params_vdev *params_vdev,
 		(arg->ro_lim_2_g & 0x03) << 4 |
 		(arg->ro_lim_1_rb & 0x03) << 2 |
 		(arg->ro_lim_1_g & 0x03);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_RO_LIMITS);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_RO_LIMITS);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_RO_LIMITS);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_RO_LIMITS);
 
 	value = (arg->rnd_offs_3_rb & 0x03) << 10 |
 		(arg->rnd_offs_3_g & 0x03) << 8 |
@@ -199,7 +243,9 @@ isp_dpcc_config(struct rkisp_isp_params_vdev *params_vdev,
 		(arg->rnd_offs_2_g & 0x03) << 4 |
 		(arg->rnd_offs_1_rb & 0x03) << 2 |
 		(arg->rnd_offs_1_g & 0x03);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_RND_OFFS);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_RND_OFFS);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_RND_OFFS);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_RND_OFFS);
 
 	value = (arg->bpt_rb_3x3 & 0x01) << 11 |
 		(arg->bpt_g_3x3 & 0x01) << 10 |
@@ -211,39 +257,63 @@ isp_dpcc_config(struct rkisp_isp_params_vdev *params_vdev,
 		(arg->bpt_use_set_1 & 0x01) << 4 |
 		(arg->bpt_cor_en & 0x01) << 1 |
 		(arg->bpt_det_en & 0x01);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_BPT_CTRL);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_BPT_CTRL);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_BPT_CTRL);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_BPT_CTRL);
 
-	rkisp_iowrite32(params_vdev, arg->bp_number, ISP_DPCC_BPT_NUMBER);
-	rkisp_iowrite32(params_vdev, arg->bp_table_addr, ISP_DPCC_BPT_ADDR);
+	rkisp_iowrite32(params_vdev, arg->bp_number, ISP_DPCC0_BPT_NUMBER);
+	rkisp_iowrite32(params_vdev, arg->bp_number, ISP_DPCC1_BPT_NUMBER);
+	rkisp_iowrite32(params_vdev, arg->bp_number, ISP_DPCC2_BPT_NUMBER);
+	rkisp_iowrite32(params_vdev, arg->bp_table_addr, ISP_DPCC0_BPT_ADDR);
+	rkisp_iowrite32(params_vdev, arg->bp_table_addr, ISP_DPCC1_BPT_ADDR);
+	rkisp_iowrite32(params_vdev, arg->bp_table_addr, ISP_DPCC2_BPT_ADDR);
 
 	value = ISP2X_PACK_2SHORT(arg->bpt_h_addr, arg->bpt_v_addr);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_BPT_DATA);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_BPT_DATA);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_BPT_DATA);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_BPT_DATA);
 
-	rkisp_iowrite32(params_vdev, arg->bp_cnt, ISP_DPCC_BP_CNT);
+	rkisp_iowrite32(params_vdev, arg->bp_cnt, ISP_DPCC0_BP_CNT);
+	rkisp_iowrite32(params_vdev, arg->bp_cnt, ISP_DPCC1_BP_CNT);
+	rkisp_iowrite32(params_vdev, arg->bp_cnt, ISP_DPCC2_BP_CNT);
 
-	rkisp_iowrite32(params_vdev, arg->sw_pdaf_en, ISP_DPCC_PDAF_EN);
+	rkisp_iowrite32(params_vdev, arg->sw_pdaf_en, ISP_DPCC0_PDAF_EN);
+	rkisp_iowrite32(params_vdev, arg->sw_pdaf_en, ISP_DPCC1_PDAF_EN);
+	rkisp_iowrite32(params_vdev, arg->sw_pdaf_en, ISP_DPCC2_PDAF_EN);
 
 	value = 0;
 	for (i = 0; i < ISP2X_DPCC_PDAF_POINT_NUM; i++)
 		value |= (arg->pdaf_point_en[i] & 0x01) << i;
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_PDAF_POINT_EN);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_PDAF_POINT_EN);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_PDAF_POINT_EN);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_PDAF_POINT_EN);
 
 	value = ISP2X_PACK_2SHORT(arg->pdaf_offsetx, arg->pdaf_offsety);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_PDAF_OFFSET);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_PDAF_OFFSET);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_PDAF_OFFSET);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_PDAF_OFFSET);
 
 	value = ISP2X_PACK_2SHORT(arg->pdaf_wrapx, arg->pdaf_wrapy);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_PDAF_WRAP);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_PDAF_WRAP);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_PDAF_WRAP);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_PDAF_WRAP);
 
 	value = ISP2X_PACK_2SHORT(arg->pdaf_wrapx_num, arg->pdaf_wrapy_num);
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_PDAF_SCOPE);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_PDAF_SCOPE);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_PDAF_SCOPE);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_PDAF_SCOPE);
 
 	for (i = 0; i < ISP2X_DPCC_PDAF_POINT_NUM / 2; i++) {
 		value = ISP2X_PACK_4BYTE(arg->point[2 * i].x, arg->point[2 * i].y,
 					 arg->point[2 * i + 1].x, arg->point[2 * i + 1].y);
-		rkisp_iowrite32(params_vdev, value, ISP_DPCC_PDAF_POINT_0 + 4 * i);
+		rkisp_iowrite32(params_vdev, value, ISP_DPCC0_PDAF_POINT_0 + 4 * i);
+		rkisp_iowrite32(params_vdev, value, ISP_DPCC1_PDAF_POINT_0 + 4 * i);
+		rkisp_iowrite32(params_vdev, value, ISP_DPCC2_PDAF_POINT_0 + 4 * i);
 	}
 
-	rkisp_iowrite32(params_vdev, arg->pdaf_forward_med, ISP_DPCC_BPT_ADDR);
+	rkisp_iowrite32(params_vdev, arg->pdaf_forward_med, ISP_DPCC0_BPT_ADDR);
+	rkisp_iowrite32(params_vdev, arg->pdaf_forward_med, ISP_DPCC1_BPT_ADDR);
+	rkisp_iowrite32(params_vdev, arg->pdaf_forward_med, ISP_DPCC2_BPT_ADDR);
 }
 
 static void
@@ -252,12 +322,14 @@ isp_dpcc_enable(struct rkisp_isp_params_vdev *params_vdev,
 {
 	u32 value;
 
-	value = rkisp_ioread32(params_vdev, ISP_DPCC_MODE);
+	value = rkisp_ioread32(params_vdev, ISP_DPCC0_MODE);
 	value &= ~ISP_DPCC_EN;
 
 	if (en)
 		value |= ISP_DPCC_EN;
-	rkisp_iowrite32(params_vdev, value, ISP_DPCC_MODE);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC0_MODE);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC1_MODE);
+	rkisp_iowrite32(params_vdev, value, ISP_DPCC2_MODE);
 }
 
 static void
diff --git a/drivers/media/platform/rockchip/isp/regs_v2x.h b/drivers/media/platform/rockchip/isp/regs_v2x.h
index 815994162b2a..05fa0ae378f3 100644
--- a/drivers/media/platform/rockchip/isp/regs_v2x.h
+++ b/drivers/media/platform/rockchip/isp/regs_v2x.h
@@ -693,49 +693,137 @@
 #define ISP_BLS_C_MEASURED			(ISP_BLS_BASE + 0x00040)
 #define ISP_BLS_D_MEASURED			(ISP_BLS_BASE + 0x00044)
 
-#define ISP_DPCC_BASE				0x00003400
-#define ISP_DPCC_MODE				(ISP_DPCC_BASE + 0x00000)
-#define ISP_DPCC_OUTPUT_MODE			(ISP_DPCC_BASE + 0x00004)
-#define ISP_DPCC_SET_USE			(ISP_DPCC_BASE + 0x00008)
-#define ISP_DPCC_METHODS_SET_1			(ISP_DPCC_BASE + 0x0000c)
-#define ISP_DPCC_METHODS_SET_2			(ISP_DPCC_BASE + 0x00010)
-#define ISP_DPCC_METHODS_SET_3			(ISP_DPCC_BASE + 0x00014)
-#define ISP_DPCC_LINE_THRESH_1			(ISP_DPCC_BASE + 0x00018)
-#define ISP_DPCC_LINE_MAD_FAC_1			(ISP_DPCC_BASE + 0x0001c)
-#define ISP_DPCC_PG_FAC_1			(ISP_DPCC_BASE + 0x00020)
-#define ISP_DPCC_RND_THRESH_1			(ISP_DPCC_BASE + 0x00024)
-#define ISP_DPCC_RG_FAC_1			(ISP_DPCC_BASE + 0x00028)
-#define ISP_DPCC_LINE_THRESH_2			(ISP_DPCC_BASE + 0x0002c)
-#define ISP_DPCC_LINE_MAD_FAC_2			(ISP_DPCC_BASE + 0x00030)
-#define ISP_DPCC_PG_FAC_2			(ISP_DPCC_BASE + 0x00034)
-#define ISP_DPCC_RND_THRESH_2			(ISP_DPCC_BASE + 0x00038)
-#define ISP_DPCC_RG_FAC_2			(ISP_DPCC_BASE + 0x0003c)
-#define ISP_DPCC_LINE_THRESH_3			(ISP_DPCC_BASE + 0x00040)
-#define ISP_DPCC_LINE_MAD_FAC_3			(ISP_DPCC_BASE + 0x00044)
-#define ISP_DPCC_PG_FAC_3			(ISP_DPCC_BASE + 0x00048)
-#define ISP_DPCC_RND_THRESH_3			(ISP_DPCC_BASE + 0x0004c)
-#define ISP_DPCC_RG_FAC_3			(ISP_DPCC_BASE + 0x00050)
-#define ISP_DPCC_RO_LIMITS			(ISP_DPCC_BASE + 0x00054)
-#define ISP_DPCC_RND_OFFS			(ISP_DPCC_BASE + 0x00058)
-#define ISP_DPCC_BPT_CTRL			(ISP_DPCC_BASE + 0x0005c)
-#define ISP_DPCC_BPT_NUMBER			(ISP_DPCC_BASE + 0x00060)
-#define ISP_DPCC_BPT_ADDR			(ISP_DPCC_BASE + 0x00064)
-#define ISP_DPCC_BPT_DATA			(ISP_DPCC_BASE + 0x00068)
-#define ISP_DPCC_BP_CNT				(ISP_DPCC_BASE + 0x0006c)
-#define ISP_DPCC_PDAF_EN			(ISP_DPCC_BASE + 0x00070)
-#define ISP_DPCC_PDAF_POINT_EN			(ISP_DPCC_BASE + 0x00074)
-#define ISP_DPCC_PDAF_OFFSET			(ISP_DPCC_BASE + 0x00078)
-#define ISP_DPCC_PDAF_WRAP			(ISP_DPCC_BASE + 0x0007c)
-#define ISP_DPCC_PDAF_SCOPE			(ISP_DPCC_BASE + 0x00080)
-#define ISP_DPCC_PDAF_POINT_0			(ISP_DPCC_BASE + 0x00084)
-#define ISP_DPCC_PDAF_POINT_1			(ISP_DPCC_BASE + 0x00088)
-#define ISP_DPCC_PDAF_POINT_2			(ISP_DPCC_BASE + 0x0008c)
-#define ISP_DPCC_PDAF_POINT_3			(ISP_DPCC_BASE + 0x00090)
-#define ISP_DPCC_PDAF_POINT_4			(ISP_DPCC_BASE + 0x00094)
-#define ISP_DPCC_PDAF_POINT_5			(ISP_DPCC_BASE + 0x00098)
-#define ISP_DPCC_PDAF_POINT_6			(ISP_DPCC_BASE + 0x0009c)
-#define ISP_DPCC_PDAF_POINT_7			(ISP_DPCC_BASE + 0x000a0)
-#define ISP_DPCC_PDAF_FORWARD_MED		(ISP_DPCC_BASE + 0x000a4)
+#define ISP_DPCC0_BASE				0x00003400
+#define ISP_DPCC1_BASE				0x00003500
+#define ISP_DPCC2_BASE				0x00003600
+#define ISP_DPCC0_MODE				(ISP_DPCC0_BASE + 0x00000)
+#define ISP_DPCC0_OUTPUT_MODE			(ISP_DPCC0_BASE + 0x00004)
+#define ISP_DPCC0_SET_USE			(ISP_DPCC0_BASE + 0x00008)
+#define ISP_DPCC0_METHODS_SET_1			(ISP_DPCC0_BASE + 0x0000c)
+#define ISP_DPCC0_METHODS_SET_2			(ISP_DPCC0_BASE + 0x00010)
+#define ISP_DPCC0_METHODS_SET_3			(ISP_DPCC0_BASE + 0x00014)
+#define ISP_DPCC0_LINE_THRESH_1			(ISP_DPCC0_BASE + 0x00018)
+#define ISP_DPCC0_LINE_MAD_FAC_1		(ISP_DPCC0_BASE + 0x0001c)
+#define ISP_DPCC0_PG_FAC_1			(ISP_DPCC0_BASE + 0x00020)
+#define ISP_DPCC0_RND_THRESH_1			(ISP_DPCC0_BASE + 0x00024)
+#define ISP_DPCC0_RG_FAC_1			(ISP_DPCC0_BASE + 0x00028)
+#define ISP_DPCC0_LINE_THRESH_2			(ISP_DPCC0_BASE + 0x0002c)
+#define ISP_DPCC0_LINE_MAD_FAC_2		(ISP_DPCC0_BASE + 0x00030)
+#define ISP_DPCC0_PG_FAC_2			(ISP_DPCC0_BASE + 0x00034)
+#define ISP_DPCC0_RND_THRESH_2			(ISP_DPCC0_BASE + 0x00038)
+#define ISP_DPCC0_RG_FAC_2			(ISP_DPCC0_BASE + 0x0003c)
+#define ISP_DPCC0_LINE_THRESH_3			(ISP_DPCC0_BASE + 0x00040)
+#define ISP_DPCC0_LINE_MAD_FAC_3		(ISP_DPCC0_BASE + 0x00044)
+#define ISP_DPCC0_PG_FAC_3			(ISP_DPCC0_BASE + 0x00048)
+#define ISP_DPCC0_RND_THRESH_3			(ISP_DPCC0_BASE + 0x0004c)
+#define ISP_DPCC0_RG_FAC_3			(ISP_DPCC0_BASE + 0x00050)
+#define ISP_DPCC0_RO_LIMITS			(ISP_DPCC0_BASE + 0x00054)
+#define ISP_DPCC0_RND_OFFS			(ISP_DPCC0_BASE + 0x00058)
+#define ISP_DPCC0_BPT_CTRL			(ISP_DPCC0_BASE + 0x0005c)
+#define ISP_DPCC0_BPT_NUMBER			(ISP_DPCC0_BASE + 0x00060)
+#define ISP_DPCC0_BPT_ADDR			(ISP_DPCC0_BASE + 0x00064)
+#define ISP_DPCC0_BPT_DATA			(ISP_DPCC0_BASE + 0x00068)
+#define ISP_DPCC0_BP_CNT			(ISP_DPCC0_BASE + 0x0006c)
+#define ISP_DPCC0_PDAF_EN			(ISP_DPCC0_BASE + 0x00070)
+#define ISP_DPCC0_PDAF_POINT_EN			(ISP_DPCC0_BASE + 0x00074)
+#define ISP_DPCC0_PDAF_OFFSET			(ISP_DPCC0_BASE + 0x00078)
+#define ISP_DPCC0_PDAF_WRAP			(ISP_DPCC0_BASE + 0x0007c)
+#define ISP_DPCC0_PDAF_SCOPE			(ISP_DPCC0_BASE + 0x00080)
+#define ISP_DPCC0_PDAF_POINT_0			(ISP_DPCC0_BASE + 0x00084)
+#define ISP_DPCC0_PDAF_POINT_1			(ISP_DPCC0_BASE + 0x00088)
+#define ISP_DPCC0_PDAF_POINT_2			(ISP_DPCC0_BASE + 0x0008c)
+#define ISP_DPCC0_PDAF_POINT_3			(ISP_DPCC0_BASE + 0x00090)
+#define ISP_DPCC0_PDAF_POINT_4			(ISP_DPCC0_BASE + 0x00094)
+#define ISP_DPCC0_PDAF_POINT_5			(ISP_DPCC0_BASE + 0x00098)
+#define ISP_DPCC0_PDAF_POINT_6			(ISP_DPCC0_BASE + 0x0009c)
+#define ISP_DPCC0_PDAF_POINT_7			(ISP_DPCC0_BASE + 0x000a0)
+#define ISP_DPCC0_PDAF_FORWARD_MED		(ISP_DPCC0_BASE + 0x000a4)
+
+#define ISP_DPCC1_MODE				(ISP_DPCC1_BASE + 0x00000)
+#define ISP_DPCC1_OUTPUT_MODE			(ISP_DPCC1_BASE + 0x00004)
+#define ISP_DPCC1_SET_USE			(ISP_DPCC1_BASE + 0x00008)
+#define ISP_DPCC1_METHODS_SET_1			(ISP_DPCC1_BASE + 0x0000c)
+#define ISP_DPCC1_METHODS_SET_2			(ISP_DPCC1_BASE + 0x00010)
+#define ISP_DPCC1_METHODS_SET_3			(ISP_DPCC1_BASE + 0x00014)
+#define ISP_DPCC1_LINE_THRESH_1			(ISP_DPCC1_BASE + 0x00018)
+#define ISP_DPCC1_LINE_MAD_FAC_1		(ISP_DPCC1_BASE + 0x0001c)
+#define ISP_DPCC1_PG_FAC_1			(ISP_DPCC1_BASE + 0x00020)
+#define ISP_DPCC1_RND_THRESH_1			(ISP_DPCC1_BASE + 0x00024)
+#define ISP_DPCC1_RG_FAC_1			(ISP_DPCC1_BASE + 0x00028)
+#define ISP_DPCC1_LINE_THRESH_2			(ISP_DPCC1_BASE + 0x0002c)
+#define ISP_DPCC1_LINE_MAD_FAC_2		(ISP_DPCC1_BASE + 0x00030)
+#define ISP_DPCC1_PG_FAC_2			(ISP_DPCC1_BASE + 0x00034)
+#define ISP_DPCC1_RND_THRESH_2			(ISP_DPCC1_BASE + 0x00038)
+#define ISP_DPCC1_RG_FAC_2			(ISP_DPCC1_BASE + 0x0003c)
+#define ISP_DPCC1_LINE_THRESH_3			(ISP_DPCC1_BASE + 0x00040)
+#define ISP_DPCC1_LINE_MAD_FAC_3		(ISP_DPCC1_BASE + 0x00044)
+#define ISP_DPCC1_PG_FAC_3			(ISP_DPCC1_BASE + 0x00048)
+#define ISP_DPCC1_RND_THRESH_3			(ISP_DPCC1_BASE + 0x0004c)
+#define ISP_DPCC1_RG_FAC_3			(ISP_DPCC1_BASE + 0x00050)
+#define ISP_DPCC1_RO_LIMITS			(ISP_DPCC1_BASE + 0x00054)
+#define ISP_DPCC1_RND_OFFS			(ISP_DPCC1_BASE + 0x00058)
+#define ISP_DPCC1_BPT_CTRL			(ISP_DPCC1_BASE + 0x0005c)
+#define ISP_DPCC1_BPT_NUMBER			(ISP_DPCC1_BASE + 0x00060)
+#define ISP_DPCC1_BPT_ADDR			(ISP_DPCC1_BASE + 0x00064)
+#define ISP_DPCC1_BPT_DATA			(ISP_DPCC1_BASE + 0x00068)
+#define ISP_DPCC1_BP_CNT			(ISP_DPCC1_BASE + 0x0006c)
+#define ISP_DPCC1_PDAF_EN			(ISP_DPCC1_BASE + 0x00070)
+#define ISP_DPCC1_PDAF_POINT_EN			(ISP_DPCC1_BASE + 0x00074)
+#define ISP_DPCC1_PDAF_OFFSET			(ISP_DPCC1_BASE + 0x00078)
+#define ISP_DPCC1_PDAF_WRAP			(ISP_DPCC1_BASE + 0x0007c)
+#define ISP_DPCC1_PDAF_SCOPE			(ISP_DPCC1_BASE + 0x00080)
+#define ISP_DPCC1_PDAF_POINT_0			(ISP_DPCC1_BASE + 0x00084)
+#define ISP_DPCC1_PDAF_POINT_1			(ISP_DPCC1_BASE + 0x00088)
+#define ISP_DPCC1_PDAF_POINT_2			(ISP_DPCC1_BASE + 0x0008c)
+#define ISP_DPCC1_PDAF_POINT_3			(ISP_DPCC1_BASE + 0x00090)
+#define ISP_DPCC1_PDAF_POINT_4			(ISP_DPCC1_BASE + 0x00094)
+#define ISP_DPCC1_PDAF_POINT_5			(ISP_DPCC1_BASE + 0x00098)
+#define ISP_DPCC1_PDAF_POINT_6			(ISP_DPCC1_BASE + 0x0009c)
+#define ISP_DPCC1_PDAF_POINT_7			(ISP_DPCC1_BASE + 0x000a0)
+#define ISP_DPCC1_PDAF_FORWARD_MED		(ISP_DPCC1_BASE + 0x000a4)
+
+#define ISP_DPCC2_MODE				(ISP_DPCC2_BASE + 0x00000)
+#define ISP_DPCC2_OUTPUT_MODE			(ISP_DPCC2_BASE + 0x00004)
+#define ISP_DPCC2_SET_USE			(ISP_DPCC2_BASE + 0x00008)
+#define ISP_DPCC2_METHODS_SET_1			(ISP_DPCC2_BASE + 0x0000c)
+#define ISP_DPCC2_METHODS_SET_2			(ISP_DPCC2_BASE + 0x00010)
+#define ISP_DPCC2_METHODS_SET_3			(ISP_DPCC2_BASE + 0x00014)
+#define ISP_DPCC2_LINE_THRESH_1			(ISP_DPCC2_BASE + 0x00018)
+#define ISP_DPCC2_LINE_MAD_FAC_1		(ISP_DPCC2_BASE + 0x0001c)
+#define ISP_DPCC2_PG_FAC_1			(ISP_DPCC2_BASE + 0x00020)
+#define ISP_DPCC2_RND_THRESH_1			(ISP_DPCC2_BASE + 0x00024)
+#define ISP_DPCC2_RG_FAC_1			(ISP_DPCC2_BASE + 0x00028)
+#define ISP_DPCC2_LINE_THRESH_2			(ISP_DPCC2_BASE + 0x0002c)
+#define ISP_DPCC2_LINE_MAD_FAC_2		(ISP_DPCC2_BASE + 0x00030)
+#define ISP_DPCC2_PG_FAC_2			(ISP_DPCC2_BASE + 0x00034)
+#define ISP_DPCC2_RND_THRESH_2			(ISP_DPCC2_BASE + 0x00038)
+#define ISP_DPCC2_RG_FAC_2			(ISP_DPCC2_BASE + 0x0003c)
+#define ISP_DPCC2_LINE_THRESH_3			(ISP_DPCC2_BASE + 0x00040)
+#define ISP_DPCC2_LINE_MAD_FAC_3		(ISP_DPCC2_BASE + 0x00044)
+#define ISP_DPCC2_PG_FAC_3			(ISP_DPCC2_BASE + 0x00048)
+#define ISP_DPCC2_RND_THRESH_3			(ISP_DPCC2_BASE + 0x0004c)
+#define ISP_DPCC2_RG_FAC_3			(ISP_DPCC2_BASE + 0x00050)
+#define ISP_DPCC2_RO_LIMITS			(ISP_DPCC2_BASE + 0x00054)
+#define ISP_DPCC2_RND_OFFS			(ISP_DPCC2_BASE + 0x00058)
+#define ISP_DPCC2_BPT_CTRL			(ISP_DPCC2_BASE + 0x0005c)
+#define ISP_DPCC2_BPT_NUMBER			(ISP_DPCC2_BASE + 0x00060)
+#define ISP_DPCC2_BPT_ADDR			(ISP_DPCC2_BASE + 0x00064)
+#define ISP_DPCC2_BPT_DATA			(ISP_DPCC2_BASE + 0x00068)
+#define ISP_DPCC2_BP_CNT			(ISP_DPCC2_BASE + 0x0006c)
+#define ISP_DPCC2_PDAF_EN			(ISP_DPCC2_BASE + 0x00070)
+#define ISP_DPCC2_PDAF_POINT_EN			(ISP_DPCC2_BASE + 0x00074)
+#define ISP_DPCC2_PDAF_OFFSET			(ISP_DPCC2_BASE + 0x00078)
+#define ISP_DPCC2_PDAF_WRAP			(ISP_DPCC2_BASE + 0x0007c)
+#define ISP_DPCC2_PDAF_SCOPE			(ISP_DPCC2_BASE + 0x00080)
+#define ISP_DPCC2_PDAF_POINT_0			(ISP_DPCC2_BASE + 0x00084)
+#define ISP_DPCC2_PDAF_POINT_1			(ISP_DPCC2_BASE + 0x00088)
+#define ISP_DPCC2_PDAF_POINT_2			(ISP_DPCC2_BASE + 0x0008c)
+#define ISP_DPCC2_PDAF_POINT_3			(ISP_DPCC2_BASE + 0x00090)
+#define ISP_DPCC2_PDAF_POINT_4			(ISP_DPCC2_BASE + 0x00094)
+#define ISP_DPCC2_PDAF_POINT_5			(ISP_DPCC2_BASE + 0x00098)
+#define ISP_DPCC2_PDAF_POINT_6			(ISP_DPCC2_BASE + 0x0009c)
+#define ISP_DPCC2_PDAF_POINT_7			(ISP_DPCC2_BASE + 0x000a0)
+#define ISP_DPCC2_PDAF_FORWARD_MED		(ISP_DPCC2_BASE + 0x000a4)
 
 #define ISP_HDRMGE_BASE				0x00003800
 #define ISP_HDRMGE_CTRL				(ISP_HDRMGE_BASE + 0x00000)
-- 
2.35.3

