From 6b406ee4c7787dbe6abd65e762315a4c393c8036 Mon Sep 17 00:00:00 2001
From: William Wu <william.wu@rock-chips.com>
Date: Mon, 20 Nov 2017 18:07:23 +0800
Subject: [PATCH] usb: dwc_otg_310: hcd: fix isoc split in transaction

The handle_xfercomp_isoc_split_in() use two conditions
to check if the isoc in csplit transcation is done:

 - the actual xfer length of the current frame is zero
 - the total xfer length of the frames equals to the
   request length of the frames

But in some case, we find that the two conditions are
not enough, e.g. on rockchip platforms, connect the usb
audio card with the FE1.1 HUB, the audio is setted to
44100 2ch 16 bits, the csplit transcation sequence is:

 - CSPLIT IN transcation
   - MDATA packet [176 bytes]

 - CSPLIT IN transcation
   - DATA0 packet [No data]

In this case, the total actual xfer length of frames is
less than the request length of frames, so the current
code will not update the status of frame and the qtd
isoc_frame_index, this cause usb audio data corrupted.

According to the USB 2.0 spec "Figure 11-85. Isochronous
IN Complete-split Transaction Sequence", we can use DATA0
to check if the transaction is last data. So use DATA0
instead of zero length transaction to check if the csplit
transcation is done.

Change-Id: I55cfa3f7b93ed6bfba3ecec5820d7b534c05ba34
Signed-off-by: William Wu <william.wu@rock-chips.com>
---
 drivers/usb/dwc_otg_310/dwc_otg_hcd_intr.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/drivers/usb/dwc_otg_310/dwc_otg_hcd_intr.c b/drivers/usb/dwc_otg_310/dwc_otg_hcd_intr.c
index 1d1046b65b2f..1e71ebb85da3 100644
--- a/drivers/usb/dwc_otg_310/dwc_otg_hcd_intr.c
+++ b/drivers/usb/dwc_otg_310/dwc_otg_hcd_intr.c
@@ -1062,16 +1062,14 @@ static int32_t handle_xfercomp_isoc_split_in(dwc_otg_hcd_t *hcd,
 {
 	uint32_t len;
 	struct dwc_otg_hcd_iso_packet_desc *frame_desc;
+	hctsiz_data_t hctsiz;
+
 	frame_desc = &qtd->urb->iso_descs[qtd->isoc_frame_index];
+	hctsiz.d32 = DWC_READ_REG32(&hc_regs->hctsiz);
 
 	len = get_actual_xfer_length(hc, hc_regs, qtd,
 				     DWC_OTG_HC_XFER_COMPLETE, NULL);
 
-	if (!len) {
-		qtd->complete_split = 0;
-		qtd->isoc_split_offset = 0;
-		return 0;
-	}
 	frame_desc->actual_length += len;
 
 	if (hc->align_buff && len)
@@ -1079,7 +1077,8 @@ static int32_t handle_xfercomp_isoc_split_in(dwc_otg_hcd_t *hcd,
 			   qtd->isoc_split_offset, hc->qh->dw_align_buf, len);
 	qtd->isoc_split_offset += len;
 
-	if (frame_desc->length == frame_desc->actual_length) {
+	if (frame_desc->length == frame_desc->actual_length ||
+	    hctsiz.b.pid == DWC_OTG_HC_PID_DATA0) {
 		frame_desc->status = 0;
 		qtd->isoc_frame_index++;
 		qtd->complete_split = 0;
-- 
2.35.3

