From 24c39fdbf948550d7a7b035194c29a9d8ac9d202 Mon Sep 17 00:00:00 2001
From: XiaoDong Huang <derrick.huang@rock-chips.com>
Date: Wed, 17 Jan 2018 16:08:43 +0800
Subject: [PATCH] soc: rockchip: virtual poweroff: not pass pwrkey code to ATF

If it supports "remotectl parse" after system resume,
the remotectl driver would pass pwrkey code to atf.
So we don't need do it again.

Change-Id: Ia73a4fe314e476d551113b111df4bc42b7867ee0
Signed-off-by: XiaoDong Huang <derrick.huang@rock-chips.com>
---
 drivers/soc/rockchip/rockchip_pm_config.c | 68 -----------------------
 1 file changed, 68 deletions(-)

diff --git a/drivers/soc/rockchip/rockchip_pm_config.c b/drivers/soc/rockchip/rockchip_pm_config.c
index 0039ccf6c921..ece90ca19cc5 100644
--- a/drivers/soc/rockchip/rockchip_pm_config.c
+++ b/drivers/soc/rockchip/rockchip_pm_config.c
@@ -29,77 +29,9 @@ static const struct of_device_id pm_match_table[] = {
 	{ },
 };
 
-#define MAX_PWRKEY_NUMS		20
-#define MAX_NUM_KEYS		60
-
-struct rkxx_remote_key_table {
-	int scancode;
-	int keycode;
-};
-
-static int parse_ir_pwrkeys(unsigned int *pwrkey, int size, int *nkey)
-{
-	struct device_node *node;
-	struct device_node *child_node;
-	struct rkxx_remote_key_table key_table[MAX_NUM_KEYS];
-	int i;
-	int len = 0, nbuttons;
-	int num = 0;
-	u32 usercode, scancode;
-
-	for_each_node_by_name(node, "pwm") {
-		for_each_child_of_node(node, child_node) {
-			if (of_property_read_u32(child_node,
-						 "rockchip,usercode",
-						 &usercode))
-				break;
-
-			if (of_get_property(child_node,
-					    "rockchip,key_table",
-					    &len) == NULL ||
-			    len <= 0)
-				break;
-
-			len = len < sizeof(key_table) ? len : sizeof(key_table);
-			len /= sizeof(u32);
-			if (of_property_read_u32_array(child_node,
-						       "rockchip,key_table",
-						       (u32 *)key_table,
-						       len))
-				break;
-
-			nbuttons = len / 2;
-			for (i = 0; i < nbuttons && num < size; ++i) {
-				if (key_table[i].keycode == KEY_POWER) {
-					scancode = key_table[i].scancode;
-					pr_debug("usercode=%x, key=%x\n",
-						 usercode, scancode);
-					pwrkey[num] = (usercode & 0xffff) << 16;
-					pwrkey[num] |= (scancode & 0xff) << 8;
-					++num;
-				}
-			}
-		}
-	}
-
-	*nkey = num;
-
-	return num ? 0 : -1;
-}
-
 static void rockchip_pm_virt_pwroff_prepare(void)
 {
 	int error;
-	int i, nkey;
-	u32 power_key[MAX_PWRKEY_NUMS];
-
-	if ((parse_ir_pwrkeys(power_key, ARRAY_SIZE(power_key), &nkey))) {
-		pr_err("Parse ir powerkey code failed!\n");
-		return;
-	}
-
-	for (i = 0; i < nkey; ++i)
-		sip_smc_set_suspend_mode(VIRTUAL_POWEROFF, 1, power_key[i]);
 
 	regulator_suspend_prepare(PM_SUSPEND_MEM);
 
-- 
2.35.3

