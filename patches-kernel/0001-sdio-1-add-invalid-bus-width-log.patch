From fe3debe9179793e19ad00017d788e9a1dae74e53 Mon Sep 17 00:00:00 2001
From: lintao <lintao@rock-chips.com>
Date: Mon, 9 Sep 2013 10:17:49 +0800
Subject: [PATCH] sdio: 1 add invalid bus width log;       2 fix SDIO_CCCR_IF
 bus width setting

---
 drivers/mmc/core/sdio.c  | 6 ++++++
 include/linux/mmc/sdio.h | 2 ++
 2 files changed, 8 insertions(+)

diff --git a/drivers/mmc/core/sdio.c b/drivers/mmc/core/sdio.c
index 9dff97cbd4a3..05cf2c1ff4a4 100755
--- a/drivers/mmc/core/sdio.c
+++ b/drivers/mmc/core/sdio.c
@@ -219,6 +219,12 @@ static int sdio_enable_wide(struct mmc_card *card)
 	if (ret)
 		return ret;
 
+    if ((ctrl & SDIO_BUS_WIDTH_MASK) == SDIO_BUS_WIDTH_RESERVED)
+		printk("%s: SDIO_CCCR_IF is invalid: 0x%02x\n",
+			   mmc_hostname(card->host), ctrl);
+
+    /* set as 4-bit bus width */
+	ctrl &= ~SDIO_BUS_WIDTH_MASK;
 	ctrl |= SDIO_BUS_WIDTH_4BIT;
 
 	ret = mmc_io_rw_direct(card, 1, 0, SDIO_CCCR_IF, ctrl, NULL);
diff --git a/include/linux/mmc/sdio.h b/include/linux/mmc/sdio.h
index 5e5dd1ff596e..26d116e96bb9 100755
--- a/include/linux/mmc/sdio.h
+++ b/include/linux/mmc/sdio.h
@@ -99,7 +99,9 @@
 
 #define SDIO_CCCR_IF		0x07	/* bus interface controls */
 
+#define  SDIO_BUS_WIDTH_MASK	0x03	/* data bus width setting */
 #define  SDIO_BUS_WIDTH_1BIT	0x00
+#define  SDIO_BUS_WIDTH_RESERVED 0x01
 #define  SDIO_BUS_WIDTH_4BIT	0x02
 #define  SDIO_BUS_ECSI		0x20	/* Enable continuous SPI interrupt */
 #define  SDIO_BUS_SCSI		0x40	/* Support continuous SPI interrupt */
-- 
2.35.3

