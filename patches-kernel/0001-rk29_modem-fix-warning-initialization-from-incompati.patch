From 9ae50b74e66d9d56562a313ec9b9c35a74678db7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E9=BB=84=E6=B6=9B?= <huangtao@rock-chips.com>
Date: Mon, 7 Nov 2011 15:00:14 +0800
Subject: [PATCH] rk29_modem: fix warning: initialization from incompatible
 pointer type

---
 drivers/misc/rk29_modem/rk29_modem.c | 26 +++++++++++++++++---------
 1 file changed, 17 insertions(+), 9 deletions(-)

diff --git a/drivers/misc/rk29_modem/rk29_modem.c b/drivers/misc/rk29_modem/rk29_modem.c
index 56de034c9693..bff4bf5051c5 100644
--- a/drivers/misc/rk29_modem/rk29_modem.c
+++ b/drivers/misc/rk29_modem/rk29_modem.c
@@ -39,7 +39,11 @@ int rk29_modem_change_status(struct rk29_modem_t *rk29_modem, int status)
     return ret;
 }
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 37))
+static ssize_t modem_status_write(struct class *cls, struct class_attribute *attr, const char *_buf, size_t _count)
+#else
 static ssize_t modem_status_write(struct class *cls, const char *_buf, size_t _count)
+#endif
 {
     struct rk29_modem_t *rk29_modem = g_rk29_modem;
     int ret = 0;
@@ -92,7 +96,11 @@ static ssize_t modem_status_write(struct class *cls, const char *_buf, size_t _c
     return _count;
 }
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 37))
+static ssize_t modem_status_read(struct class *cls, struct class_attribute *attr, char *_buf)
+#else
 static ssize_t modem_status_read(struct class *cls, char *_buf)
+#endif
 {
     struct rk29_modem_t *rk29_modem = g_rk29_modem;
 
@@ -101,7 +109,7 @@ static ssize_t modem_status_read(struct class *cls, char *_buf)
 static CLASS_ATTR(modem_status, 0666, modem_status_read, modem_status_write);
 
 int __devinit rk29_modem_suspend(struct platform_device *pdev, pm_message_t state)
-{
+{
 #ifdef CONFIG_PM
     printk("%s[%d]: %s\n", __FILE__, __LINE__, __FUNCTION__);
 
@@ -113,11 +121,11 @@ int __devinit rk29_modem_suspend(struct platform_device *pdev, pm_message_t stat
             gpio_direction_output(g_rk29_modem->ap_ready->io_addr, g_rk29_modem->ap_ready->disable);
     }
 #endif
-	return 0;
-}
-
+	return 0;
+}
+
 int __devinit rk29_modem_resume(struct platform_device *pdev)
-{
+{
 #ifdef CONFIG_PM
     printk("%s[%d]: %s\n", __FILE__, __LINE__, __FUNCTION__);
     if( g_rk29_modem->resume )
@@ -128,14 +136,14 @@ int __devinit rk29_modem_resume(struct platform_device *pdev)
             gpio_direction_output(g_rk29_modem->ap_ready->io_addr, g_rk29_modem->ap_ready->enable);
     }
 #endif
-	return 0;
+	return 0;
 }
 
 static irqreturn_t irq_bbwakeupap_handler(int irq, void *dev_id)
 {
+    irqreturn_t irqret = IRQ_NONE;
     printk("%s[%d]: %s\n", __FILE__, __LINE__, __FUNCTION__);
 
-    irqreturn_t irqret = IRQ_NONE;
     if( g_rk29_modem->irq_handler )
     {
         irqret = g_rk29_modem->irq_handler(irq, dev_id);
@@ -161,11 +169,11 @@ static int install_irq(struct rk29_irq_t *rk29_irq, const char* label)
     printk("%s[%d]: %s\n", __FILE__, __LINE__, __FUNCTION__);
 
 	irq = gpio_to_irq(rk29_irq->irq_addr);
-    printk("%s: %d ==> %d\n", __func__, rk29_irq->irq_addr, irq);
+    printk("%s: %ld ==> %d\n", __func__, rk29_irq->irq_addr, irq);
 
 	ret = gpio_request(rk29_irq->irq_addr, label);
 	if (ret < 0) {
-		pr_err("%s: gpio_request(%d) failed\n", __func__, rk29_irq->irq_addr);
+		pr_err("%s: gpio_request(%ld) failed\n", __func__, rk29_irq->irq_addr);
 		return ret;
 	}
 
-- 
2.35.3

