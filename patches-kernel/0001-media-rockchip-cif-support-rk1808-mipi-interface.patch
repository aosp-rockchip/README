From 7f7e03f6bd00238386d9011d6a3ae7fddec9fd6c Mon Sep 17 00:00:00 2001
From: Allon Huang <allon.huang@rock-chips.com>
Date: Fri, 28 Aug 2020 10:51:15 +0800
Subject: [PATCH] media: rockchip: cif: support rk1808 mipi interface

Signed-off-by: Allon Huang <allon.huang@rock-chips.com>
Change-Id: Ibeab1d5edf860926ef08d40c31368ce2e52d55da
---
 drivers/media/platform/rockchip/cif/capture.c | 28 ++++++---
 drivers/media/platform/rockchip/cif/hw.c      | 63 ++++++++++++++++++-
 drivers/media/platform/rockchip/cif/regs.h    |  8 +++
 drivers/media/platform/rockchip/cif/version.h |  1 +
 4 files changed, 89 insertions(+), 11 deletions(-)

diff --git a/drivers/media/platform/rockchip/cif/capture.c b/drivers/media/platform/rockchip/cif/capture.c
index 704c86f65ae0..1c2495699b74 100644
--- a/drivers/media/platform/rockchip/cif/capture.c
+++ b/drivers/media/platform/rockchip/cif/capture.c
@@ -1396,7 +1396,11 @@ static int rkcif_csi_channel_set(struct rkcif_stream *stream,
 	rkcif_write_register_or(dev, CIF_REG_MIPI_LVDS_INTEN,
 				CSI_DMA_END_INTEN(channel->id));
 
-	rkcif_write_register(dev, CIF_REG_MIPI_WATER_LINE, 0x70012);
+	rkcif_write_register(dev, CIF_REG_MIPI_WATER_LINE,
+			     CIF_MIPI_LVDS_SW_WATER_LINE_25_RK1808 |
+			     CIF_MIPI_LVDS_SW_WATER_LINE_ENABLE_RK1808 |
+			     CIF_MIPI_LVDS_SW_HURRY_VALUE_RK1808(0x3) |
+			     CIF_MIPI_LVDS_SW_HURRY_ENABLE_RK1808);
 
 	val = CIF_MIPI_LVDS_SW_PRESS_VALUE(0x3) |
 		CIF_MIPI_LVDS_SW_PRESS_ENABLE |
@@ -1768,10 +1772,16 @@ static void rkcif_stop_streaming(struct vb2_queue *queue)
 
 	if (dev->can_be_reset) {
 		if (dev->hdr.mode != NO_HDR) {
-			rkcif_stop_luma(&dev->luma_vdev);
-			val = rkcif_read_register(dev, CIF_REG_MIPI_LVDS_CTRL);
-			val |= CIF_MIPI_LVDS_SW_DMA_IDLE;
-			rkcif_write_register(dev, CIF_REG_MIPI_LVDS_CTRL, val);
+			if (dev->chip_id == CHIP_RK1808_CIF) {
+				val = rkcif_read_register(dev, CIF_REG_MIPI_WATER_LINE);
+				val |= CIF_MIPI_LVDS_SW_DMA_IDLE_RK1808;
+				rkcif_write_register(dev, CIF_REG_MIPI_WATER_LINE, val);
+			} else {
+				rkcif_stop_luma(&dev->luma_vdev);
+				val = rkcif_read_register(dev, CIF_REG_MIPI_LVDS_CTRL);
+				val |= CIF_MIPI_LVDS_SW_DMA_IDLE;
+				rkcif_write_register(dev, CIF_REG_MIPI_LVDS_CTRL, val);
+			}
 			usleep_range(5, 10);
 			rkcif_soft_reset(dev, false);
 		} else {
@@ -3602,11 +3612,9 @@ static void rkcif_rdbk_frame_end(struct rkcif_stream *stream)
 
 void rkcif_irq_pingpong(struct rkcif_device *cif_dev)
 {
-	/* TODO: xuhf-debug: add stream type */
 	struct rkcif_stream *stream;
 	struct rkcif_buffer *active_buf = NULL;
 	struct v4l2_mbus_config *mbus;
-	void __iomem *base = cif_dev->hw_dev->base_addr;
 	unsigned int intstat, i = 0xff;
 
 	if (!cif_dev->active_sensor)
@@ -3621,11 +3629,11 @@ void rkcif_irq_pingpong(struct rkcif_device *cif_dev)
 		struct vb2_v4l2_buffer *vb_done = NULL;
 		u32 lastline = 0;
 
-		intstat = read_cif_reg(base, CIF_CSI_INTSTAT);
-		lastline = read_cif_reg(base, CIF_CSI_LINE_CNT_ID0_1);
+		intstat = rkcif_read_register(cif_dev, CIF_REG_MIPI_LVDS_INTSTAT);
+		lastline = rkcif_read_register(cif_dev, CIF_REG_MIPI_LVDS_LINE_LINE_CNT_ID0_1);
 
 		/* clear all interrupts that has been triggered */
-		write_cif_reg(base, CIF_CSI_INTSTAT, intstat);
+		rkcif_write_register(cif_dev, CIF_REG_MIPI_LVDS_INTSTAT, intstat);
 
 		if (intstat & CSI_FIFO_OVERFLOW) {
 			v4l2_err(&cif_dev->v4l2_dev,
diff --git a/drivers/media/platform/rockchip/cif/hw.c b/drivers/media/platform/rockchip/cif/hw.c
index 2a69d5777ebd..c66d5368a54e 100644
--- a/drivers/media/platform/rockchip/cif/hw.c
+++ b/drivers/media/platform/rockchip/cif/hw.c
@@ -78,7 +78,6 @@ static const char * const px30_cif_rsts[] = {
 	"rst_cif_pclkin",
 };
 
-/* TODO: define registers related to mipi */
 static const struct cif_reg rk1808_cif_regs[] = {
 	[CIF_REG_DVP_CTRL] = CIF_REG(CIF_CTRL),
 	[CIF_REG_DVP_INTEN] = CIF_REG(CIF_INTEN),
@@ -92,6 +91,7 @@ static const struct cif_reg rk1808_cif_regs[] = {
 	[CIF_REG_DVP_VIR_LINE_WIDTH] = CIF_REG(CIF_VIR_LINE_WIDTH),
 	[CIF_REG_DVP_SET_SIZE] = CIF_REG(CIF_SET_SIZE),
 	[CIF_REG_DVP_LINE_INT_NUM] = CIF_REG(CIF_LINE_INT_NUM),
+	[CIF_REG_DVP_LINE_CNT] = CIF_REG(CIF_LINE_CNT),
 	[CIF_REG_DVP_CROP] = CIF_REG(CIF_CROP),
 	[CIF_REG_DVP_PATH_SEL] = CIF_REG(CIF_PATH_SEL),
 	[CIF_REG_DVP_FIFO_ENTRY] = CIF_REG(CIF_FIFO_ENTRY),
@@ -99,6 +99,67 @@ static const struct cif_reg rk1808_cif_regs[] = {
 	[CIF_REG_DVP_CUR_DST] = CIF_REG(CIF_CUR_DST),
 	[CIF_REG_DVP_LAST_LINE] = CIF_REG(CIF_LAST_LINE),
 	[CIF_REG_DVP_LAST_PIX] = CIF_REG(CIF_LAST_PIX),
+	[CIF_REG_MIPI_LVDS_ID0_CTRL0] = CIF_REG(CIF_CSI_ID0_CTRL0),
+	[CIF_REG_MIPI_LVDS_ID0_CTRL1] = CIF_REG(CIF_CSI_ID0_CTRL1),
+	[CIF_REG_MIPI_LVDS_ID1_CTRL0] = CIF_REG(CIF_CSI_ID1_CTRL0),
+	[CIF_REG_MIPI_LVDS_ID1_CTRL1] = CIF_REG(CIF_CSI_ID1_CTRL1),
+	[CIF_REG_MIPI_LVDS_ID2_CTRL0] = CIF_REG(CIF_CSI_ID2_CTRL0),
+	[CIF_REG_MIPI_LVDS_ID2_CTRL1] = CIF_REG(CIF_CSI_ID2_CTRL1),
+	[CIF_REG_MIPI_LVDS_ID3_CTRL0] = CIF_REG(CIF_CSI_ID3_CTRL0),
+	[CIF_REG_MIPI_LVDS_ID3_CTRL1] = CIF_REG(CIF_CSI_ID3_CTRL1),
+	[CIF_REG_MIPI_WATER_LINE] = CIF_REG(CIF_CSI_WATER_LINE),
+	[CIF_REG_MIPI_LVDS_FRAME0_ADDR_Y_ID0] = CIF_REG(CIF_CSI_FRM0_ADDR_Y_ID0),
+	[CIF_REG_MIPI_LVDS_FRAME1_ADDR_Y_ID0] = CIF_REG(CIF_CSI_FRM1_ADDR_Y_ID0),
+	[CIF_REG_MIPI_LVDS_FRAME0_ADDR_UV_ID0] = CIF_REG(CIF_CSI_FRM0_ADDR_UV_ID0),
+	[CIF_REG_MIPI_LVDS_FRAME1_ADDR_UV_ID0] = CIF_REG(CIF_CSI_FRM1_ADDR_UV_ID0),
+	[CIF_REG_MIPI_LVDS_FRAME0_VLW_Y_ID0] = CIF_REG(CIF_CSI_FRM0_VLW_Y_ID0),
+	[CIF_REG_MIPI_LVDS_FRAME1_VLW_Y_ID0] = CIF_REG(CIF_CSI_FRM1_VLW_Y_ID0),
+	[CIF_REG_MIPI_LVDS_FRAME0_VLW_UV_ID0] = CIF_REG(CIF_CSI_FRM0_VLW_UV_ID0),
+	[CIF_REG_MIPI_LVDS_FRAME1_VLW_UV_ID0] = CIF_REG(CIF_CSI_FRM1_VLW_UV_ID0),
+	[CIF_REG_MIPI_LVDS_FRAME0_ADDR_Y_ID1] = CIF_REG(CIF_CSI_FRM0_ADDR_Y_ID1),
+	[CIF_REG_MIPI_LVDS_FRAME1_ADDR_Y_ID1] = CIF_REG(CIF_CSI_FRM1_ADDR_Y_ID1),
+	[CIF_REG_MIPI_LVDS_FRAME0_ADDR_UV_ID1] = CIF_REG(CIF_CSI_FRM0_ADDR_UV_ID1),
+	[CIF_REG_MIPI_LVDS_FRAME1_ADDR_UV_ID1] = CIF_REG(CIF_CSI_FRM1_ADDR_UV_ID1),
+	[CIF_REG_MIPI_LVDS_FRAME0_VLW_Y_ID1] = CIF_REG(CIF_CSI_FRM0_VLW_Y_ID1),
+	[CIF_REG_MIPI_LVDS_FRAME1_VLW_Y_ID1] = CIF_REG(CIF_CSI_FRM1_VLW_Y_ID1),
+	[CIF_REG_MIPI_LVDS_FRAME0_VLW_UV_ID1] = CIF_REG(CIF_CSI_FRM0_VLW_UV_ID1),
+	[CIF_REG_MIPI_LVDS_FRAME1_VLW_UV_ID1] = CIF_REG(CIF_CSI_FRM1_VLW_UV_ID1),
+	[CIF_REG_MIPI_LVDS_FRAME0_ADDR_Y_ID2] = CIF_REG(CIF_CSI_FRM0_ADDR_Y_ID2),
+	[CIF_REG_MIPI_LVDS_FRAME1_ADDR_Y_ID2] = CIF_REG(CIF_CSI_FRM1_ADDR_Y_ID2),
+	[CIF_REG_MIPI_LVDS_FRAME0_ADDR_UV_ID2] = CIF_REG(CIF_CSI_FRM0_ADDR_UV_ID2),
+	[CIF_REG_MIPI_LVDS_FRAME1_ADDR_UV_ID2] = CIF_REG(CIF_CSI_FRM1_ADDR_UV_ID2),
+	[CIF_REG_MIPI_LVDS_FRAME0_VLW_Y_ID2] = CIF_REG(CIF_CSI_FRM0_VLW_Y_ID2),
+	[CIF_REG_MIPI_LVDS_FRAME1_VLW_Y_ID2] = CIF_REG(CIF_CSI_FRM1_VLW_Y_ID2),
+	[CIF_REG_MIPI_LVDS_FRAME0_VLW_UV_ID2] = CIF_REG(CIF_CSI_FRM0_VLW_UV_ID2),
+	[CIF_REG_MIPI_LVDS_FRAME1_VLW_UV_ID2] = CIF_REG(CIF_CSI_FRM1_VLW_UV_ID2),
+	[CIF_REG_MIPI_LVDS_FRAME0_ADDR_Y_ID3] = CIF_REG(CIF_CSI_FRM0_ADDR_Y_ID3),
+	[CIF_REG_MIPI_LVDS_FRAME1_ADDR_Y_ID3] = CIF_REG(CIF_CSI_FRM1_ADDR_Y_ID3),
+	[CIF_REG_MIPI_LVDS_FRAME0_ADDR_UV_ID3] = CIF_REG(CIF_CSI_FRM0_ADDR_UV_ID3),
+	[CIF_REG_MIPI_LVDS_FRAME1_ADDR_UV_ID3] = CIF_REG(CIF_CSI_FRM1_ADDR_UV_ID3),
+	[CIF_REG_MIPI_LVDS_FRAME0_VLW_Y_ID3] = CIF_REG(CIF_CSI_FRM0_VLW_Y_ID3),
+	[CIF_REG_MIPI_LVDS_FRAME1_VLW_Y_ID3] = CIF_REG(CIF_CSI_FRM1_VLW_Y_ID3),
+	[CIF_REG_MIPI_LVDS_FRAME0_VLW_UV_ID3] = CIF_REG(CIF_CSI_FRM0_VLW_UV_ID3),
+	[CIF_REG_MIPI_LVDS_FRAME1_VLW_UV_ID3] = CIF_REG(CIF_CSI_FRM1_VLW_UV_ID3),
+	[CIF_REG_MIPI_LVDS_INTEN] = CIF_REG(CIF_CSI_INTEN),
+	[CIF_REG_MIPI_LVDS_INTSTAT] = CIF_REG(CIF_CSI_INTSTAT),
+	[CIF_REG_MIPI_LVDS_LINE_INT_NUM_ID0_1] = CIF_REG(CIF_CSI_LINE_INT_NUM_ID0_1),
+	[CIF_REG_MIPI_LVDS_LINE_INT_NUM_ID2_3] = CIF_REG(CIF_CSI_LINE_INT_NUM_ID2_3),
+	[CIF_REG_MIPI_LVDS_LINE_LINE_CNT_ID0_1] = CIF_REG(CIF_CSI_LINE_CNT_ID0_1),
+	[CIF_REG_MIPI_LVDS_LINE_LINE_CNT_ID2_3] = CIF_REG(CIF_CSI_LINE_CNT_ID2_3),
+	[CIF_REG_MIPI_LVDS_ID0_CROP_START] = CIF_REG(CIF_CSI_ID0_CROP_START),
+	[CIF_REG_MIPI_LVDS_ID1_CROP_START] = CIF_REG(CIF_CSI_ID1_CROP_START),
+	[CIF_REG_MIPI_LVDS_ID2_CROP_START] = CIF_REG(CIF_CSI_ID2_CROP_START),
+	[CIF_REG_MIPI_LVDS_ID3_CROP_START] = CIF_REG(CIF_CSI_ID3_CROP_START),
+	[CIF_REG_MMU_DTE_ADDR] = CIF_REG(CIF_MMU_DTE_ADDR),
+	[CIF_REG_MMU_STATUS] = CIF_REG(CIF_MMU_DTE_ADDR),
+	[CIF_REG_MMU_COMMAND] = CIF_REG(CIF_MMU_COMMAND),
+	[CIF_REG_MMU_PAGE_FAULT_ADDR] = CIF_REG(CIF_MMU_PAGE_FAULT_ADDR),
+	[CIF_REG_MMU_ZAP_ONE_LINE] = CIF_REG(CIF_MMU_ZAP_ONE_LINE),
+	[CIF_REG_MMU_INT_RAWSTAT] = CIF_REG(CIF_MMU_INT_RAWSTAT),
+	[CIF_REG_MMU_INT_CLEAR] = CIF_REG(CIF_MMU_INT_CLEAR),
+	[CIF_REG_MMU_INT_MASK] = CIF_REG(CIF_MMU_INT_MASK),
+	[CIF_REG_MMU_INT_STATUS] = CIF_REG(CIF_MMU_INT_STATUS),
+	[CIF_REG_MMU_AUTO_GATING] = CIF_REG(CIF_MMU_AUTO_GATING),
 };
 
 static const char * const rk1808_cif_clks[] = {
diff --git a/drivers/media/platform/rockchip/cif/regs.h b/drivers/media/platform/rockchip/cif/regs.h
index fcfab4874c6a..5dc1fe8f38f8 100644
--- a/drivers/media/platform/rockchip/cif/regs.h
+++ b/drivers/media/platform/rockchip/cif/regs.h
@@ -480,6 +480,14 @@ enum cif_reg_index {
 #define CIF_MIPI_LVDS_SW_WATER_LINE_25		(0x2 << 1)
 #define CIF_MIPI_LVDS_SW_WATER_LINE_00		(0x3 << 1)
 #define CIF_MIPI_LVDS_SW_WATER_LINE_ENABLE	(0x1 << 0)
+#define CIF_MIPI_LVDS_SW_DMA_IDLE_RK1808	(0x1 << 24)
+#define CIF_MIPI_LVDS_SW_HURRY_VALUE_RK1808(val)	(((val) & 0x3) << 17)
+#define CIF_MIPI_LVDS_SW_HURRY_ENABLE_RK1808	(0x1 << 16)
+#define CIF_MIPI_LVDS_SW_WATER_LINE_75_RK1808	(0x0 << 0)
+#define CIF_MIPI_LVDS_SW_WATER_LINE_50_RK1808	(0x1 << 0)
+#define CIF_MIPI_LVDS_SW_WATER_LINE_25_RK1808	(0x2 << 0)
+#define CIF_MIPI_LVDS_SW_WATER_LINE_00_RK1808	(0x3 << 0)
+#define CIF_MIPI_LVDS_SW_WATER_LINE_ENABLE_RK1808	(0x1 << 4)
 
 /* CSI Host Registers Define */
 #define CSIHOST_N_LANES		0x04
diff --git a/drivers/media/platform/rockchip/cif/version.h b/drivers/media/platform/rockchip/cif/version.h
index 30fa7ae48472..9ae3585cd8cb 100644
--- a/drivers/media/platform/rockchip/cif/version.h
+++ b/drivers/media/platform/rockchip/cif/version.h
@@ -44,6 +44,7 @@
  *1. support dvp and mipi/lvds run simultaneously
  *2. add subdev as interface for isp
  *3. support hdr_x3 mode
+ *4. support rk1808 mipi interface in kernel-4.19
  */
 
 #define RKCIF_DRIVER_VERSION RKCIF_API_VERSION
-- 
2.35.3

