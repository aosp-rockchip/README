From 8e891e47515822f8e5ab0c13450947077ec43021 Mon Sep 17 00:00:00 2001
From: Wyon Bi <bivvy.bi@rock-chips.com>
Date: Tue, 15 Jan 2019 14:19:18 +0800
Subject: [PATCH] drm/rockchip/rk618: dsi: Fix incorrect display mode in clone
 mode

Change-Id: Iaf89f600aa20c09710f3f8c634aeb5c4b34c236b
Signed-off-by: Wyon Bi <bivvy.bi@rock-chips.com>
---
 drivers/gpu/drm/rockchip/rk618/rk618_dsi.c    |  5 +-
 drivers/gpu/drm/rockchip/rk618/rk618_scaler.c | 79 ++++++++++---------
 2 files changed, 46 insertions(+), 38 deletions(-)

diff --git a/drivers/gpu/drm/rockchip/rk618/rk618_dsi.c b/drivers/gpu/drm/rockchip/rk618/rk618_dsi.c
index e10d74384214..8f130c468934 100644
--- a/drivers/gpu/drm/rockchip/rk618/rk618_dsi.c
+++ b/drivers/gpu/drm/rockchip/rk618/rk618_dsi.c
@@ -795,7 +795,10 @@ static void rk618_dsi_bridge_mode_set(struct drm_bridge *bridge,
 {
 	struct rk618_dsi *dsi = bridge_to_dsi(bridge);
 
-	drm_mode_copy(&dsi->mode, adj);
+	if (bridge->driver_private)
+		drm_mode_copy(&dsi->mode, bridge->driver_private);
+	else
+		drm_mode_copy(&dsi->mode, adj);
 }
 
 static int rk618_dsi_bridge_attach(struct drm_bridge *bridge)
diff --git a/drivers/gpu/drm/rockchip/rk618/rk618_scaler.c b/drivers/gpu/drm/rockchip/rk618/rk618_scaler.c
index 8262655c62d6..85a822fced2b 100644
--- a/drivers/gpu/drm/rockchip/rk618/rk618_scaler.c
+++ b/drivers/gpu/drm/rockchip/rk618/rk618_scaler.c
@@ -54,7 +54,8 @@
 struct rk618_scaler {
 	struct drm_bridge base;
 	struct drm_bridge *bridge;
-	struct drm_display_mode mode;
+	struct drm_display_mode src;
+	struct drm_display_mode dst;
 	struct device *dev;
 	struct regmap *regmap;
 	struct clk *vif_clk;
@@ -239,46 +240,17 @@ static void rk618_scaler_init(struct rk618_scaler *scl,
 static void rk618_scaler_bridge_enable(struct drm_bridge *bridge)
 {
 	struct rk618_scaler *scl = bridge_to_scaler(bridge);
-	struct drm_connector *connector;
-	const struct drm_display_mode *src = &scl->mode;
-	const struct drm_display_mode *mode;
-	struct drm_display_mode dst;
-	unsigned long dclk_rate = src->clock * 1000;
-	u64 sclk_rate;
+	struct drm_display_mode *src = &scl->src;
+	struct drm_display_mode *dst = &scl->dst;
 	long rate;
 
-	memset(&dst, 0, sizeof(dst));
-
-	drm_for_each_connector(connector, bridge->dev) {
-		if (connector->connector_type == DRM_MODE_CONNECTOR_HDMIA)
-			continue;
-
-		if (connector->encoder_ids[0] != bridge->encoder->base.id)
-			continue;
-
-		list_for_each_entry(mode, &connector->modes, head) {
-			if (mode->type & DRM_MODE_TYPE_PREFERRED) {
-				drm_mode_copy(&dst, mode);
-				break;
-			}
-		}
-	}
-
-	sclk_rate = (u64)dclk_rate * dst.vdisplay * dst.htotal;
-	do_div(sclk_rate, src->vdisplay * src->htotal);
-
-	dev_info(scl->dev, "src=%s, dst=%s\n", src->name, dst.name);
-	dev_info(scl->dev, "dclk rate: %ld, sclk rate: %lld\n",
-		 dclk_rate, sclk_rate);
-
 	clk_set_parent(scl->dither_clk, scl->scaler_clk);
 
-	rate = clk_round_rate(scl->scaler_clk, sclk_rate);
+	rate = clk_round_rate(scl->scaler_clk, dst->clock * 1000);
 	clk_set_rate(scl->scaler_clk, rate);
-	dst.clock = rate / 1000;
 	clk_prepare_enable(scl->scaler_clk);
 
-	rk618_scaler_init(scl, src, &dst);
+	rk618_scaler_init(scl, src, dst);
 	rk618_scaler_enable(scl);
 }
 
@@ -292,12 +264,45 @@ static void rk618_scaler_bridge_disable(struct drm_bridge *bridge)
 }
 
 static void rk618_scaler_bridge_mode_set(struct drm_bridge *bridge,
-				      struct drm_display_mode *mode,
-				      struct drm_display_mode *adjusted)
+					 struct drm_display_mode *mode,
+					 struct drm_display_mode *adjusted)
 {
 	struct rk618_scaler *scl = bridge_to_scaler(bridge);
+	struct drm_connector *connector;
+	struct drm_display_mode *src = &scl->src;
+	struct drm_display_mode *dst = &scl->dst;
+	unsigned long dclk_rate;
+	u64 sclk_rate;
+
+	drm_mode_copy(&scl->src, adjusted);
+
+	drm_for_each_connector(connector, bridge->dev) {
+		const struct drm_display_mode *mode;
+
+		if (connector->connector_type == DRM_MODE_CONNECTOR_HDMIA)
+			continue;
+
+		if (connector->encoder_ids[0] != bridge->encoder->base.id)
+			continue;
+
+		list_for_each_entry(mode, &connector->modes, head) {
+			if (mode->type & DRM_MODE_TYPE_PREFERRED) {
+				drm_mode_copy(&scl->dst, mode);
+				break;
+			}
+		}
+	}
+
+	dclk_rate = src->clock * 1000;
+	sclk_rate = (u64)dclk_rate * dst->vdisplay * dst->htotal;
+	do_div(sclk_rate, src->vdisplay * src->htotal);
+	sclk_rate = sclk_rate / 1000 * 1000;
+	dst->clock = sclk_rate / 1000;
+	scl->bridge->driver_private = dst;
 
-	drm_mode_copy(&scl->mode, adjusted);
+	DRM_DEV_INFO(scl->dev, "src=%s, dst=%s\n", src->name, dst->name);
+	DRM_DEV_INFO(scl->dev, "dclk rate: %ld, sclk rate: %lld\n",
+		     dclk_rate, sclk_rate);
 }
 
 static int rk618_scaler_bridge_attach(struct drm_bridge *bridge)
-- 
2.35.3

