From ab8424a27929f03d25db602380bd1cdd39c623a9 Mon Sep 17 00:00:00 2001
From: sugar <sugar.zhang@rock-chips.com>
Date: Thu, 20 Nov 2014 09:05:12 +0800
Subject: [PATCH] sound: soc: fix compilation error on arm64.

---
 sound/soc/codecs/rt3261-dsp.c     | 9 +++++----
 sound/soc/codecs/rt3261_ioctl.c   | 4 ++--
 sound/soc/codecs/rt5640_ioctl.c   | 4 ++--
 sound/soc/codecs/rt56xx_ioctl.c   | 4 ++--
 sound/soc/codecs/rt_codec_ioctl.c | 4 ++--
 5 files changed, 13 insertions(+), 12 deletions(-)

diff --git a/sound/soc/codecs/rt3261-dsp.c b/sound/soc/codecs/rt3261-dsp.c
index 875c402be3ce..e4468bd211d9 100644
--- a/sound/soc/codecs/rt3261-dsp.c
+++ b/sound/soc/codecs/rt3261-dsp.c
@@ -1075,7 +1075,7 @@ static ssize_t dsp_reg_store(struct device *dev,
 	unsigned int val=0,addr=0;
 	int i;
 
-	printk("register \"%s\" count=%d\n",buf,count);
+	dev_dbg(codec->dev, "register \"%s\" count=%zu\n", buf, count);
 
 	for(i=0;i<count;i++) //address
 	{
@@ -1117,10 +1117,11 @@ static ssize_t dsp_reg_store(struct device *dev,
 			break;
 		}
 	}
-	printk("addr=0x%x val=0x%x\n",addr,val);
+	dev_dbg(codec->dev, "addr=0x%x val=0x%x\n", addr, val);
 	if(i==count)
 	{
-		printk("0x%04x = 0x%04x\n",addr,rt3261_dsp_read(codec, addr));
+		dev_dbg(codec->dev, "0x%04x = 0x%04x\n",
+			addr, rt3261_dsp_read(codec, addr));
 	}
 	else
 	{
@@ -1223,7 +1224,7 @@ int rt_codec_dsp_ioctl_common(struct snd_hwdep *hw, struct file *file, unsigned
 		dev_err(codec->dev, "copy_from_user faild\n");
 		return -EFAULT;
 	}
-	dev_dbg(codec->dev, "rt_codec.number=%d\n",rt_codec.number);
+	dev_dbg(codec->dev, "rt_codec.number=%zu\n", rt_codec.number);
 	buf = kmalloc(sizeof(*buf) * rt_codec.number, GFP_KERNEL);
 	if (buf == NULL)
 		return -ENOMEM;
diff --git a/sound/soc/codecs/rt3261_ioctl.c b/sound/soc/codecs/rt3261_ioctl.c
index e2865dcad602..1350dadb900d 100755
--- a/sound/soc/codecs/rt3261_ioctl.c
+++ b/sound/soc/codecs/rt3261_ioctl.c
@@ -197,8 +197,8 @@ int rt3261_ioctl_common(struct snd_hwdep *hw, struct file *file,
 		dev_err(codec->dev,"copy_from_user faild\n");
 		return -EFAULT;
 	}
-	dev_dbg(codec->dev, "%s(): rt_codec.number=%d, cmd=%d\n",
-			__func__, rt_codec.number, cmd);
+	dev_dbg(codec->dev, "%s(): rt_codec.number=%zu, cmd=%d\n",
+		__func__, rt_codec.number, cmd);
 	buf = kmalloc(sizeof(*buf) * rt_codec.number, GFP_KERNEL);
 	if (buf == NULL)
 		return -ENOMEM;
diff --git a/sound/soc/codecs/rt5640_ioctl.c b/sound/soc/codecs/rt5640_ioctl.c
index 62e7efcf2d06..d74aec90f324 100755
--- a/sound/soc/codecs/rt5640_ioctl.c
+++ b/sound/soc/codecs/rt5640_ioctl.c
@@ -198,8 +198,8 @@ int rt5640_ioctl_common(struct snd_hwdep *hw, struct file *file,
 		dev_err(codec->dev,"copy_from_user faild\n");
 		return -EFAULT;
 	}
-	dev_dbg(codec->dev, "%s(): rt56xx.number=%d, cmd=%d\n",
-			__func__, rt56xx.number, cmd);
+	dev_dbg(codec->dev, "%s(): rt56xx.number=%zu, cmd=%d\n",
+		__func__, rt56xx.number, cmd);
 	buf = kmalloc(sizeof(*buf) * rt56xx.number, GFP_KERNEL);
 	if (buf == NULL)
 		return -ENOMEM;
diff --git a/sound/soc/codecs/rt56xx_ioctl.c b/sound/soc/codecs/rt56xx_ioctl.c
index afc6dcd59846..e9067232f9da 100755
--- a/sound/soc/codecs/rt56xx_ioctl.c
+++ b/sound/soc/codecs/rt56xx_ioctl.c
@@ -43,8 +43,8 @@ static int rt56xx_hwdep_ioctl_common(struct snd_hwdep *hw,
 		dev_err(codec->dev,"copy_from_user faild\n");
 		return -EFAULT;
 	}
-	dev_dbg(codec->dev, "%s(): rt56xx.number=%d, cmd=%d\n",
-			__func__, rt56xx.number, cmd);
+	dev_dbg(codec->dev, "%s(): rt56xx.number=%zu, cmd=%d\n",
+		__func__, rt56xx.number, cmd);
 	buf = kmalloc(sizeof(*buf) * rt56xx.number, GFP_KERNEL);
 	if (buf == NULL)
 		return -ENOMEM;
diff --git a/sound/soc/codecs/rt_codec_ioctl.c b/sound/soc/codecs/rt_codec_ioctl.c
index 0b993704f05a..ab952a62a8d5 100644
--- a/sound/soc/codecs/rt_codec_ioctl.c
+++ b/sound/soc/codecs/rt_codec_ioctl.c
@@ -43,8 +43,8 @@ static int rt_codec_hwdep_ioctl_common(struct snd_hwdep *hw,
 		dev_err(codec->dev,"copy_from_user faild\n");
 		return -EFAULT;
 	}
-	dev_dbg(codec->dev, "%s(): rt_codec.number=%d, cmd=%d\n",
-			__func__, rt_codec.number, cmd);
+	dev_dbg(codec->dev, "%s(): rt_codec.number=%zu, cmd=%d\n",
+		__func__, rt_codec.number, cmd);
 	buf = kmalloc(sizeof(*buf) * rt_codec.number, GFP_KERNEL);
 	if (buf == NULL)
 		return -ENOMEM;
-- 
2.35.3

