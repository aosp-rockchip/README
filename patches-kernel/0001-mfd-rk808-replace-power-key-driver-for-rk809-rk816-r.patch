From 8c7cc3c1e8c1df55ab0c18d5988c3525e03d647f Mon Sep 17 00:00:00 2001
From: Shengfei Xu <xsf@rock-chips.com>
Date: Wed, 25 Sep 2019 19:20:05 +0800
Subject: [PATCH] mfd: rk808: replace power key driver for rk809/rk816/rk817

remove the rk8xx-pwrkey.c file, it's function is same as rk805-pwerkey.c.

Change-Id: Ie8a0559c3a105ec9806f170d0c4d32c2691558c6
Signed-off-by: Shengfei Xu <xsf@rock-chips.com>
---
 drivers/input/misc/rk8xx-pwrkey.c | 144 ------------------------------
 drivers/mfd/rk808.c               |  16 ++--
 2 files changed, 8 insertions(+), 152 deletions(-)
 delete mode 100644 drivers/input/misc/rk8xx-pwrkey.c

diff --git a/drivers/input/misc/rk8xx-pwrkey.c b/drivers/input/misc/rk8xx-pwrkey.c
deleted file mode 100644
index 580adc227a17..000000000000
--- a/drivers/input/misc/rk8xx-pwrkey.c
+++ /dev/null
@@ -1,144 +0,0 @@
-/*
- * driver/input/misc/rk8xx-pwrkey.c
- * Power Key driver for RK8xx PMIC Power Button.
- *
- * Copyright (C) 2017, Rockchip Technology Co., Ltd.
- * Author: Chen Jianhong <chenjh@rock-chips.com>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- *
- * This program is distributed "as is" WITHOUT ANY WARRANTY of any
- * kind, whether express or implied; without even the implied warranty
- * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- */
-
-#include <linux/errno.h>
-#include <linux/input.h>
-#include <linux/init.h>
-#include <linux/interrupt.h>
-#include <linux/kernel.h>
-#include <linux/mfd/rk808.h>
-#include <linux/module.h>
-#include <linux/of.h>
-#include <linux/platform_device.h>
-#include <linux/regmap.h>
-
-struct rk8xx_pwrkey {
-	struct rk808 *rk8xx;
-	struct input_dev *input_dev;
-	int report_key;
-};
-
-static irqreturn_t rk8xx_pwrkey_irq_falling(int irq, void *data)
-{
-	struct rk8xx_pwrkey *pwr = data;
-
-	input_report_key(pwr->input_dev, pwr->report_key, 1);
-	input_sync(pwr->input_dev);
-
-	return IRQ_HANDLED;
-}
-
-static irqreturn_t rk8xx_pwrkey_irq_rising(int irq, void *data)
-{
-	struct rk8xx_pwrkey *pwr = data;
-
-	input_report_key(pwr->input_dev, pwr->report_key, 0);
-	input_sync(pwr->input_dev);
-
-	return IRQ_HANDLED;
-}
-
-static int rk8xx_pwrkey_probe(struct platform_device *pdev)
-{
-	struct rk808 *rk8xx = dev_get_drvdata(pdev->dev.parent);
-	struct rk8xx_pwrkey *pwrkey;
-	int fall_irq, rise_irq, err;
-	struct device_node *np;
-
-	np = of_get_child_by_name(pdev->dev.parent->of_node, "pwrkey");
-	if (np) {
-		if (!of_device_is_available(np)) {
-			dev_info(&pdev->dev, "device is disabled\n");
-			return -EINVAL;
-		}
-	}
-
-	pwrkey = devm_kzalloc(&pdev->dev,
-			      sizeof(struct rk8xx_pwrkey), GFP_KERNEL);
-	if (!pwrkey)
-		return -ENOMEM;
-
-	pwrkey->input_dev = devm_input_allocate_device(&pdev->dev);
-	if (!pwrkey->input_dev) {
-		dev_err(&pdev->dev, "Can't allocate power button\n");
-		return -ENOMEM;
-	}
-
-	/* init struct input_dev */
-	pwrkey->rk8xx = rk8xx;
-	pwrkey->report_key = KEY_POWER;
-	pwrkey->input_dev->name = "rk8xx_pwrkey";
-	pwrkey->input_dev->phys = "rk8xx_pwrkey/input0";
-	pwrkey->input_dev->dev.parent = pdev->dev.parent;
-	pwrkey->input_dev->evbit[0] = BIT_MASK(EV_KEY);
-	pwrkey->input_dev->keybit[BIT_WORD(pwrkey->report_key)] =
-					BIT_MASK(pwrkey->report_key);
-	platform_set_drvdata(pdev, pwrkey);
-
-	/* requeset rise and fall irqs */
-	rise_irq = platform_get_irq(pdev, 0);
-	if (rise_irq < 0) {
-		dev_err(&pdev->dev, "no IRQ for rise: %d\n", rise_irq);
-		return rise_irq;
-	}
-
-	fall_irq = platform_get_irq(pdev, 1);
-	if (fall_irq < 0) {
-		dev_err(&pdev->dev, "no IRQ for fall: %d\n", fall_irq);
-		return fall_irq;
-	}
-
-	err = devm_request_threaded_irq(&pdev->dev, fall_irq,
-					NULL, rk8xx_pwrkey_irq_falling,
-					IRQF_TRIGGER_FALLING,
-					"rk8xx_pwrkey_fall", pwrkey);
-	if (err) {
-		dev_err(&pdev->dev, "Can't get fall irq for pwrkey: %d\n", err);
-		return err;
-	}
-	err = devm_request_threaded_irq(&pdev->dev, rise_irq,
-					NULL, rk8xx_pwrkey_irq_rising,
-					IRQF_TRIGGER_RISING,
-					"rk8xx_pwrkey_rise", pwrkey);
-	if (err) {
-		dev_err(&pdev->dev, "Can't get rise irq for pwrkey: %d\n", err);
-		return err;
-	}
-
-	/* register input device */
-	err = input_register_device(pwrkey->input_dev);
-	if (err) {
-		dev_err(&pdev->dev, "Can't register power button: %d\n", err);
-		return err;
-	}
-
-	return 0;
-}
-
-static struct platform_driver rk8xx_pwrkey_driver = {
-	.probe = rk8xx_pwrkey_probe,
-	.driver		= {
-		.name	= "rk8xx-pwrkey",
-		.owner	= THIS_MODULE,
-	},
-};
-
-module_platform_driver(rk8xx_pwrkey_driver);
-
-MODULE_LICENSE("GPL v2");
-MODULE_DESCRIPTION("RK8xx Power Button");
-MODULE_AUTHOR("Chen Jianhong <chenjh@rock-chips.com>");
diff --git a/drivers/mfd/rk808.c b/drivers/mfd/rk808.c
index 3f93f05e57f3..dfa46fed0159 100644
--- a/drivers/mfd/rk808.c
+++ b/drivers/mfd/rk808.c
@@ -196,20 +196,20 @@ static struct resource rk805_key_resources[] = {
 
 static struct resource rk816_pwrkey_resources[] = {
 	{
-		.start  = RK816_IRQ_PWRON_RISE,
-		.end    = RK816_IRQ_PWRON_RISE,
+		.start  = RK816_IRQ_PWRON_FALL,
+		.end    = RK816_IRQ_PWRON_FALL,
 		.flags  = IORESOURCE_IRQ,
 	},
 	{
-		.start  = RK816_IRQ_PWRON_FALL,
-		.end    = RK816_IRQ_PWRON_FALL,
+		.start  = RK816_IRQ_PWRON_RISE,
+		.end    = RK816_IRQ_PWRON_RISE,
 		.flags  = IORESOURCE_IRQ,
 	},
 };
 
 static struct resource rk817_pwrkey_resources[] = {
-	DEFINE_RES_IRQ(RK817_IRQ_PWRON_RISE),
 	DEFINE_RES_IRQ(RK817_IRQ_PWRON_FALL),
+	DEFINE_RES_IRQ(RK817_IRQ_PWRON_RISE),
 };
 
 static const struct mfd_cell rk805s[] = {
@@ -243,7 +243,7 @@ static const struct mfd_cell rk816s[] = {
 	{ .name = "rk8xx-gpio", },
 	{ .name = "rk816-battery", .of_compatible = "rk816-battery", },
 	{
-		.name = "rk8xx-pwrkey",
+		.name = "rk805-pwrkey",
 		.num_resources = ARRAY_SIZE(rk816_pwrkey_resources),
 		.resources = &rk816_pwrkey_resources[0],
 	},
@@ -258,7 +258,7 @@ static const struct mfd_cell rk817s[] = {
 	{ .name = "rk808-clkout",},
 	{ .name = "rk808-regulator",},
 	{
-		.name = "rk8xx-pwrkey",
+		.name = "rk805-pwrkey",
 		.num_resources = ARRAY_SIZE(rk817_pwrkey_resources),
 		.resources = &rk817_pwrkey_resources[0],
 	},
@@ -347,7 +347,7 @@ static const struct rk808_reg_data rk816_pre_init_reg[] = {
 
 static const struct rk808_reg_data rk817_pre_init_reg[] = {
 	{RK817_RTC_CTRL_REG, RTC_STOP, RTC_STOP},
-	{RK817_GPIO_INT_CFG, RK817_INT_POL_MSK, RK817_INT_POL_H},
+	{RK817_GPIO_INT_CFG, RK817_INT_POL_MSK, RK817_INT_POL_L},
 	{RK817_SYS_CFG(1), RK817_HOTDIE_TEMP_MSK | RK817_TSD_TEMP_MSK,
 					   RK817_HOTDIE_105 | RK817_TSD_140},
 };
-- 
2.35.3

