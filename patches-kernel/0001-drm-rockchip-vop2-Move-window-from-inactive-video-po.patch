From 107a0619ddfc03b0a2238977632674f19c34cfe7 Mon Sep 17 00:00:00 2001
From: Andy Yan <andy.yan@rock-chips.com>
Date: Mon, 14 Dec 2020 16:46:05 +0800
Subject: [PATCH] drm/rockchip: vop2: Move window from inactive video port to
 active vide port

Set all windows to activated video port at init,
try to avoid change port_mux when display on.

Change-Id: I29b7b0b0a610580ac6e07cc1d8ef35b51d86b8b0
Signed-off-by: Andy Yan <andy.yan@rock-chips.com>
---
 drivers/gpu/drm/rockchip/rockchip_drm_vop2.c | 33 ++++++++++++++++----
 1 file changed, 27 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c b/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c
index 133f1e3cccce..c2010ba9bde7 100644
--- a/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c
+++ b/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c
@@ -1964,32 +1964,49 @@ static int vop2_core_clks_prepare_enable(struct vop2 *vop2)
  +----------+   +-------------+                                                      |    eDP    |
  *                                                                                   +-----------+
  */
-static void vop2_layer_map_initial(struct vop2 *vop2)
+static void vop2_layer_map_initial(struct vop2 *vop2, uint32_t current_vp_id)
 {
 	const struct vop2_data *vop2_data = vop2->data;
 	struct vop2_layer *layer = &vop2->layers[0];
 	struct vop2_video_port *vp = &vop2->vps[0];
+	struct vop2_video_port *current_vp = &vop2->vps[current_vp_id];
 	struct vop2_win *win;
 	const struct vop2_win_data *win_data = NULL;
 	uint32_t used_layers = 0;
 	uint32_t layer_map, sel;
 	uint32_t win_map, vp_id;
 	uint32_t port_mux;
+	uint32_t standby;
 	uint32_t shift;
 	int i, j;
 
 	layer_map = vop2_readl(vop2, layer->regs->layer_sel.offset);
 	win_map = vop2_readl(vop2, vp->regs->port_mux.offset);
-
+	current_vp->win_mask = 0;
 	for (i = 0; i < vop2->data->nr_vps; i++) {
 		vp = &vop2->vps[i];
+		vp->win_mask = 0;
+		standby = vop2_readl(vop2, vp->regs->standby.offset);
+		shift = vp->regs->standby.shift;
+		standby = (standby >> shift) & 0x1;
 		for (j = 0; j < vop2_data->nr_layers; j++) {
 			win = vop2_find_win_by_phys_id(vop2, j);
 			shift = vop2->data->ctrl->win_vp_id[j].shift;
 			vp_id = (win_map >> shift) & 0x3;
 			if (vp_id == i) {
-				vp->win_mask |=  BIT(j);
-				win->vp_mask = BIT(vp_id);
+				/*
+				 * If the Video Port is not activated,
+				 * move the attached win to the Video Port
+				 * we want enabled.
+				 */
+				if (standby) {
+					current_vp->win_mask |=  BIT(j);
+					win->vp_mask = BIT(current_vp_id);
+					VOP_CTRL_SET(vop2, win_vp_id[win->phys_id], current_vp_id);
+				} else {
+					vp->win_mask |=  BIT(j);
+					win->vp_mask = BIT(vp_id);
+				}
 			}
 		}
 	}
@@ -2034,6 +2051,7 @@ static void vop2_initial(struct drm_crtc *crtc)
 {
 	struct vop2_video_port *vp = to_vop2_video_port(crtc);
 	struct vop2 *vop2 = vp->vop2;
+	uint32_t current_vp_id = vp->id;
 	int ret;
 
 	if (vop2->enable_count == 0) {
@@ -2070,7 +2088,7 @@ static void vop2_initial(struct drm_crtc *crtc)
 		 */
 		VOP_CTRL_SET(vop2, if_ctrl_cfg_done_imd, 1);
 
-		vop2_layer_map_initial(vop2);
+		vop2_layer_map_initial(vop2, current_vp_id);
 
 		vop2_axi_irqs_enable(vop2);
 
@@ -3997,7 +4015,10 @@ static void vop2_setup_layer_mixer_for_vp(struct vop2_video_port *vp,
 		else
 			port_mux = used_layers - 1;
 
-		vp->bg_ovl_dly = (vop2_data->nr_mixers - used_layers) << 1;
+		if (port_mux > vop2_data->nr_mixers)
+			vp->bg_ovl_dly = 0;
+		else
+			vp->bg_ovl_dly = (vop2_data->nr_mixers - port_mux) << 1;
 		VOP_MODULE_SET(vop2, prev_vp, port_mux, port_mux);
 	}
 
-- 
2.35.3

