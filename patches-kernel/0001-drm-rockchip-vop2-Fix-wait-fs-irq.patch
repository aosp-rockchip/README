From 227d9c28c049beaaf5909dbfaf52f576b0074d27 Mon Sep 17 00:00:00 2001
From: Andy Yan <andy.yan@rock-chips.com>
Date: Thu, 14 Jan 2021 18:29:14 +0800
Subject: [PATCH] drm/rockchip: vop2: Fix wait fs irq

Vcnt is stored in the upper 16 bits.
We should wait for the frame start irq status from
low to high.

Fixes: e6113fb4c5b3 ("drm/rockchip: vop2: wait for next frame when close to
frame start of previous vp")

Change-Id: I8dd0930800ada9796f616d9b3ec1962d213aa9b3
Signed-off-by: Andy Yan <andy.yan@rock-chips.com>
---
 drivers/gpu/drm/rockchip/rockchip_drm_vop2.c | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c b/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c
index c2010ba9bde7..14368a347ae3 100644
--- a/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c
+++ b/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c
@@ -715,6 +715,20 @@ static void vop2_wait_for_irq_handler(struct drm_crtc *crtc)
 	synchronize_irq(vop2->irq);
 }
 
+static void vop2_wait_for_irq_fs(struct vop2_video_port *vp)
+{
+	struct vop2 *vop2 = vp->vop2;
+	bool pending;
+	int ret;
+
+	/*
+	 * Spin until frame start interrupts come
+	 */
+	ret = readx_poll_timeout_atomic(vop2_fs_irq_is_pending, vp, pending,
+					pending, 0, 20 * 1000);
+	if (ret)
+		DRM_DEV_ERROR(vop2->dev, "wait fs irq for vp%d timeout\n", vp->id);
+}
 
 static inline void vop2_cfg_done(struct drm_crtc *crtc)
 {
@@ -750,9 +764,10 @@ static inline void vop2_cfg_done(struct drm_crtc *crtc)
 		done_vp = &vop2->vps[vp_id];
 		vcstate = to_rockchip_crtc_state(done_vp->crtc.state);
 		vcnt = vop2_readl(vop2, RK3568_SYS_STATUS0 + (vp_id << 2));
+		vcnt >>= 16;
 		/* if close to the last 1/4 frame, wait to next frame */
 		if (vcnt > (vcstate->vdisplay * 3 >> 2)) {
-			vop2_wait_for_irq_handler(crtc);
+			vop2_wait_for_irq_fs(done_vp);
 			done_bits = 0;
 		}
 	}
-- 
2.35.3

