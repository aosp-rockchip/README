From 9a80d74064b1c67b7eaf090e6d1e4a719880fe78 Mon Sep 17 00:00:00 2001
From: Zhong Yichong <zyc@rock-chips.com>
Date: Mon, 26 Feb 2018 10:20:26 +0800
Subject: [PATCH] camera: rockchip: camsys_drv: Fix the isp soft reset failure
 for rk3326.

Reset on too high aclk rate will result in bus dead, so we reduce the aclk
before reset and then recover it after reset.

Change-Id: I38b51c3b39329e2bc96b964e7575d06183d33fd0
Signed-off-by: Zhong Yichong <zyc@rock-chips.com>
---
 .../media/video/rk_camsys/camsys_internal.h   |  4 +++
 .../media/video/rk_camsys/camsys_soc_rk3326.c | 28 +++++++++++++------
 2 files changed, 24 insertions(+), 8 deletions(-)

diff --git a/drivers/media/video/rk_camsys/camsys_internal.h b/drivers/media/video/rk_camsys/camsys_internal.h
index f15c42bb98e1..19731bf8f9b7 100644
--- a/drivers/media/video/rk_camsys/camsys_internal.h
+++ b/drivers/media/video/rk_camsys/camsys_internal.h
@@ -198,6 +198,10 @@
        all iommu resource in |.release| of fops aganin if needed.
 *v0.0x27.0:
        1) revert v0.0x22.5.
+*v0.0x28.0:
+       1) fix isp soft reset failure for rk3326.
+       reset on too high aclk rate will result in bus dead, so we reduce the aclk
+       before reset and then recover it after reset.
 */
 
 #define CAMSYS_DRIVER_VERSION                   KERNEL_VERSION(0, 0x27, 0)
diff --git a/drivers/media/video/rk_camsys/camsys_soc_rk3326.c b/drivers/media/video/rk_camsys/camsys_soc_rk3326.c
index f3a18326eb4e..1e5f954c59ec 100644
--- a/drivers/media/video/rk_camsys/camsys_soc_rk3326.c
+++ b/drivers/media/video/rk_camsys/camsys_soc_rk3326.c
@@ -13,6 +13,7 @@
 #ifdef CONFIG_ARM64
 #include "camsys_soc_priv.h"
 #include "camsys_soc_rk3326.h"
+#include "camsys_marvin.h"
 
 struct mipiphy_hsfreqrange_s {
 	unsigned int range_l;
@@ -156,6 +157,11 @@ static int camsys_rk3326_mipihpy_cfg(camsys_mipiphy_soc_para_t *para)
 }
 
 #define VI_IRCL			    0x0014
+/**
+ * reset on too high aclk rate will result in bus dead,
+ * and 200M is a maximum safe value from experiment.
+ */
+#define SAFETY_RESET_ACLK_RATE_LIMIT 200000000
 int camsys_rk3326_cfg
 (
 	camsys_dev_t *camsys_dev,
@@ -194,23 +200,29 @@ int camsys_rk3326_cfg
 	}
 
 	case Isp_SoftRst: {/* ddl@rock-chips.com: v0.d.0 */
-#if 0
+		camsys_mrv_clk_t *clk = (camsys_mrv_clk_t *)camsys_dev->clk;
+		long old_aclk_rate = clk_get_rate(clk->aclk_isp);
 		unsigned long reset;
 
 		reset = (unsigned long)cfg_para;
 
-		if (reset == 1)
+		if (reset == 1) {
+			/* limit the aclk to 200M before isp reset operation */
+			if (old_aclk_rate > SAFETY_RESET_ACLK_RATE_LIMIT)
+				clk_set_rate(clk->aclk_isp,
+					     SAFETY_RESET_ACLK_RATE_LIMIT);
 			__raw_writel(0x80, (void *)(camsys_dev->rk_isp_base +
 			VI_IRCL));
-		else
+		} else {
 			__raw_writel(0x00, (void *)(camsys_dev->rk_isp_base +
 			VI_IRCL));
-			camsys_trace(2, "Isp self soft rst: %ld", reset);
-			break;
-#else
-		break;
-#endif
+			/* recover the old aclk after reset */
+			if (old_aclk_rate != SAFETY_RESET_ACLK_RATE_LIMIT)
+				clk_set_rate(clk->aclk_isp, old_aclk_rate);
 		}
+		camsys_trace(2, "Isp self soft rst: %ld", reset);
+		break;
+	}
 	default:
 	{
 		camsys_warn("cfg_cmd: 0x%x isn't support", cfg_cmd);
-- 
2.35.3

