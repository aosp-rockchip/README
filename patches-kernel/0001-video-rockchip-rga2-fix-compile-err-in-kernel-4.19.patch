From 61157e260949802c11e6028b2fe5d4b18c078780 Mon Sep 17 00:00:00 2001
From: Shixiang Zheng <shixiang.zheng@rock-chips.com>
Date: Wed, 21 Aug 2019 18:12:48 +0800
Subject: [PATCH] video/rockchip: rga2: fix compile err in kernel-4.19

Change-Id: I1505e7fbaae0a1145675d27aa7854407cf69a969
Signed-off-by: Shixiang Zheng <shixiang.zheng@rock-chips.com>
---
 drivers/video/rockchip/rga2/rga2_drv.c      | 19 ++---------
 drivers/video/rockchip/rga2/rga2_mmu_info.c | 35 ++++++++++++++-------
 drivers/video/rockchip/rga2/rga2_mmu_info.h |  2 +-
 3 files changed, 28 insertions(+), 28 deletions(-)

diff --git a/drivers/video/rockchip/rga2/rga2_drv.c b/drivers/video/rockchip/rga2/rga2_drv.c
index 6eb6d56a78fc..096ffa73b071 100644
--- a/drivers/video/rockchip/rga2/rga2_drv.c
+++ b/drivers/video/rockchip/rga2/rga2_drv.c
@@ -42,7 +42,6 @@
 #include <linux/wakelock.h>
 #include <linux/scatterlist.h>
 #include <linux/version.h>
-#include <linux/rockchip_ion.h>
 #include <linux/debugfs.h>
 
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0))
@@ -850,12 +849,7 @@ static void rga2_try_set_reg(void)
 			rga2_copy_reg(reg, 0);
 			rga2_reg_from_wait_to_run(reg);
 
-#ifdef CONFIG_ARM
-			dmac_flush_range(&rga2_service.cmd_buff[0], &rga2_service.cmd_buff[32]);
-			outer_flush_range(virt_to_phys(&rga2_service.cmd_buff[0]),virt_to_phys(&rga2_service.cmd_buff[32]));
-#elif defined(CONFIG_ARM64)
-			__dma_flush_range(&rga2_service.cmd_buff[0], &rga2_service.cmd_buff[32]);
-#endif
+			rga2_dma_flush_range(&rga2_service.cmd_buff[0], &rga2_service.cmd_buff[32]);
 
 			//rga2_soft_reset();
 
@@ -2356,15 +2350,8 @@ void rga2_slt(void)
 	memset(src_buf, 0x50, 400 * 200 * 4);
 	memset(dst_buf, 0x00, 400 * 200 * 4);
 
-#ifdef CONFIG_ARM
-	dmac_flush_range(&src_buf[0], &src_buf[400 * 200]);
-	outer_flush_range(virt_to_phys(&src_buf[0]), virt_to_phys(&src_buf[400 * 200]));
-	dmac_flush_range(&dst_buf[0], &dst_buf[400 * 200]);
-	outer_flush_range(virt_to_phys(&dst_buf[0]), virt_to_phys(&dst_buf[400 * 200]));
-#elif defined(CONFIG_ARM64)
-	__dma_flush_range(&src_buf[0], &src_buf[400 * 200]);
-	__dma_flush_range(&dst_buf[0], &dst_buf[400 * 200]);
-#endif
+	rga2_dma_flush_range(&src_buf[0], &src_buf[400 * 200]);
+	rga2_dma_flush_range(&dst_buf[0], &dst_buf[400 * 200]);
 
 	DBG("\n********************************\n");
 	DBG("************ RGA_TEST ************\n");
diff --git a/drivers/video/rockchip/rga2/rga2_mmu_info.c b/drivers/video/rockchip/rga2/rga2_mmu_info.c
index 61673e19659c..51cf28ab49c9 100644
--- a/drivers/video/rockchip/rga2/rga2_mmu_info.c
+++ b/drivers/video/rockchip/rga2/rga2_mmu_info.c
@@ -38,17 +38,21 @@ extern struct rga2_mmu_buf_t rga2_mmu_buf;
 #define V7_VATOPA_GET_NS(X)		((X>>9) & 1)
 #define V7_VATOPA_GET_SS(X)		((X>>1) & 1)
 
-static void rga_dma_flush_range(void *pstart, void *pend)
+void rga2_dma_flush_range(void *pstart, void *pend)
 {
 #ifdef CONFIG_ARM
 	dmac_flush_range(pstart, pend);
 	outer_flush_range(virt_to_phys(pstart), virt_to_phys(pend));
 #elif defined(CONFIG_ARM64)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 19, 0)
+	__dma_flush_area(pstart, pend - pstart);
+#else
 	__dma_flush_range(pstart, pend);
 #endif
+#endif
 }
 
-static void rga_dma_flush_page(struct page *page)
+static void rga2_dma_flush_page(struct page *page)
 {
 	phys_addr_t paddr;
 	void *virt;
@@ -73,8 +77,12 @@ static void rga_dma_flush_page(struct page *page)
 	outer_flush_range(paddr, paddr + PAGE_SIZE);
 #elif defined(CONFIG_ARM64)
 	virt = page_address(page);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 19, 0)
+	__dma_flush_area(virt, PAGE_SIZE);
+#else
 	__dma_flush_range(virt, virt + PAGE_SIZE);
 #endif
+#endif
 }
 
 #if 0
@@ -384,13 +392,17 @@ static int rga2_MapUserMemory(struct page **pages, uint32_t *pageTable,
 	status = 0;
 	Address = 0;
 	down_read(&current->mm->mmap_sem);
-#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 6, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 168) && LINUX_VERSION_CODE < KERNEL_VERSION(4, 5, 0)
+	result = get_user_pages(current, current->mm, Memory << PAGE_SHIFT,
+				pageCount, writeFlag ? FOLL_WRITE : 0,
+				pages, NULL);
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(4, 6, 0)
 	result = get_user_pages(current, current->mm, Memory << PAGE_SHIFT,
 				pageCount, writeFlag, 0, pages, NULL);
 #else
 	result = get_user_pages_remote(current, current->mm,
 				       Memory << PAGE_SHIFT,
-				       pageCount, writeFlag, 0, pages, NULL);
+				       pageCount, writeFlag, pages, NULL, NULL);
 #endif
 	if (result > 0 && result >= pageCount) {
 		/* Fill the page table. */
@@ -400,7 +412,7 @@ static int rga2_MapUserMemory(struct page **pages, uint32_t *pageTable,
 			/* ensure dst not flush null cache */
 			if (writeFlag && i >= pageCount - 2)
 				break;
-			rga_dma_flush_page(pages[i]);
+			rga2_dma_flush_page(pages[i]);
 		}
 		for (i = 0; i < result; i++)
 			put_page(pages[i]);
@@ -451,7 +463,8 @@ static int rga2_MapUserMemory(struct page **pages, uint32_t *pageTable,
 		pageTable[i] = (uint32_t)Address;
 		if ( writeFlag && (i >= pageCount - 2))
 			break;
-		rga_dma_flush_page(pfn_to_page(pfn));
+		rga2_dma_flush_page(pfn_to_page(pfn));
+
 	}
 	up_read(&current->mm->mmap_sem);
 	return status;
@@ -663,7 +676,7 @@ static int rga2_mmu_info_BitBlt_mode(struct rga2_reg *reg, struct rga2_req *req)
 		}
 	}
 	/* flush data to DDR */
-	rga_dma_flush_range(MMU_Base, (MMU_Base + AllSize));
+	rga2_dma_flush_range(MMU_Base, (MMU_Base + AllSize));
 	rga2_mmu_buf_get(&rga2_mmu_buf, AllSize);
 	reg->MMU_len = AllSize;
 	status = 0;
@@ -762,7 +775,7 @@ static int rga2_mmu_info_color_palette_mode(struct rga2_reg *reg, struct rga2_re
         }
 
         /* flush data to DDR */
-        rga_dma_flush_range(MMU_Base, (MMU_Base + AllSize));
+	rga2_dma_flush_range(MMU_Base, (MMU_Base + AllSize));
         rga2_mmu_buf_get(&rga2_mmu_buf, AllSize);
         reg->MMU_len = AllSize;
 
@@ -831,7 +844,7 @@ static int rga2_mmu_info_color_fill_mode(struct rga2_reg *reg, struct rga2_req *
         }
 
         /* flush data to DDR */
-        rga_dma_flush_range(MMU_Base, (MMU_Base + AllSize + 1));
+	rga2_dma_flush_range(MMU_Base, (MMU_Base + AllSize + 1));
         rga2_mmu_buf_get(&rga2_mmu_buf, AllSize);
 	reg->MMU_len = AllSize;
 
@@ -892,7 +905,7 @@ static int rga2_mmu_info_update_palette_table_mode(struct rga2_reg *reg, struct
         }
 
         /* flush data to DDR */
-        rga_dma_flush_range(MMU_Base, (MMU_Base + AllSize));
+	rga2_dma_flush_range(MMU_Base, (MMU_Base + AllSize));
         rga2_mmu_buf_get(&rga2_mmu_buf, AllSize);
         reg->MMU_len = AllSize;
 
@@ -971,7 +984,7 @@ static int rga2_mmu_info_update_patten_buff_mode(struct rga2_reg *reg, struct rg
         reg->MMU_base = MMU_Base;
 
         /* flush data to DDR */
-        rga_dma_flush_range(MMU_Base, (MMU_Base + AllSize));
+	rga2_dma_flush_range(MMU_Base, (MMU_Base + AllSize));
         return 0;
 
     }
diff --git a/drivers/video/rockchip/rga2/rga2_mmu_info.h b/drivers/video/rockchip/rga2/rga2_mmu_info.h
index f342b68caf77..9037462d72b0 100644
--- a/drivers/video/rockchip/rga2/rga2_mmu_info.h
+++ b/drivers/video/rockchip/rga2/rga2_mmu_info.h
@@ -14,7 +14,7 @@
 
 
 int rga2_set_mmu_info(struct rga2_reg *reg, struct rga2_req *req);
-
+void rga2_dma_flush_range(void *pstart, void *pend);
 
 #endif
 
-- 
2.35.3

