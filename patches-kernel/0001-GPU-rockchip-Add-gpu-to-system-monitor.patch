From a98c05214343fa1560027a0f670ecb0a064c2420 Mon Sep 17 00:00:00 2001
From: Finley Xiao <finley.xiao@rock-chips.com>
Date: Sun, 17 Mar 2019 20:58:19 +0800
Subject: [PATCH] GPU: rockchip: Add gpu to system monitor

Change-Id: I2c487c6ec8a46705197ceb9c2130b448f839ed66
Signed-off-by: Finley Xiao <finley.xiao@rock-chips.com>
---
 .../bifrost/backend/gpu/mali_kbase_devfreq.c  | 24 ++++++++++---------
 drivers/gpu/arm/bifrost/mali_kbase_defs.h     |  2 +-
 .../backend/gpu/mali_kbase_devfreq.c          | 24 ++++++++++---------
 .../arm/bifrost_for_linux/mali_kbase_defs.h   |  2 +-
 .../arm/mali400/mali/common/mali_osk_mali.h   |  2 +-
 .../gpu/arm/mali400/mali/linux/mali_devfreq.c | 24 ++++++++++---------
 .../midgard/backend/gpu/mali_kbase_devfreq.c  | 23 +++++++++---------
 drivers/gpu/arm/midgard/mali_kbase_defs.h     |  2 +-
 .../backend/gpu/mali_kbase_devfreq.c          | 24 +++++++++----------
 .../arm/midgard_for_linux/mali_kbase_defs.h   |  2 +-
 10 files changed, 68 insertions(+), 61 deletions(-)

diff --git a/drivers/gpu/arm/bifrost/backend/gpu/mali_kbase_devfreq.c b/drivers/gpu/arm/bifrost/backend/gpu/mali_kbase_devfreq.c
index ce6f8d7fb4e0..ddda6934003b 100644
--- a/drivers/gpu/arm/bifrost/backend/gpu/mali_kbase_devfreq.c
+++ b/drivers/gpu/arm/bifrost/backend/gpu/mali_kbase_devfreq.c
@@ -48,11 +48,12 @@
 #define dev_pm_opp_find_freq_floor opp_find_freq_floor
 #endif /* Linux >= 3.13 */
 #include <soc/rockchip/rockchip_opp_select.h>
+#include <soc/rockchip/rockchip_system_monitor.h>
 
-static struct thermal_opp_device_data gpu_devdata = {
-	.type = THERMAL_OPP_TPYE_DEV,
-	.low_temp_adjust = rockchip_dev_low_temp_adjust,
-	.high_temp_adjust = rockchip_dev_high_temp_adjust,
+static struct monitor_dev_profile mali_mdevp = {
+	.type = MONITOR_TPYE_DEV,
+	.low_temp_adjust = rockchip_monitor_dev_low_temp_adjust,
+	.high_temp_adjust = rockchip_monitor_dev_high_temp_adjust,
 };
 
 /**
@@ -403,12 +404,13 @@ int kbase_devfreq_init(struct kbase_device *kbdev)
 	devfreq_recommended_opp(kbdev->dev, &opp_rate, 0);
 	rcu_read_unlock();
 	kbdev->devfreq->last_status.current_frequency = opp_rate;
-	gpu_devdata.data = kbdev->devfreq;
-	kbdev->opp_info = rockchip_register_thermal_notifier(kbdev->dev,
-							     &gpu_devdata);
-	if (IS_ERR(kbdev->opp_info)) {
-		dev_dbg(kbdev->dev, "without thermal notifier\n");
-		kbdev->opp_info = NULL;
+
+	mali_mdevp.data = kbdev->devfreq;
+	kbdev->mdev_info = rockchip_system_monitor_register(kbdev->dev,
+							    &mali_mdevp);
+	if (IS_ERR(kbdev->mdev_info)) {
+		dev_dbg(kbdev->dev, "without system monitor\n");
+		kbdev->mdev_info = NULL;
 	}
 #ifdef CONFIG_DEVFREQ_THERMAL
 	err = kbase_ipa_init(kbdev);
@@ -451,7 +453,7 @@ void kbase_devfreq_term(struct kbase_device *kbdev)
 
 	dev_dbg(kbdev->dev, "Term Mali devfreq\n");
 
-	rockchip_unregister_thermal_notifier(kbdev->opp_info);
+	rockchip_system_monitor_unregister(kbdev->mdev_info);
 #ifdef CONFIG_DEVFREQ_THERMAL
 	if (kbdev->devfreq_cooling)
 		devfreq_cooling_unregister(kbdev->devfreq_cooling);
diff --git a/drivers/gpu/arm/bifrost/mali_kbase_defs.h b/drivers/gpu/arm/bifrost/mali_kbase_defs.h
index a79d01dca13b..a49070e129cc 100644
--- a/drivers/gpu/arm/bifrost/mali_kbase_defs.h
+++ b/drivers/gpu/arm/bifrost/mali_kbase_defs.h
@@ -1536,7 +1536,7 @@ struct kbase_device {
 	struct kbase_devfreq_opp *opp_table;
 	int num_opps;
 	struct kbasep_pm_metrics last_devfreq_metrics;
-	struct thermal_opp_info *opp_info;
+	struct monitor_dev_info *mdev_info;
 #ifdef CONFIG_DEVFREQ_THERMAL
 #if LINUX_VERSION_CODE < KERNEL_VERSION(4, 4, 0)
 	struct devfreq_cooling_device *devfreq_cooling;
diff --git a/drivers/gpu/arm/bifrost_for_linux/backend/gpu/mali_kbase_devfreq.c b/drivers/gpu/arm/bifrost_for_linux/backend/gpu/mali_kbase_devfreq.c
index a69008437fa1..0a961885b766 100644
--- a/drivers/gpu/arm/bifrost_for_linux/backend/gpu/mali_kbase_devfreq.c
+++ b/drivers/gpu/arm/bifrost_for_linux/backend/gpu/mali_kbase_devfreq.c
@@ -44,11 +44,12 @@
 #endif /* Linux >= 3.13 */
 
 #include <soc/rockchip/rockchip_opp_select.h>
+#include <soc/rockchip/rockchip_system_monitor.h>
 
-static struct thermal_opp_device_data gpu_devdata = {
-	.type = THERMAL_OPP_TPYE_DEV,
-	.low_temp_adjust = rockchip_dev_low_temp_adjust,
-	.high_temp_adjust = rockchip_dev_high_temp_adjust,
+static struct monitor_dev_profile mali_mdevp = {
+	.type = MONITOR_TPYE_DEV,
+	.low_temp_adjust = rockchip_monitor_dev_low_temp_adjust,
+	.high_temp_adjust = rockchip_monitor_dev_high_temp_adjust,
 };
 
 /**
@@ -377,12 +378,13 @@ int kbase_devfreq_init(struct kbase_device *kbdev)
 	devfreq_recommended_opp(kbdev->dev, &opp_rate, 0);
 	rcu_read_unlock();
 	kbdev->devfreq->last_status.current_frequency = opp_rate;
-	gpu_devdata.data = kbdev->devfreq;
-	kbdev->opp_info = rockchip_register_thermal_notifier(kbdev->dev,
-							     &gpu_devdata);
-	if (IS_ERR(kbdev->opp_info)) {
-		dev_dbg(kbdev->dev, "without thermal notifier\n");
-		kbdev->opp_info = NULL;
+
+	mali_mdevp.data = kbdev->devfreq;
+	kbdev->mdev_info = rockchip_system_monitor_register(kbdev->dev,
+							    &mali_mdevp);
+	if (IS_ERR(kbdev->mdev_info)) {
+		dev_dbg(kbdev->dev, "without system monitor\n");
+		kbdev->mdev_info = NULL;
 	}
 #ifdef CONFIG_DEVFREQ_THERMAL
 	err = kbase_ipa_init(kbdev);
@@ -425,7 +427,7 @@ void kbase_devfreq_term(struct kbase_device *kbdev)
 
 	dev_dbg(kbdev->dev, "Term Mali devfreq\n");
 
-	rockchip_unregister_thermal_notifier(kbdev->opp_info);
+	rockchip_system_monitor_unregister(kbdev->mdev_info);
 #ifdef CONFIG_DEVFREQ_THERMAL
 	if (kbdev->devfreq_cooling)
 		devfreq_cooling_unregister(kbdev->devfreq_cooling);
diff --git a/drivers/gpu/arm/bifrost_for_linux/mali_kbase_defs.h b/drivers/gpu/arm/bifrost_for_linux/mali_kbase_defs.h
index 14b596c07fe7..727c263aa586 100644
--- a/drivers/gpu/arm/bifrost_for_linux/mali_kbase_defs.h
+++ b/drivers/gpu/arm/bifrost_for_linux/mali_kbase_defs.h
@@ -1126,7 +1126,7 @@ struct kbase_device {
 	u64 current_core_mask;
 	struct kbase_devfreq_opp *opp_table;
 	int num_opps;
-	struct thermal_opp_info *opp_info;
+	struct monitor_dev_info *mdev_info;
 #ifdef CONFIG_DEVFREQ_THERMAL
 #if LINUX_VERSION_CODE < KERNEL_VERSION(4, 4, 0)
 	struct devfreq_cooling_device *devfreq_cooling;
diff --git a/drivers/gpu/arm/mali400/mali/common/mali_osk_mali.h b/drivers/gpu/arm/mali400/mali/common/mali_osk_mali.h
index 98842df4cc72..bf69925a43a7 100755
--- a/drivers/gpu/arm/mali400/mali/common/mali_osk_mali.h
+++ b/drivers/gpu/arm/mali400/mali/common/mali_osk_mali.h
@@ -37,7 +37,7 @@ struct mali_device {
 	struct devfreq *devfreq;
 	unsigned long current_freq;
 	unsigned long current_voltage;
-	struct thermal_opp_info *opp_info;
+	struct monitor_dev_info *mdev_info;
 #ifdef CONFIG_DEVFREQ_THERMAL
 	struct thermal_cooling_device *devfreq_cooling;
 #endif
diff --git a/drivers/gpu/arm/mali400/mali/linux/mali_devfreq.c b/drivers/gpu/arm/mali400/mali/linux/mali_devfreq.c
index c9b8652f100d..d96841a197cc 100644
--- a/drivers/gpu/arm/mali400/mali/linux/mali_devfreq.c
+++ b/drivers/gpu/arm/mali400/mali/linux/mali_devfreq.c
@@ -37,11 +37,12 @@
 #include "mali_pm_metrics.h"
 
 #include <soc/rockchip/rockchip_opp_select.h>
+#include <soc/rockchip/rockchip_system_monitor.h>
 
-static struct thermal_opp_device_data gpu_devdata = {
-	.type = THERMAL_OPP_TPYE_DEV,
-	.low_temp_adjust = rockchip_dev_low_temp_adjust,
-	.high_temp_adjust = rockchip_dev_high_temp_adjust,
+static struct monitor_dev_profile mali_mdevp = {
+	.type = MONITOR_TPYE_DEV,
+	.low_temp_adjust = rockchip_monitor_dev_low_temp_adjust,
+	.high_temp_adjust = rockchip_monitor_dev_high_temp_adjust,
 };
 
 static int
@@ -276,12 +277,13 @@ int mali_devfreq_init(struct mali_device *mdev)
 	devfreq_recommended_opp(mdev->dev, &opp_rate, 0);
 	rcu_read_unlock();
 	mdev->devfreq->last_status.current_frequency = opp_rate;
-	gpu_devdata.data = mdev->devfreq;
-	mdev->opp_info = rockchip_register_thermal_notifier(mdev->dev,
-							    &gpu_devdata);
-	if (IS_ERR(mdev->opp_info)) {
-		dev_dbg(mdev->dev, "without thermal notifier\n");
-		mdev->opp_info = NULL;
+
+	mali_mdevp.data = mdev->devfreq;
+	mdev->mdev_info = rockchip_system_monitor_register(mdev->dev,
+							   &mali_mdevp);
+	if (IS_ERR(mdev->mdev_info)) {
+		dev_dbg(mdev->dev, "without system monitor\n");
+		mdev->mdev_info = NULL;
 	}
 #ifdef CONFIG_DEVFREQ_THERMAL
 	if (of_machine_is_compatible("rockchip,rk3036"))
@@ -334,7 +336,7 @@ void mali_devfreq_term(struct mali_device *mdev)
 
 	MALI_DEBUG_PRINT(2, ("Term Mali devfreq\n"));
 
-	rockchip_unregister_thermal_notifier(mdev->opp_info);
+	rockchip_system_monitor_unregister(mdev->mdev_info);
 #ifdef CONFIG_DEVFREQ_THERMAL
 	devfreq_cooling_unregister(mdev->devfreq_cooling);
 #endif
diff --git a/drivers/gpu/arm/midgard/backend/gpu/mali_kbase_devfreq.c b/drivers/gpu/arm/midgard/backend/gpu/mali_kbase_devfreq.c
index 1495f06cd9b9..e9424de5a939 100644
--- a/drivers/gpu/arm/midgard/backend/gpu/mali_kbase_devfreq.c
+++ b/drivers/gpu/arm/midgard/backend/gpu/mali_kbase_devfreq.c
@@ -46,11 +46,12 @@
 #define dev_pm_opp_find_freq_floor opp_find_freq_floor
 #endif /* Linux >= 3.13 */
 #include <soc/rockchip/rockchip_opp_select.h>
+#include <soc/rockchip/rockchip_system_monitor.h>
 
-static struct thermal_opp_device_data gpu_devdata = {
-	.type = THERMAL_OPP_TPYE_DEV,
-	.low_temp_adjust = rockchip_dev_low_temp_adjust,
-	.high_temp_adjust = rockchip_dev_high_temp_adjust,
+static struct monitor_dev_profile mali_mdevp = {
+	.type = MONITOR_TPYE_DEV,
+	.low_temp_adjust = rockchip_monitor_dev_low_temp_adjust,
+	.high_temp_adjust = rockchip_monitor_dev_high_temp_adjust,
 };
 
 /**
@@ -386,12 +387,12 @@ int kbase_devfreq_init(struct kbase_device *kbdev)
 	rcu_read_unlock();
 	kbdev->devfreq->last_status.current_frequency = opp_rate;
 
-	gpu_devdata.data = kbdev->devfreq;
-	kbdev->opp_info = rockchip_register_thermal_notifier(kbdev->dev,
-							     &gpu_devdata);
-	if (IS_ERR(kbdev->opp_info)) {
-		dev_dbg(kbdev->dev, "without thermal notifier\n");
-		kbdev->opp_info = NULL;
+	mali_mdevp.data = kbdev->devfreq;
+	kbdev->mdev_info = rockchip_system_monitor_register(kbdev->dev,
+							    &mali_mdevp);
+	if (IS_ERR(kbdev->mdev_info)) {
+		dev_dbg(kbdev->dev, "without system monitor\n");
+		kbdev->mdev_info = NULL;
 	}
 #ifdef CONFIG_DEVFREQ_THERMAL
 	err = kbase_ipa_init(kbdev);
@@ -435,7 +436,7 @@ void kbase_devfreq_term(struct kbase_device *kbdev)
 
 	dev_dbg(kbdev->dev, "Term Mali devfreq\n");
 
-	rockchip_unregister_thermal_notifier(kbdev->opp_info);
+	rockchip_system_monitor_unregister(kbdev->mdev_info);
 #ifdef CONFIG_DEVFREQ_THERMAL
 	if (kbdev->devfreq_cooling)
 		devfreq_cooling_unregister(kbdev->devfreq_cooling);
diff --git a/drivers/gpu/arm/midgard/mali_kbase_defs.h b/drivers/gpu/arm/midgard/mali_kbase_defs.h
index 9526dd9e1a20..9116b1d04800 100644
--- a/drivers/gpu/arm/midgard/mali_kbase_defs.h
+++ b/drivers/gpu/arm/midgard/mali_kbase_defs.h
@@ -1096,7 +1096,7 @@ struct kbase_device {
 	u64 current_core_mask;
 	struct kbase_devfreq_opp *opp_table;
 	int num_opps;
-	struct thermal_opp_info *opp_info;
+	struct monitor_dev_info *mdev_info;
 #ifdef CONFIG_DEVFREQ_THERMAL
 #if LINUX_VERSION_CODE < KERNEL_VERSION(4, 4, 0)
 	struct devfreq_cooling_device *devfreq_cooling;
diff --git a/drivers/gpu/arm/midgard_for_linux/backend/gpu/mali_kbase_devfreq.c b/drivers/gpu/arm/midgard_for_linux/backend/gpu/mali_kbase_devfreq.c
index 37c781491f7a..400bd3fa959a 100644
--- a/drivers/gpu/arm/midgard_for_linux/backend/gpu/mali_kbase_devfreq.c
+++ b/drivers/gpu/arm/midgard_for_linux/backend/gpu/mali_kbase_devfreq.c
@@ -47,14 +47,14 @@
 #define dev_pm_opp_find_freq_ceil opp_find_freq_ceil
 #endif /* Linux >= 3.13 */
 #include <soc/rockchip/rockchip_opp_select.h>
+#include <soc/rockchip/rockchip_system_monitor.h>
 
-static struct thermal_opp_device_data gpu_devdata = {
-	.type = THERMAL_OPP_TPYE_DEV,
-	.low_temp_adjust = rockchip_dev_low_temp_adjust,
-	.high_temp_adjust = rockchip_dev_high_temp_adjust,
+static struct monitor_dev_profile mali_mdevp = {
+	.type = MONITOR_TPYE_DEV,
+	.low_temp_adjust = rockchip_monitor_dev_low_temp_adjust,
+	.high_temp_adjust = rockchip_monitor_dev_high_temp_adjust,
 };
 
-
 static int
 kbase_devfreq_target(struct device *dev, unsigned long *target_freq, u32 flags)
 {
@@ -272,12 +272,12 @@ int kbase_devfreq_init(struct kbase_device *kbdev)
 	rcu_read_unlock();
 	kbdev->devfreq->last_status.current_frequency = opp_rate;
 
-	gpu_devdata.data = kbdev->devfreq;
-	kbdev->opp_info = rockchip_register_thermal_notifier(kbdev->dev,
-							     &gpu_devdata);
-	if (IS_ERR(kbdev->opp_info)) {
-		dev_dbg(kbdev->dev, "without thermal notifier\n");
-		kbdev->opp_info = NULL;
+	mali_mdevp.data = kbdev->devfreq;
+	kbdev->mdev_info = rockchip_system_monitor_register(kbdev->dev,
+							    &mali_mdevp);
+	if (IS_ERR(kbdev->mdev_info)) {
+		dev_dbg(kbdev->dev, "without system monitor\n");
+		kbdev->mdev_info = NULL;
 	}
 #ifdef CONFIG_DEVFREQ_THERMAL
 	err = kbase_power_model_simple_init(kbdev);
@@ -328,7 +328,7 @@ void kbase_devfreq_term(struct kbase_device *kbdev)
 
 	dev_dbg(kbdev->dev, "Term Mali devfreq\n");
 
-	rockchip_unregister_thermal_notifier(kbdev->opp_info);
+	rockchip_system_monitor_unregister(kbdev->mdev_info);
 #ifdef CONFIG_DEVFREQ_THERMAL
 	if (kbdev->devfreq_cooling)
 		devfreq_cooling_unregister(kbdev->devfreq_cooling);
diff --git a/drivers/gpu/arm/midgard_for_linux/mali_kbase_defs.h b/drivers/gpu/arm/midgard_for_linux/mali_kbase_defs.h
index dbe9d168bb52..7cfee8db3a1d 100644
--- a/drivers/gpu/arm/midgard_for_linux/mali_kbase_defs.h
+++ b/drivers/gpu/arm/midgard_for_linux/mali_kbase_defs.h
@@ -1084,7 +1084,7 @@ struct kbase_device {
 	struct devfreq *devfreq;
 	unsigned long current_freq;
 	unsigned long current_voltage;
-	struct thermal_opp_info *opp_info;
+	struct monitor_dev_info *mdev_info;
 #ifdef CONFIG_DEVFREQ_THERMAL
 #if LINUX_VERSION_CODE < KERNEL_VERSION(4, 4, 0)
 	struct devfreq_cooling_device *devfreq_cooling;
-- 
2.35.3

