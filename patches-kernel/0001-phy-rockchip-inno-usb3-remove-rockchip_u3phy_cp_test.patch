From 4b955357a939d4246f57070634f70c334fa08478 Mon Sep 17 00:00:00 2001
From: William Wu <william.wu@rock-chips.com>
Date: Sun, 28 Jun 2020 11:41:15 +0800
Subject: [PATCH] phy: rockchip-inno-usb3: remove rockchip_u3phy_cp_test

The rockchip_u3phy_cp_test() is used for USB3 compliance
test, and it depends on the cp_test of phy_ops which will
be dropped later, so we remove rockchip_u3phy_cp_test()
directly.

As a side effect, we need to use io commands to set the
USB3 enter compliance test mode instead of host_testmode
for RK3328 USB3 PHY.

Change-Id: Ie756b22f5bb89e146ad971f2668111a4733ff892
Signed-off-by: William Wu <william.wu@rock-chips.com>
---
 drivers/phy/rockchip/phy-rockchip-inno-usb3.c | 44 -------------------
 1 file changed, 44 deletions(-)

diff --git a/drivers/phy/rockchip/phy-rockchip-inno-usb3.c b/drivers/phy/rockchip/phy-rockchip-inno-usb3.c
index 1a92caeb957c..dec985df1722 100644
--- a/drivers/phy/rockchip/phy-rockchip-inno-usb3.c
+++ b/drivers/phy/rockchip/phy-rockchip-inno-usb3.c
@@ -122,8 +122,6 @@ struct rockchip_u3phy_cfg {
 	int (*phy_tuning)(struct rockchip_u3phy *,
 			  struct rockchip_u3phy_port *,
 			  struct device_node *);
-	int (*phy_cp_test)(struct rockchip_u3phy *,
-			   struct rockchip_u3phy_port *);
 };
 
 struct rockchip_u3phy_port {
@@ -511,33 +509,6 @@ static int rockchip_u3phy_power_off(struct phy *phy)
 	return 0;
 }
 
-static int rockchip_u3phy_cp_test(struct phy *phy)
-{
-	struct rockchip_u3phy_port *u3phy_port = phy_get_drvdata(phy);
-	struct rockchip_u3phy *u3phy = dev_get_drvdata(phy->dev.parent);
-	int ret;
-
-	if (u3phy->cfgs->phy_cp_test) {
-		/*
-		 * When do USB3 compliance test, we may connect the oscilloscope
-		 * front panel Aux Out to the DUT SSRX+, the Aux Out of the
-		 * oscilloscope outputs a negative pulse whose width is between
-		 * 300- 400 ns which may trigger some DUTs to change the CP test
-		 * pattern.
-		 *
-		 * The Inno USB3 PHY disable the function to detect the negative
-		 * pulse in SSRX+ by default, so we need to enable the function
-		 * to toggle the CP test pattern before do USB3 compliance test.
-		 */
-		dev_dbg(u3phy->dev, "prepare for u3phy compliance test\n");
-		ret = u3phy->cfgs->phy_cp_test(u3phy, u3phy_port);
-		if (ret)
-			return ret;
-	}
-
-	return 0;
-}
-
 static __maybe_unused
 struct phy *rockchip_u3phy_xlate(struct device *dev,
 				 struct of_phandle_args *args)
@@ -572,7 +543,6 @@ static struct phy_ops rockchip_u3phy_ops = {
 	.exit		= rockchip_u3phy_exit,
 	.power_on	= rockchip_u3phy_power_on,
 	.power_off	= rockchip_u3phy_power_off,
-	.cp_test	= rockchip_u3phy_cp_test,
 	.owner		= THIS_MODULE,
 };
 
@@ -1118,19 +1088,6 @@ static int rk3328_u3phy_tuning(struct rockchip_u3phy *u3phy,
 	return 0;
 }
 
-static int rk322xh_u3phy_cp_test_enable(struct rockchip_u3phy *u3phy,
-					struct rockchip_u3phy_port *u3phy_port)
-{
-	if (u3phy_port->type == U3PHY_TYPE_PIPE) {
-		writel(0x0c, u3phy_port->base + 0x408);
-	} else {
-		dev_err(u3phy->dev, "The u3phy type is not pipe\n");
-		return -EINVAL;
-	}
-
-	return 0;
-}
-
 static const struct rockchip_u3phy_cfg rk3328_u3phy_cfgs[] = {
 	{
 		.reg		= 0xff470000,
@@ -1150,7 +1107,6 @@ static const struct rockchip_u3phy_cfg rk3328_u3phy_cfgs[] = {
 		},
 		.phy_pipe_power	= rk3328_u3phy_pipe_power,
 		.phy_tuning	= rk3328_u3phy_tuning,
-		.phy_cp_test	= rk322xh_u3phy_cp_test_enable,
 	},
 	{ /* sentinel */ }
 };
-- 
2.35.3

