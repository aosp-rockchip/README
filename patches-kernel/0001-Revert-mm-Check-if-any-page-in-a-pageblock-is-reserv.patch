From 4d7d3f3851c343352bad73ec230c9e8ebd6d4aa0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E9=BB=84=E6=B6=9B?= <huangtao@rock-chips.com>
Date: Sat, 30 Jul 2011 23:09:44 +0800
Subject: [PATCH] Revert "mm: Check if any page in a pageblock is reserved
 before marking it MIGRATE_RESERVE"

This reverts commit 675bed294c5136b04e283f647e5c73fb897cfd19.
---
 mm/page_alloc.c | 16 +---------------
 1 file changed, 1 insertion(+), 15 deletions(-)

diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index cfaa29bbc733..70d43bf00dc6 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -2858,20 +2858,6 @@ static inline unsigned long wait_table_bits(unsigned long size)
 
 #define LONG_ALIGN(x) (((x)+(sizeof(long))-1)&~((sizeof(long))-1))
 
-/*
- * Check if a pageblock contains reserved pages
- */
-static int pageblock_is_reserved(unsigned long start_pfn)
-{
-	unsigned long end_pfn = start_pfn + pageblock_nr_pages;
-	unsigned long pfn;
-
-	for (pfn = start_pfn; pfn < end_pfn; pfn++)
-		if (PageReserved(pfn_to_page(pfn)))
-			return 1;
-	return 0;
-}
-
 /*
  * Mark a number of pageblocks as MIGRATE_RESERVE. The number
  * of blocks reserved is based on min_wmark_pages(zone). The memory within
@@ -2911,7 +2897,7 @@ static void setup_zone_migrate_reserve(struct zone *zone)
 			continue;
 
 		/* Blocks with reserved pages will never free, skip them. */
-		if (pageblock_is_reserved(pfn))
+		if (PageReserved(page))
 			continue;
 
 		block_migratetype = get_pageblock_migratetype(page);
-- 
2.35.3

