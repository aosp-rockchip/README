From 4f12387b4d360c724e7de31b9e0ae989d9084d02 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E9=BB=84=E6=B6=9B?= <huangtao@rock-chips.com>
Date: Mon, 29 Sep 2014 18:43:45 +0800
Subject: [PATCH] rk_serial: fix compilation warning

---
 drivers/tty/serial/rk_serial.c | 12 +++++-------
 1 file changed, 5 insertions(+), 7 deletions(-)

diff --git a/drivers/tty/serial/rk_serial.c b/drivers/tty/serial/rk_serial.c
index d7c1cb9c45e9..1f1f61d43a16 100644
--- a/drivers/tty/serial/rk_serial.c
+++ b/drivers/tty/serial/rk_serial.c
@@ -1602,21 +1602,19 @@ static void
 serial_rk_pm(struct uart_port *port, unsigned int state,
 	      unsigned int oldstate)
 {
+#ifdef CONFIG_CLOCK_CTRL
 	struct uart_rk_port *up =
 		container_of(port, struct uart_rk_port, port);
 
 	dev_dbg(port->dev, "%s: %s\n", __func__, state ? "disable" : "enable");
 	if (state) {
-#ifdef CONFIG_CLOCK_CTRL
 	clk_disable_unprepare(up->clk);
 	clk_disable_unprepare(up->pclk); 
-#endif
 	} else {
-#ifdef CONFIG_CLOCK_CTRL
 	clk_prepare_enable(up->clk);
 	clk_prepare_enable(up->pclk); 
-#endif
 	}
+#endif
 }
 
 static void serial_rk_release_port(struct uart_port *port)
@@ -2001,7 +1999,7 @@ static int serial_rk_probe(struct platform_device *pdev)
 			dev_info(up->port.dev, "dmam_alloc_coherent dma_rx_buffer fail\n");
 		}
 		else {
-			dev_info(up->port.dev, "dma_rx_buffer 0x%08x\n", (unsigned) up->dma->rx_buffer);
+			dev_info(up->port.dev, "dma_rx_buffer %p\n", up->dma->rx_buffer);
 			dev_info(up->port.dev, "dma_rx_phy 0x%08x\n", (unsigned)up->dma->rx_phy_addr);
 		}
 
@@ -2022,7 +2020,7 @@ static int serial_rk_probe(struct platform_device *pdev)
 			dev_info(up->port.dev, "dmam_alloc_coherent dma_tx_buffer fail\n");
 		}
 		else{
-			dev_info(up->port.dev, "dma_tx_buffer 0x%08x\n", (unsigned) up->dma->tx_buffer);
+			dev_info(up->port.dev, "dma_tx_buffer %p\n", up->dma->tx_buffer);
 			dev_info(up->port.dev, "dma_tx_phy 0x%08x\n", (unsigned) up->dma->tx_phy_addr);
 		}
 		spin_lock_init(&(up->dma->tx_lock));
@@ -2036,7 +2034,7 @@ static int serial_rk_probe(struct platform_device *pdev)
 	if (ret != 0)
 		return ret;
 	platform_set_drvdata(pdev, up);
-	dev_info(&pdev->dev, "membase 0x%08x\n", (unsigned) up->port.membase);
+	dev_info(&pdev->dev, "membase %p\n", up->port.membase);
 #if USE_WAKEUP
 	serial_rk_setup_wakeup_irq(up); 
 #endif
-- 
2.35.3

