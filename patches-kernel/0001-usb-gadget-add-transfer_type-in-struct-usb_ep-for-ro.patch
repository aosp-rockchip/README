From 924ae9b9ea1c7156205d23b1bd441117d0d59331 Mon Sep 17 00:00:00 2001
From: William Wu <william.wu@rock-chips.com>
Date: Tue, 22 Dec 2020 11:56:44 +0800
Subject: [PATCH] usb: gadget: add transfer_type in struct usb_ep for rockchip

The usb gadget core set the chosen endpoint descriptor for
each endpoints in config_ep_by_speed(), however, we want
to get the transfer type of the endpoints earlier on the
rockchip platforms for usb controller initialization
(e.g. do tx fifos resize for rockchip usb dwc3 controller),
so this patch add transfer_type in the struct usb_ep, and
set the transfer_type in the usb_ep_autoconfig_ss().

Change-Id: Ia2added218e180dda7a7ca5da09ee18d63be1ff0
Signed-off-by: William Wu <william.wu@rock-chips.com>
---
 drivers/usb/gadget/epautoconf.c | 6 ++++++
 include/linux/usb/gadget.h      | 4 ++++
 2 files changed, 10 insertions(+)

diff --git a/drivers/usb/gadget/epautoconf.c b/drivers/usb/gadget/epautoconf.c
index 744b8336003d..e92bfe0809d2 100644
--- a/drivers/usb/gadget/epautoconf.c
+++ b/drivers/usb/gadget/epautoconf.c
@@ -123,6 +123,12 @@ struct usb_ep *usb_ep_autoconfig_ss(
 	ep->desc = NULL;
 	ep->comp_desc = NULL;
 	ep->claimed = true;
+#ifdef CONFIG_ARCH_ROCKCHIP
+	ep->transfer_type = type;
+	if (type == USB_ENDPOINT_XFER_ISOC ||
+	    type == USB_ENDPOINT_XFER_INT)
+		ep->mult = usb_endpoint_maxp_mult(desc);
+#endif
 	return ep;
 }
 EXPORT_SYMBOL_GPL(usb_ep_autoconfig_ss);
diff --git a/include/linux/usb/gadget.h b/include/linux/usb/gadget.h
index fee44ebf5591..7011fed5f62d 100644
--- a/include/linux/usb/gadget.h
+++ b/include/linux/usb/gadget.h
@@ -278,6 +278,7 @@ enum ep_type {
  * @ep_intr_num: Interrupter number for EP.
  * @endless: In case where endless transfer is being initiated, this is set
  *      to disable usb event interrupt for few events.
+ * @transfer_type: Used to specify transfer type of EP.
  *
  * the bus controller driver lists all the general purpose endpoints in
  * gadget->ep_list.  the control endpoint (gadget->ep0) is not in that list,
@@ -305,6 +306,9 @@ struct usb_ep {
 	u8                      ep_num;
 	u8                      ep_intr_num;
 	bool                    endless;
+#ifdef CONFIG_ARCH_ROCKCHIP
+	u8			transfer_type;
+#endif
 };
 
 /*-------------------------------------------------------------------------*/
-- 
2.35.3

