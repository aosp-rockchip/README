From 709d83e7f2093dd5498d2e6e9e49979031904b08 Mon Sep 17 00:00:00 2001
From: Jung Zhao <jung.zhao@rock-chips.com>
Date: Tue, 19 Dec 2017 09:02:25 +0800
Subject: [PATCH] video: rockchip: vpu: fix set power idle failed

when vpu reset, sometimes will failed when set power domain
idle

Change-Id: I38185cce616adb41e698b0c95793934abbd51f62
Signed-off-by: Jung Zhao <jung.zhao@rock-chips.com>
---
 .../video/rockchip/vcodec/vcodec_service.c    | 64 +++++++++++++------
 include/uapi/video/rk_vpu_service.h           |  1 +
 2 files changed, 44 insertions(+), 21 deletions(-)

diff --git a/drivers/video/rockchip/vcodec/vcodec_service.c b/drivers/video/rockchip/vcodec/vcodec_service.c
index 132eb331c629..a8ec46db584b 100644
--- a/drivers/video/rockchip/vcodec/vcodec_service.c
+++ b/drivers/video/rockchip/vcodec/vcodec_service.c
@@ -43,6 +43,7 @@
 
 #include <linux/rockchip/pmu.h>
 #include <linux/rockchip/grf.h>
+#include <linux/rockchip/rockchip_sip.h>
 
 #include <linux/dma-iommu.h>
 #include <linux/dma-buf.h>
@@ -621,6 +622,7 @@ static int vpu_get_clk(struct vpu_service_info *pservice)
 static void _vpu_reset(struct vpu_subdev_data *data)
 {
 	struct vpu_service_info *pservice = data->pservice;
+	int ret = 0;
 
 	dev_info(pservice->dev, "resetting...\n");
 	WARN_ON(pservice->reg_codec != NULL);
@@ -631,28 +633,32 @@ static void _vpu_reset(struct vpu_subdev_data *data)
 	pservice->reg_resev = NULL;
 
 #ifdef CONFIG_RESET_CONTROLLER
-	rockchip_pmu_idle_request(pservice->dev, true);
-	if (pservice->hw_ops->reduce_freq)
-		pservice->hw_ops->reduce_freq(pservice);
-
-	try_reset_assert(pservice->rst_niu_a);
-	try_reset_assert(pservice->rst_niu_h);
-	try_reset_assert(pservice->rst_v);
-	try_reset_assert(pservice->rst_a);
-	try_reset_assert(pservice->rst_h);
-	try_reset_assert(pservice->rst_core);
-	try_reset_assert(pservice->rst_cabac);
-	udelay(5);
-
-	try_reset_deassert(pservice->rst_niu_h);
-	try_reset_deassert(pservice->rst_niu_a);
-	try_reset_deassert(pservice->rst_v);
-	try_reset_deassert(pservice->rst_h);
-	try_reset_deassert(pservice->rst_a);
-	try_reset_deassert(pservice->rst_core);
-	try_reset_deassert(pservice->rst_cabac);
+	ret = rockchip_pmu_idle_request(pservice->dev, true);
+	if (ret < 0) {
+		sip_smc_vpu_reset(0, 0, 0);
+	} else {
+		if (pservice->hw_ops->reduce_freq)
+			pservice->hw_ops->reduce_freq(pservice);
 
-	rockchip_pmu_idle_request(pservice->dev, false);
+		try_reset_assert(pservice->rst_niu_a);
+		try_reset_assert(pservice->rst_niu_h);
+		try_reset_assert(pservice->rst_v);
+		try_reset_assert(pservice->rst_a);
+		try_reset_assert(pservice->rst_h);
+		try_reset_assert(pservice->rst_core);
+		try_reset_assert(pservice->rst_cabac);
+		udelay(5);
+
+		try_reset_deassert(pservice->rst_niu_h);
+		try_reset_deassert(pservice->rst_niu_a);
+		try_reset_deassert(pservice->rst_v);
+		try_reset_deassert(pservice->rst_h);
+		try_reset_deassert(pservice->rst_a);
+		try_reset_deassert(pservice->rst_core);
+		try_reset_deassert(pservice->rst_cabac);
+
+		rockchip_pmu_idle_request(pservice->dev, false);
+	}
 	dev_info(pservice->dev, "reset done\n");
 #endif
 }
@@ -1796,6 +1802,18 @@ static long vpu_service_ioctl(struct file *filp, unsigned int cmd,
 			return -EFAULT;
 		}
 	} break;
+	case VPU_IOC_SET_DRIVER_DATA: {
+		u32 val;
+
+		if (copy_from_user(&val, (void __user *)arg,
+				   sizeof(int))) {
+			vpu_err("error: COMPAT_VPU_IOC_SET_DRIVER_DATA copy_from_user failed\n");
+			return -EFAULT;
+		}
+
+		if (pservice->grf)
+			regmap_write(pservice->grf, 0x5d8, val);
+	} break;
 	default: {
 		vpu_err("error: unknow vpu service ioctl cmd %x\n", cmd);
 		return -ENOIOCTLCMD;
@@ -1815,6 +1833,7 @@ static long vpu_service_ioctl(struct file *filp, unsigned int cmd,
 #define VPU_IOC_GET_REG32                  _IOW(VPU_IOC_MAGIC, 4, \
 						compat_ulong_t)
 #define VPU_IOC_PROBE_IOMMU_STATUS32       _IOR(VPU_IOC_MAGIC, 5, u32)
+#define VPU_IOC_SET_DRIVER_DATA32		_IOW(VPU_IOC_MAGIC, 64, u32)
 
 static long native_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
 {
@@ -1854,6 +1873,9 @@ static long compat_vpu_service_ioctl(struct file *file, unsigned int cmd,
 	case VPU_IOC_PROBE_IOMMU_STATUS32:
 		cmd = VPU_IOC_PROBE_IOMMU_STATUS;
 		break;
+	case VPU_IOC_SET_DRIVER_DATA32:
+		cmd = VPU_IOC_SET_DRIVER_DATA;
+		break;
 	}
 
 	switch (cmd) {
diff --git a/include/uapi/video/rk_vpu_service.h b/include/uapi/video/rk_vpu_service.h
index 763de9645051..b75e03c391c7 100644
--- a/include/uapi/video/rk_vpu_service.h
+++ b/include/uapi/video/rk_vpu_service.h
@@ -32,6 +32,7 @@
 #define VPU_IOC_GET_REG			_IOW(VPU_IOC_MAGIC, 4, unsigned long)
 
 #define VPU_IOC_PROBE_IOMMU_STATUS	_IOR(VPU_IOC_MAGIC, 5, __u32)
+#define VPU_IOC_SET_DRIVER_DATA		_IOW(VPU_IOC_MAGIC, 64, u32)
 
 struct vpu_request {
 	__u32 *req;
-- 
2.35.3

