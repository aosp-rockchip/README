From 0df3354f3ace9c90423a430f069aaa647356f3a4 Mon Sep 17 00:00:00 2001
From: Zheng Yang <zhengyang@rock-chips.com>
Date: Wed, 15 Nov 2017 10:40:38 +0800
Subject: [PATCH] drm/rockchip: vop: introduce vop_update_csc

After supportting atomic update flush for connector, output color
may be changed in the atomic update flush. It is need to separate
vop color configuration into a new function vop_update_csc, and
update output color both in atomic flush and vop_crtc_enable.

Change-Id: Ie530aaba846ddac0c68f114e081a12968b783476
Signed-off-by: Zheng Yang <zhengyang@rock-chips.com>
---
 drivers/gpu/drm/rockchip/rockchip_drm_vop.c | 140 +++++++++++---------
 1 file changed, 77 insertions(+), 63 deletions(-)

diff --git a/drivers/gpu/drm/rockchip/rockchip_drm_vop.c b/drivers/gpu/drm/rockchip/rockchip_drm_vop.c
index 8f662fd82fce..afe6da230055 100644
--- a/drivers/gpu/drm/rockchip/rockchip_drm_vop.c
+++ b/drivers/gpu/drm/rockchip/rockchip_drm_vop.c
@@ -2084,10 +2084,83 @@ static bool vop_crtc_mode_fixup(struct drm_crtc *crtc,
 	return true;
 }
 
+static void vop_update_csc(struct drm_crtc *crtc)
+{
+	struct rockchip_crtc_state *s =
+			to_rockchip_crtc_state(crtc->state);
+	struct vop *vop = to_vop(crtc);
+	u32 val;
+
+	if (s->output_mode == ROCKCHIP_OUT_MODE_AAAA &&
+	    !(vop->data->feature & VOP_FEATURE_OUTPUT_10BIT))
+		s->output_mode = ROCKCHIP_OUT_MODE_P888;
+
+	if (is_uv_swap(s->bus_format, s->output_mode))
+		VOP_CTRL_SET(vop, dsp_data_swap, DSP_RB_SWAP);
+	else
+		VOP_CTRL_SET(vop, dsp_data_swap, 0);
+
+	VOP_CTRL_SET(vop, out_mode, s->output_mode);
+
+	switch (s->bus_format) {
+	case MEDIA_BUS_FMT_RGB565_1X16:
+		val = DITHER_DOWN_EN(1) | DITHER_DOWN_MODE(RGB888_TO_RGB565);
+		break;
+	case MEDIA_BUS_FMT_RGB666_1X18:
+	case MEDIA_BUS_FMT_RGB666_1X24_CPADHI:
+		val = DITHER_DOWN_EN(1) | DITHER_DOWN_MODE(RGB888_TO_RGB666);
+		break;
+	case MEDIA_BUS_FMT_YUV8_1X24:
+	case MEDIA_BUS_FMT_UYYVYY8_0_5X24:
+		val = DITHER_DOWN_EN(0) | PRE_DITHER_DOWN_EN(1);
+		break;
+	case MEDIA_BUS_FMT_YUV10_1X30:
+	case MEDIA_BUS_FMT_UYYVYY10_0_5X30:
+		val = DITHER_DOWN_EN(0) | PRE_DITHER_DOWN_EN(0);
+		break;
+	case MEDIA_BUS_FMT_RGB888_1X24:
+	default:
+		val = DITHER_DOWN_EN(0) | PRE_DITHER_DOWN_EN(0);
+		break;
+	}
+
+	if (s->output_mode == ROCKCHIP_OUT_MODE_AAAA)
+		val |= PRE_DITHER_DOWN_EN(0);
+	else
+		val |= PRE_DITHER_DOWN_EN(1);
+	val |= DITHER_DOWN_MODE_SEL(DITHER_DOWN_ALLEGRO);
+	VOP_CTRL_SET(vop, dither_down, val);
+
+	VOP_CTRL_SET(vop, dclk_ddr,
+		     s->output_mode == ROCKCHIP_OUT_MODE_YUV420 ? 1 : 0);
+	VOP_CTRL_SET(vop, hdmi_dclk_out_en,
+		     s->output_mode == ROCKCHIP_OUT_MODE_YUV420 ? 1 : 0);
+	s->yuv_overlay = is_yuv_output(s->bus_format);
+	if (VOP_CTRL_SUPPORT(vop, overlay_mode)) {
+		VOP_CTRL_SET(vop, overlay_mode, s->yuv_overlay);
+		VOP_CTRL_SET(vop, bcsh_r2y_en, !s->yuv_overlay);
+		VOP_CTRL_SET(vop, bcsh_y2r_en, !s->yuv_overlay);
+	} else {
+		VOP_CTRL_SET(vop, bcsh_r2y_en, s->yuv_overlay);
+	}
+	VOP_CTRL_SET(vop, dsp_out_yuv, is_yuv_output(s->bus_format));
+
+	/*
+	 * Background color is 10bit depth if vop version >= 3.5
+	 */
+	if (!is_yuv_output(s->bus_format))
+		val = 0;
+	else if (VOP_MAJOR(vop->version) == 3 &&
+		 VOP_MINOR(vop->version) >= 5)
+		val = 0x20010200;
+	else
+		val = 0x801080;
+	VOP_CTRL_SET(vop, dsp_background, val);
+}
+
 static void vop_crtc_enable(struct drm_crtc *crtc)
 {
 	struct vop *vop = to_vop(crtc);
-	const struct vop_data *vop_data = vop->data;
 	struct rockchip_crtc_state *s = to_rockchip_crtc_state(crtc->state);
 	struct drm_display_mode *adjusted_mode = &crtc->state->adjusted_mode;
 	u16 hsync_len = adjusted_mode->crtc_hsync_end - adjusted_mode->crtc_hsync_start;
@@ -2172,69 +2245,8 @@ static void vop_crtc_enable(struct drm_crtc *crtc)
 		DRM_ERROR("unsupport connector_type[%d]\n", s->output_type);
 	}
 
-	if (s->output_mode == ROCKCHIP_OUT_MODE_AAAA &&
-	    !(vop_data->feature & VOP_FEATURE_OUTPUT_10BIT))
-		s->output_mode = ROCKCHIP_OUT_MODE_P888;
-
-	if (is_uv_swap(s->bus_format, s->output_mode))
-		VOP_CTRL_SET(vop, dsp_data_swap, DSP_RB_SWAP);
-	else
-		VOP_CTRL_SET(vop, dsp_data_swap, 0);
-
-	VOP_CTRL_SET(vop, out_mode, s->output_mode);
-	switch (s->bus_format) {
-	case MEDIA_BUS_FMT_RGB565_1X16:
-		val = DITHER_DOWN_EN(1) | DITHER_DOWN_MODE(RGB888_TO_RGB565);
-		break;
-	case MEDIA_BUS_FMT_RGB666_1X18:
-	case MEDIA_BUS_FMT_RGB666_1X24_CPADHI:
-		val = DITHER_DOWN_EN(1) | DITHER_DOWN_MODE(RGB888_TO_RGB666);
-		break;
-	case MEDIA_BUS_FMT_YUV8_1X24:
-	case MEDIA_BUS_FMT_UYYVYY8_0_5X24:
-		val = DITHER_DOWN_EN(0) | PRE_DITHER_DOWN_EN(1);
-		break;
-	case MEDIA_BUS_FMT_YUV10_1X30:
-	case MEDIA_BUS_FMT_UYYVYY10_0_5X30:
-		val = DITHER_DOWN_EN(0) | PRE_DITHER_DOWN_EN(0);
-		break;
-	case MEDIA_BUS_FMT_RGB888_1X24:
-	default:
-		val = DITHER_DOWN_EN(0) | PRE_DITHER_DOWN_EN(0);
-		break;
-	}
-
-	if (s->output_mode == ROCKCHIP_OUT_MODE_AAAA)
-		val |= PRE_DITHER_DOWN_EN(0);
-	else
-		val |= PRE_DITHER_DOWN_EN(1);
-	val |= DITHER_DOWN_MODE_SEL(DITHER_DOWN_ALLEGRO);
-	VOP_CTRL_SET(vop, dither_down, val);
-	VOP_CTRL_SET(vop, dclk_ddr,
-		     s->output_mode == ROCKCHIP_OUT_MODE_YUV420 ? 1 : 0);
-	VOP_CTRL_SET(vop, hdmi_dclk_out_en,
-		     s->output_mode == ROCKCHIP_OUT_MODE_YUV420 ? 1 : 0);
-	s->yuv_overlay = is_yuv_output(s->bus_format);
-	if (VOP_CTRL_SUPPORT(vop, overlay_mode)) {
-		VOP_CTRL_SET(vop, overlay_mode, s->yuv_overlay);
-		VOP_CTRL_SET(vop, bcsh_r2y_en, !s->yuv_overlay);
-		VOP_CTRL_SET(vop, bcsh_y2r_en, !s->yuv_overlay);
-	} else {
-		VOP_CTRL_SET(vop, bcsh_r2y_en, s->yuv_overlay);
-	}
-	VOP_CTRL_SET(vop, dsp_out_yuv, s->yuv_overlay);
+	vop_update_csc(crtc);
 
-	/*
-	 * Background color is 10bit depth if vop version >= 3.5
-	 */
-	if (!is_yuv_output(s->bus_format))
-		val = 0;
-	else if (VOP_MAJOR(vop->version) == 3 &&
-		 VOP_MINOR(vop->version) >= 5)
-		val = 0x20010200;
-	else
-		val = 0x801080;
-	VOP_CTRL_SET(vop, dsp_background, val);
 	VOP_CTRL_SET(vop, htotal_pw, (htotal << 16) | hsync_len);
 	val = hact_st << 16;
 	val |= hact_end;
@@ -2734,6 +2746,8 @@ static void vop_cfg_update(struct drm_crtc *crtc,
 
 	spin_lock(&vop->reg_lock);
 
+	vop_update_csc(crtc);
+
 	vop_tv_config_update(crtc, old_crtc_state);
 
 	if (s->afbdc_en) {
-- 
2.35.3

