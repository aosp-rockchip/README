From ee8907537981d257af90254475980431e18401f0 Mon Sep 17 00:00:00 2001
From: Lin Jinhan <troy.lin@rock-chips.com>
Date: Tue, 24 Nov 2020 14:41:13 +0800
Subject: [PATCH] hwrng: rockchip: add rk356x support

Change-Id: I4967fbf81d8012e4819b35cf01af511c7a9a9a95
Signed-off-by: Lin Jinhan <troy.lin@rock-chips.com>
---
 drivers/char/hw_random/rockchip-rng.c | 37 +++------------------------
 1 file changed, 4 insertions(+), 33 deletions(-)

diff --git a/drivers/char/hw_random/rockchip-rng.c b/drivers/char/hw_random/rockchip-rng.c
index cd4e121ec79c..9a61f80874a4 100644
--- a/drivers/char/hw_random/rockchip-rng.c
+++ b/drivers/char/hw_random/rockchip-rng.c
@@ -53,8 +53,6 @@
 /* end of CRYPTO V2 register define */
 
 struct rk_rng_soc_data {
-	const char * const *clks;
-	int clks_num;
 	int (*rk_rng_read)(struct hwrng *rng, void *buf, size_t max, bool wait);
 };
 
@@ -63,22 +61,10 @@ struct rk_rng {
 	struct hwrng		rng;
 	void __iomem		*mem;
 	struct rk_rng_soc_data	*soc_data;
-	u32			clk_num;
+	int			clk_num;
 	struct clk_bulk_data	*clk_bulks;
 };
 
-static const char * const rk_rng_v1_clks[] = {
-	"hclk_crypto",
-	"clk_crypto",
-};
-
-static const char * const rk_rng_v2_clks[] = {
-	"hclk_crypto",
-	"aclk_crypto",
-	"clk_crypto",
-	"clk_crypto_apk",
-};
-
 static void rk_rng_writel(struct rk_rng *rng, u32 val, u32 offset)
 {
 	__raw_writel(val, rng->mem + offset);
@@ -209,14 +195,10 @@ static int rk_rng_v2_read(struct hwrng *rng, void *buf, size_t max, bool wait)
 }
 
 static const struct rk_rng_soc_data rk_rng_v1_soc_data = {
-	.clks_num = ARRAY_SIZE(rk_rng_v1_clks),
-	.clks = rk_rng_v1_clks,
 	.rk_rng_read = rk_rng_v1_read,
 };
 
 static const struct rk_rng_soc_data rk_rng_v2_soc_data = {
-	.clks_num = ARRAY_SIZE(rk_rng_v2_clks),
-	.clks = rk_rng_v2_clks,
 	.rk_rng_read = rk_rng_v2_read,
 };
 
@@ -236,7 +218,6 @@ MODULE_DEVICE_TABLE(of, rk_rng_dt_match);
 
 static int rk_rng_probe(struct platform_device *pdev)
 {
-	int i;
 	int ret;
 	struct rk_rng *rk_rng;
 	struct device_node *np = pdev->dev.of_node;
@@ -259,24 +240,14 @@ static int rk_rng_probe(struct platform_device *pdev)
 	rk_rng->rng.read    = rk_rng->soc_data->rk_rng_read;
 	rk_rng->rng.quality = 999;
 
-	rk_rng->clk_bulks =
-		devm_kzalloc(&pdev->dev, sizeof(*rk_rng->clk_bulks) *
-			     rk_rng->soc_data->clks_num, GFP_KERNEL);
-
-	rk_rng->clk_num = rk_rng->soc_data->clks_num;
-
-	for (i = 0; i < rk_rng->soc_data->clks_num; i++)
-		rk_rng->clk_bulks[i].id = rk_rng->soc_data->clks[i];
-
 	rk_rng->mem = devm_of_iomap(&pdev->dev, pdev->dev.of_node, 0, NULL);
 	if (IS_ERR(rk_rng->mem))
 		return PTR_ERR(rk_rng->mem);
 
-	ret = devm_clk_bulk_get(&pdev->dev, rk_rng->clk_num,
-				rk_rng->clk_bulks);
-	if (ret) {
+	rk_rng->clk_num = devm_clk_bulk_get_all(&pdev->dev, &rk_rng->clk_bulks);
+	if (rk_rng->clk_num < 0) {
 		dev_err(&pdev->dev, "failed to get clks property\n");
-		return ret;
+		return -ENODEV;
 	}
 
 	platform_set_drvdata(pdev, rk_rng);
-- 
2.35.3

