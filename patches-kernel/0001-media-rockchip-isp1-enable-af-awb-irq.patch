From aa6525d8f97d2d1685504400b4a5f92840390316 Mon Sep 17 00:00:00 2001
From: Cai YiWei <cyw@rock-chips.com>
Date: Thu, 18 Apr 2019 17:15:58 +0800
Subject: [PATCH] media: rockchip: isp1: enable af awb irq

enable AWB AF irq, to send measurement alone.
AEC and HIST need to get together, do it in
frame end.

Change-Id: I7d955eccfd4080865fa4c4f260a1e3c44f9585e1
Signed-off-by: Cai YiWei <cyw@rock-chips.com>
---
 .../media/platform/rockchip/isp1/isp_stats.c  | 34 +++++++++++--------
 .../media/platform/rockchip/isp1/isp_stats.h  |  1 +
 drivers/media/platform/rockchip/isp1/rkisp1.c | 18 ++++++----
 .../media/platform/rockchip/isp1/version.h    | 11 +++++-
 4 files changed, 42 insertions(+), 22 deletions(-)

diff --git a/drivers/media/platform/rockchip/isp1/isp_stats.c b/drivers/media/platform/rockchip/isp1/isp_stats.c
index 6af74ba33c9c..b7d17f8a792a 100644
--- a/drivers/media/platform/rockchip/isp1/isp_stats.c
+++ b/drivers/media/platform/rockchip/isp1/isp_stats.c
@@ -477,7 +477,7 @@ rkisp1_stats_send_measurement(struct rkisp1_isp_stats_vdev *stats_vdev,
 
 	cur_stat_buf =
 		(struct rkisp1_stat_buffer *)(cur_buf->vaddr[0]);
-
+	memset(cur_stat_buf, 0, sizeof(*cur_stat_buf));
 	cur_stat_buf->frame_id = cur_frame_id;
 	if (meas_work->isp_ris & CIF_ISP_AWB_DONE) {
 		ops->get_awb_meas(stats_vdev, cur_stat_buf);
@@ -500,13 +500,14 @@ rkisp1_stats_send_measurement(struct rkisp1_isp_stats_vdev *stats_vdev,
 		cur_stat_buf->meas_type |= CIFISP_STAT_HIST;
 	}
 
-	if (ops->get_emb_data)
+	if ((meas_work->isp_ris & CIF_ISP_FRAME) &&
+		ops->get_emb_data)
 		ops->get_emb_data(stats_vdev, cur_stat_buf);
 
 	vb2_set_plane_payload(&cur_buf->vb.vb2_buf, 0,
 			      sizeof(struct rkisp1_stat_buffer));
 	cur_buf->vb.sequence = cur_frame_id;
-	cur_buf->vb.vb2_buf.timestamp = ktime_get_ns();
+	cur_buf->vb.vb2_buf.timestamp = meas_work->timestamp;
 	vb2_buffer_done(&cur_buf->vb.vb2_buf, VB2_BUF_STATE_DONE);
 }
 
@@ -540,26 +541,29 @@ int rkisp1_stats_isr(struct rkisp1_isp_stats_vdev *stats_vdev, u32 isp_ris)
 
 	spin_lock(&stats_vdev->irq_lock);
 
-	writel((CIF_ISP_AWB_DONE | CIF_ISP_AFM_FIN | CIF_ISP_EXP_END |
-		CIF_ISP_HIST_MEASURE_RDY),
-		stats_vdev->dev->base_addr + CIF_ISP_ICR);
+	isp_mis_tmp = isp_ris & (CIF_ISP_AWB_DONE | CIF_ISP_AFM_FIN |
+			CIF_ISP_EXP_END | CIF_ISP_HIST_MEASURE_RDY);
+	if (isp_mis_tmp) {
+		writel(isp_mis_tmp,
+			stats_vdev->dev->base_addr + CIF_ISP_ICR);
 
-	isp_mis_tmp = readl(stats_vdev->dev->base_addr + CIF_ISP_MIS);
-	if (isp_mis_tmp &
-		(CIF_ISP_AWB_DONE | CIF_ISP_AFM_FIN |
-		 CIF_ISP_EXP_END | CIF_ISP_HIST_MEASURE_RDY))
-		v4l2_err(stats_vdev->vnode.vdev.v4l2_dev,
-			 "isp icr 3A info err: 0x%x\n",
-			 isp_mis_tmp);
+		isp_mis_tmp &= readl(stats_vdev->dev->base_addr + CIF_ISP_MIS);
+		if (isp_mis_tmp)
+			v4l2_err(stats_vdev->vnode.vdev.v4l2_dev,
+				 "isp icr 3A info err: 0x%x 0x%x\n",
+				 isp_mis_tmp, isp_ris);
+	}
 
 	if (!stats_vdev->streamon)
 		goto unlock;
-	if (isp_ris & (CIF_ISP_AWB_DONE | CIF_ISP_AFM_FIN | CIF_ISP_EXP_END |
+
+	if (isp_ris & (CIF_ISP_FRAME | CIF_ISP_AWB_DONE |
+		CIF_ISP_AFM_FIN | CIF_ISP_EXP_END |
 		CIF_ISP_HIST_MEASURE_RDY)) {
 		work.readout = RKISP1_ISP_READOUT_MEAS;
 		work.frame_id = cur_frame_id;
 		work.isp_ris = isp_ris;
-
+		work.timestamp = ktime_get_ns();
 		if (!kfifo_is_full(&stats_vdev->rd_kfifo))
 			kfifo_in(&stats_vdev->rd_kfifo,
 				 &work, sizeof(work));
diff --git a/drivers/media/platform/rockchip/isp1/isp_stats.h b/drivers/media/platform/rockchip/isp1/isp_stats.h
index 433502bee6a7..bdb4779b1f69 100644
--- a/drivers/media/platform/rockchip/isp1/isp_stats.h
+++ b/drivers/media/platform/rockchip/isp1/isp_stats.h
@@ -54,6 +54,7 @@ struct rkisp1_isp_readout_work {
 	unsigned int frame_id;
 	unsigned int isp_ris;
 	enum rkisp1_isp_readout_cmd readout;
+	unsigned long long timestamp;
 };
 
 struct rkisp1_stats_ops {
diff --git a/drivers/media/platform/rockchip/isp1/rkisp1.c b/drivers/media/platform/rockchip/isp1/rkisp1.c
index 1b63256f7820..7b42ddbe197d 100644
--- a/drivers/media/platform/rockchip/isp1/rkisp1.c
+++ b/drivers/media/platform/rockchip/isp1/rkisp1.c
@@ -354,7 +354,7 @@ static int rkisp1_config_isp(struct rkisp1_device *dev)
 
 	/* interrupt mask */
 	irq_mask |= CIF_ISP_FRAME | CIF_ISP_V_START | CIF_ISP_PIC_SIZE_ERROR |
-		    CIF_ISP_FRAME_IN;
+		    CIF_ISP_FRAME_IN | CIF_ISP_AWB_DONE | CIF_ISP_AFM_FIN;
 	writel(irq_mask, base + CIF_ISP_IMSC);
 
 	if (out_fmt->fmt_type == FMT_BAYER)
@@ -1699,7 +1699,6 @@ void rkisp1_isp_isr(unsigned int isp_mis, struct rkisp1_device *dev)
 
 	/* frame was completely put out */
 	if (isp_mis & CIF_ISP_FRAME) {
-		u32 isp_ris = 0;
 		/* Clear Frame In (ISP) */
 		writel(CIF_ISP_FRAME, base + CIF_ISP_ICR);
 		isp_mis_tmp = readl(base + CIF_ISP_MIS);
@@ -1708,11 +1707,18 @@ void rkisp1_isp_isr(unsigned int isp_mis, struct rkisp1_device *dev)
 				 "isp icr frame end err: 0x%x\n", isp_mis_tmp);
 
 		rkisp1_isp_read_add_fifo_data(dev);
+	}
+
+	if (isp_mis & (CIF_ISP_FRAME | CIF_ISP_AWB_DONE | CIF_ISP_AFM_FIN)) {
+		u32 irq = isp_mis;
+
+		/* FRAME to get EXP and HIST together */
+		if (isp_mis & CIF_ISP_FRAME)
+			irq |= ((CIF_ISP_EXP_END |
+				CIF_ISP_HIST_MEASURE_RDY) &
+				readl(base + CIF_ISP_RIS));
 
-		isp_ris = readl(base + CIF_ISP_RIS);
-		if (isp_ris & (CIF_ISP_AWB_DONE | CIF_ISP_AFM_FIN |
-				CIF_ISP_EXP_END | CIF_ISP_HIST_MEASURE_RDY))
-			rkisp1_stats_isr(&dev->stats_vdev, isp_ris);
+		rkisp1_stats_isr(&dev->stats_vdev, irq);
 	}
 
 	/*
diff --git a/drivers/media/platform/rockchip/isp1/version.h b/drivers/media/platform/rockchip/isp1/version.h
index ef0ad89a5b56..eb684f4efb05 100644
--- a/drivers/media/platform/rockchip/isp1/version.h
+++ b/drivers/media/platform/rockchip/isp1/version.h
@@ -35,8 +35,17 @@
  *21. check for capture S_FMT;
  *22. raw patch with default sensor fmt&size;
  *
+ *v0.1.2:
+ *1. fix reset on too high isp_clk rate will result in bus dead;
+ *2. add RKMODULE_LSC_CFG ioctl;
+ *
+ *v0.1.3:
+ *1. fix wrong RG10 format
+ *2. clear unready subdevice when kernel boot complete
+ *3. fix diff isp ver to get frame num
+ *4. enable af awb irq
  */
 
-#define RKISP1_DRIVER_VERSION KERNEL_VERSION(0, 1, 0x1)
+#define RKISP1_DRIVER_VERSION KERNEL_VERSION(0, 1, 0x3)
 
 #endif
-- 
2.35.3

