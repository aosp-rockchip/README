From 6a77d2696875626b2b72d9252cf1dc156c524328 Mon Sep 17 00:00:00 2001
From: Jacob Chen <jacob2.chen@rock-chips.com>
Date: Tue, 31 Oct 2017 08:49:28 +0800
Subject: [PATCH] media: rockchip: rga: add quantization support

Also:
- correct the default quantization for RGB input, it should be full range.

Change-Id: I786799a3532b5c3a18e67c9195ec24ea811d1144
Signed-off-by: Jacob Chen <jacob2.chen@rock-chips.com>
---
 drivers/media/platform/rockchip-rga/rga-hw.c | 65 ++++++++++++--------
 drivers/media/platform/rockchip-rga/rga-hw.h | 14 ++---
 drivers/media/platform/rockchip-rga/rga.c    |  3 +
 drivers/media/platform/rockchip-rga/rga.h    |  1 +
 4 files changed, 46 insertions(+), 37 deletions(-)

diff --git a/drivers/media/platform/rockchip-rga/rga-hw.c b/drivers/media/platform/rockchip-rga/rga-hw.c
index ee81aff299b6..fc5cfcf9dd70 100644
--- a/drivers/media/platform/rockchip-rga/rga-hw.c
+++ b/drivers/media/platform/rockchip-rga/rga-hw.c
@@ -127,6 +127,32 @@ static struct rga_addr_offset *rga_lookup_draw_pos(struct
 	return NULL;
 }
 
+static unsigned int rga_get_quantization(u32 format, u32 colorspace,
+					 u32 quantization)
+{
+	/*
+	 * The default for R'G'B' quantization is full range by default.
+	 * For Y'CbCr the quantization is limited range by default.
+	 */
+	if (format >= RGA_COLOR_FMT_YUV422SP &&
+		quantization == V4L2_QUANTIZATION_DEFAULT) {
+		quantization = V4L2_QUANTIZATION_LIM_RANGE;
+	} else if (format < RGA_COLOR_FMT_YUV422SP &&
+		quantization == V4L2_QUANTIZATION_DEFAULT) {
+		quantization = V4L2_QUANTIZATION_FULL_RANGE;
+	}
+
+	if (colorspace == V4L2_COLORSPACE_REC709)
+		return RGA_CSC_MODE_BT709_R0;
+
+	if (quantization == V4L2_QUANTIZATION_LIM_RANGE)
+		return RGA_CSC_MODE_BT601_R0;
+	else if (quantization == V4L2_QUANTIZATION_FULL_RANGE)
+		return RGA_CSC_MODE_BT601_R1;
+
+	return RGA_CSC_MODE_BYPASS;
+}
+
 static void rga_cmd_set_src_addr(struct rga_ctx *ctx, void *mmu_pages)
 {
 	struct rockchip_rga *rga = ctx->rga;
@@ -208,33 +234,18 @@ static void rga_cmd_set_trans_info(struct rga_ctx *ctx)
 	dst_info.data.format = ctx->out.fmt->hw_format;
 	dst_info.data.swap = ctx->out.fmt->color_swap;
 
-	if (ctx->in.fmt->hw_format >= RGA_COLOR_FMT_YUV422SP) {
-		if (ctx->out.fmt->hw_format < RGA_COLOR_FMT_YUV422SP) {
-			switch (ctx->in.colorspace) {
-			case V4L2_COLORSPACE_REC709:
-				src_info.data.csc_mode =
-					RGA_SRC_CSC_MODE_BT709_R0;
-				break;
-			default:
-				src_info.data.csc_mode =
-					RGA_SRC_CSC_MODE_BT601_R0;
-				break;
-			}
-		}
-	}
-
-	if (ctx->out.fmt->hw_format >= RGA_COLOR_FMT_YUV422SP) {
-		switch (ctx->out.colorspace) {
-		case V4L2_COLORSPACE_REC709:
-			dst_info.data.csc_mode =
-				RGA_SRC_CSC_MODE_BT709_R0;
-			break;
-		default:
-			dst_info.data.csc_mode =
-				RGA_DST_CSC_MODE_BT601_R0;
-			break;
-		}
-	}
+	/* yuv -> rgb */
+	if (ctx->in.fmt->hw_format >= RGA_COLOR_FMT_YUV422SP &&
+		ctx->out.fmt->hw_format < RGA_COLOR_FMT_YUV422SP)
+		src_info.data.csc_mode =
+			rga_get_quantization(ctx->in.fmt->hw_format,
+				ctx->in.colorspace, ctx->in.quantization);
+
+	/* (yuv -> rgb) -> yuv or rgb -> yuv */
+	if (ctx->out.fmt->hw_format >= RGA_COLOR_FMT_YUV422SP)
+		dst_info.data.csc_mode =
+			rga_get_quantization(ctx->in.fmt->hw_format,
+				ctx->out.colorspace, ctx->out.quantization);
 
 	if (ctx->op == V4L2_PORTER_DUFF_CLEAR) {
 		/*
diff --git a/drivers/media/platform/rockchip-rga/rga-hw.h b/drivers/media/platform/rockchip-rga/rga-hw.h
index ca3c204abe42..f2b0b9621917 100644
--- a/drivers/media/platform/rockchip-rga/rga-hw.h
+++ b/drivers/media/platform/rockchip-rga/rga-hw.h
@@ -108,11 +108,10 @@
 #define RGA_COLOR_ALPHA_SWAP 2
 #define RGA_COLOR_UV_SWAP 4
 
-#define RGA_SRC_CSC_MODE_BYPASS 0
-#define RGA_SRC_CSC_MODE_BT601_R0 1
-#define RGA_SRC_CSC_MODE_BT601_R1 2
-#define RGA_SRC_CSC_MODE_BT709_R0 3
-#define RGA_SRC_CSC_MODE_BT709_R1 4
+#define RGA_CSC_MODE_BYPASS 0
+#define RGA_CSC_MODE_BT601_R0 1
+#define RGA_CSC_MODE_BT601_R1 2
+#define RGA_CSC_MODE_BT709_R0 3
 
 #define RGA_SRC_ROT_MODE_0_DEGREE 0
 #define RGA_SRC_ROT_MODE_90_DEGREE 1
@@ -147,11 +146,6 @@
 #define RGA_DST_DITHER_MODE_888_TO_555 2
 #define RGA_DST_DITHER_MODE_888_TO_444 3
 
-#define RGA_DST_CSC_MODE_BYPASS 0
-#define RGA_DST_CSC_MODE_BT601_R0 1
-#define RGA_DST_CSC_MODE_BT601_R1 2
-#define RGA_DST_CSC_MODE_BT709_R0 3
-
 #define RGA_ALPHA_ROP_MODE_2 0
 #define RGA_ALPHA_ROP_MODE_3 1
 #define RGA_ALPHA_ROP_MODE_4 2
diff --git a/drivers/media/platform/rockchip-rga/rga.c b/drivers/media/platform/rockchip-rga/rga.c
index 7f4c6f6acb7b..af6b09529028 100644
--- a/drivers/media/platform/rockchip-rga/rga.c
+++ b/drivers/media/platform/rockchip-rga/rga.c
@@ -376,6 +376,7 @@ static struct rga_frame def_frame = {
 	.width = DEFAULT_WIDTH,
 	.height = DEFAULT_HEIGHT,
 	.colorspace = V4L2_COLORSPACE_DEFAULT,
+	.quantization = V4L2_QUANTIZATION_DEFAULT,
 	.crop.left = 0,
 	.crop.top = 0,
 	.crop.width = DEFAULT_WIDTH,
@@ -510,6 +511,7 @@ static int vidioc_g_fmt(struct file *file, void *prv, struct v4l2_format *f)
 	f->fmt.pix.bytesperline = frm->stride;
 	f->fmt.pix.sizeimage = frm->size;
 	f->fmt.pix.colorspace = frm->colorspace;
+	f->fmt.pix.quantization = frm->quantization;
 
 	return 0;
 }
@@ -579,6 +581,7 @@ static int vidioc_s_fmt(struct file *file, void *prv, struct v4l2_format *f)
 	frm->fmt = fmt;
 	frm->stride = f->fmt.pix.bytesperline;
 	frm->colorspace = f->fmt.pix.colorspace;
+	frm->quantization = f->fmt.pix.colorspace;
 
 	/* Reset crop settings */
 	frm->crop.left = 0;
diff --git a/drivers/media/platform/rockchip-rga/rga.h b/drivers/media/platform/rockchip-rga/rga.h
index f86362fe8f88..a6fffb212266 100644
--- a/drivers/media/platform/rockchip-rga/rga.h
+++ b/drivers/media/platform/rockchip-rga/rga.h
@@ -36,6 +36,7 @@ struct rga_frame {
 	u32 width;
 	u32 height;
 	u32 colorspace;
+	u32 quantization;
 
 	/* Crop */
 	struct v4l2_rect crop;
-- 
2.35.3

