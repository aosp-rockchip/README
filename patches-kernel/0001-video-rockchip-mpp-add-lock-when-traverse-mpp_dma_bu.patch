From d37bac146e0c1a597a7af8bec38d05a19a16a5ad Mon Sep 17 00:00:00 2001
From: Grey Li <grey.li@rock-chips.com>
Date: Fri, 27 Dec 2019 09:40:49 +0800
Subject: [PATCH] video: rockchip: mpp: add lock when traverse mpp_dma_buffer
 list

Change-Id: I3002dfce5415b8aebd54bcf3e9617f428e7a196f
Signed-off-by: Grey Li <grey.li@rock-chips.com>
---
 drivers/video/rockchip/mpp/mpp_common.c |  2 +-
 drivers/video/rockchip/mpp/mpp_iommu.c  | 32 +++++++++----------------
 drivers/video/rockchip/mpp/mpp_iommu.h  |  1 -
 3 files changed, 12 insertions(+), 23 deletions(-)

diff --git a/drivers/video/rockchip/mpp/mpp_common.c b/drivers/video/rockchip/mpp/mpp_common.c
index 2fab291d0b55..da62ac6f93be 100644
--- a/drivers/video/rockchip/mpp/mpp_common.c
+++ b/drivers/video/rockchip/mpp/mpp_common.c
@@ -906,7 +906,7 @@ static int mpp_process_request(struct mpp_session *session,
 		}
 		count = req->size / sizeof(u32);
 		for (i = 0; i < count; i++) {
-			ret = mpp_dma_release_fd_direct(session->dma, data[i]);
+			ret = mpp_dma_release_fd(session->dma, data[i]);
 			if (ret) {
 				mpp_err("release fd %d failed.\n", data[i]);
 				return ret;
diff --git a/drivers/video/rockchip/mpp/mpp_iommu.c b/drivers/video/rockchip/mpp/mpp_iommu.c
index 44490c35cae1..9398e37b25f9 100644
--- a/drivers/video/rockchip/mpp/mpp_iommu.c
+++ b/drivers/video/rockchip/mpp/mpp_iommu.c
@@ -31,6 +31,7 @@ mpp_dma_find_buffer_fd(struct mpp_dma_session *dma, int fd)
 	if (IS_ERR(dmabuf))
 		return NULL;
 
+	mutex_lock(&dma->list_mutex);
 	list_for_each_entry_safe(buffer, n,
 				 &dma->buffer_list, list) {
 		/*
@@ -43,6 +44,7 @@ mpp_dma_find_buffer_fd(struct mpp_dma_session *dma, int fd)
 			break;
 		}
 	}
+	mutex_unlock(&dma->list_mutex);
 	dma_buf_put(dmabuf);
 
 	return out;
@@ -54,10 +56,8 @@ static void mpp_dma_release_buffer(struct kref *ref)
 	struct mpp_dma_buffer *buffer =
 		container_of(ref, struct mpp_dma_buffer, ref);
 
-	mutex_lock(&buffer->dma->list_mutex);
 	buffer->dma->buffer_count--;
 	list_del_init(&buffer->list);
-	mutex_unlock(&buffer->dma->list_mutex);
 
 	dma_buf_unmap_attachment(buffer->attach, buffer->sgt, buffer->dir);
 	dma_buf_detach(buffer->dmabuf, buffer->attach);
@@ -74,6 +74,7 @@ mpp_dma_remove_extra_buffer(struct mpp_dma_session *dma)
 	ktime_t oldest_time = ktime_set(0, 0);
 
 	if (dma->buffer_count > dma->max_buffers) {
+		mutex_lock(&dma->list_mutex);
 		list_for_each_entry_safe(buffer, n,
 					 &dma->buffer_list,
 					 list) {
@@ -83,29 +84,14 @@ mpp_dma_remove_extra_buffer(struct mpp_dma_session *dma)
 				oldest = buffer;
 			}
 		}
-		kref_put(&oldest->ref, mpp_dma_release_buffer);
+		if (oldest)
+			kref_put(&oldest->ref, mpp_dma_release_buffer);
+		mutex_unlock(&dma->list_mutex);
 	}
 
 	return 0;
 }
 
-int mpp_dma_release_fd_direct(struct mpp_dma_session *dma, int fd)
-{
-	struct device *dev = dma->dev;
-	struct mpp_dma_buffer *buffer = NULL;
-
-	buffer = mpp_dma_find_buffer_fd(dma, fd);
-	if (IS_ERR_OR_NULL(buffer)) {
-		dev_err(dev, "can not find %d buffer in list\n", fd);
-
-		return -EINVAL;
-	}
-
-	mpp_dma_release_buffer(&buffer->ref);
-
-	return 0;
-}
-
 int mpp_dma_release_fd(struct mpp_dma_session *dma, int fd)
 {
 	struct device *dev = dma->dev;
@@ -118,7 +104,9 @@ int mpp_dma_release_fd(struct mpp_dma_session *dma, int fd)
 		return -EINVAL;
 	}
 
+	mutex_lock(&dma->list_mutex);
 	kref_put(&buffer->ref, mpp_dma_release_buffer);
+	mutex_unlock(&dma->list_mutex);
 
 	return 0;
 }
@@ -305,11 +293,13 @@ int mpp_dma_session_destroy(struct mpp_dma_session *dma)
 	if (!dma)
 		return -EINVAL;
 
+	mutex_lock(&dma->list_mutex);
 	list_for_each_entry_safe(buffer, n,
 				 &dma->buffer_list,
 				 list) {
-		mpp_dma_release_buffer(&buffer->ref);
+		kref_put(&buffer->ref, mpp_dma_release_buffer);
 	}
+	mutex_unlock(&dma->list_mutex);
 
 	kfree(dma);
 
diff --git a/drivers/video/rockchip/mpp/mpp_iommu.h b/drivers/video/rockchip/mpp/mpp_iommu.h
index 21892b7e282d..864413ea27dd 100644
--- a/drivers/video/rockchip/mpp/mpp_iommu.h
+++ b/drivers/video/rockchip/mpp/mpp_iommu.h
@@ -64,7 +64,6 @@ int mpp_dma_free(struct mpp_dma_session *dma,
 struct mpp_dma_buffer *
 mpp_dma_import_fd(struct mpp_iommu_info *iommu_info,
 		  struct mpp_dma_session *dma, int fd);
-int mpp_dma_release_fd_direct(struct mpp_dma_session *dma, int fd);
 int mpp_dma_release_fd(struct mpp_dma_session *dma, int fd);
 
 int mpp_dma_unmap_kernel(struct mpp_dma_session *dma,
-- 
2.35.3

