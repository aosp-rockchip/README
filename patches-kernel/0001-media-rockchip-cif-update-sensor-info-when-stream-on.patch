From b610c9218dc5711bea3c6f3931d72a81b05b3bdc Mon Sep 17 00:00:00 2001
From: Allon Huang <allon.huang@rock-chips.com>
Date: Sat, 25 Jul 2020 10:21:41 +0800
Subject: [PATCH] media: rockchip: cif: update sensor info when stream on

Signed-off-by: Allon Huang <allon.huang@rock-chips.com>
Change-Id: I65837b7a16a511f00061288acb4d9db90110930e
---
 drivers/media/platform/rockchip/cif/capture.c | 38 +++++++++----------
 drivers/media/platform/rockchip/cif/dev.c     |  1 -
 drivers/media/platform/rockchip/cif/dev.h     |  1 -
 3 files changed, 17 insertions(+), 23 deletions(-)

diff --git a/drivers/media/platform/rockchip/cif/capture.c b/drivers/media/platform/rockchip/cif/capture.c
index 5ec32cb9e4fb..c51a8253c300 100644
--- a/drivers/media/platform/rockchip/cif/capture.c
+++ b/drivers/media/platform/rockchip/cif/capture.c
@@ -2052,7 +2052,7 @@ static int rkcif_start_streaming(struct vb2_queue *queue, unsigned int count)
 		goto destroy_buf;
 	}
 
-	if (!dev->active_sensor) {
+	if (dev->active_sensor) {
 		ret = rkcif_update_sensor_info(stream);
 		if (ret < 0) {
 			v4l2_err(v4l2_dev,
@@ -2063,16 +2063,14 @@ static int rkcif_start_streaming(struct vb2_queue *queue, unsigned int count)
 	}
 
 	if (dev->terminal_sensor) {
-		if (!dev->has_get_hdr) {
-			ret = v4l2_subdev_call(dev->terminal_sensor,
-					       core, ioctl,
-					       RKMODULE_GET_HDR_CFG,
-					       &hdr_cfg);
-			if (!ret) {
-				dev->hdr.mode = hdr_cfg.hdr_mode;
-				dev->has_get_hdr = true;
-			}
-		}
+		ret = v4l2_subdev_call(dev->terminal_sensor,
+				       core, ioctl,
+				       RKMODULE_GET_HDR_CFG,
+				       &hdr_cfg);
+		if (!ret)
+			dev->hdr.mode = hdr_cfg.hdr_mode;
+		else
+			dev->hdr.mode = NO_HDR;
 	}
 
 	ret = rkcif_sanity_check_fmt(stream, NULL);
@@ -2238,16 +2236,14 @@ static void rkcif_set_fmt(struct rkcif_stream *stream,
 			      &input_rect, stream->id + 1);
 
 	if (dev->terminal_sensor) {
-		if (!dev->has_get_hdr) {
-			ret = v4l2_subdev_call(dev->terminal_sensor,
-					       core, ioctl,
-					       RKMODULE_GET_HDR_CFG,
-					       &hdr_cfg);
-			if (!ret) {
-				dev->hdr.mode = hdr_cfg.hdr_mode;
-				dev->has_get_hdr = true;
-			}
-		}
+		ret = v4l2_subdev_call(dev->terminal_sensor,
+				       core, ioctl,
+				       RKMODULE_GET_HDR_CFG,
+				       &hdr_cfg);
+		if (!ret)
+			dev->hdr.mode = hdr_cfg.hdr_mode;
+		else
+			dev->hdr.mode = NO_HDR;
 	}
 
 	/* CIF has not scale function,
diff --git a/drivers/media/platform/rockchip/cif/dev.c b/drivers/media/platform/rockchip/cif/dev.c
index c7b0c65b7b59..80a731bf3198 100644
--- a/drivers/media/platform/rockchip/cif/dev.c
+++ b/drivers/media/platform/rockchip/cif/dev.c
@@ -1250,7 +1250,6 @@ static int rkcif_plat_probe(struct platform_device *pdev)
 	}
 
 	cif_dev->cif_regs = data->cif_regs;
-	cif_dev->has_get_hdr = false;
 	cif_dev->hdr.mode = NO_HDR;
 
 	mutex_init(&cif_dev->stream_lock);
diff --git a/drivers/media/platform/rockchip/cif/dev.h b/drivers/media/platform/rockchip/cif/dev.h
index 736fbf9cd3f6..e5148522a209 100644
--- a/drivers/media/platform/rockchip/cif/dev.h
+++ b/drivers/media/platform/rockchip/cif/dev.h
@@ -362,7 +362,6 @@ struct rkcif_device {
 	struct mutex			stream_lock; /* lock between streams */
 	enum rkcif_workmode		workmode;
 	const struct cif_reg		*cif_regs;
-	bool				has_get_hdr;
 	bool				can_be_reset;
 	struct rkcif_hdr		hdr;
 	struct rkcif_buffer		*rdbk_buf[RDBK_MAX];
-- 
2.35.3

