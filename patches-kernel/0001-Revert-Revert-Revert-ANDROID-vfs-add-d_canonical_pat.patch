From e1db199ebd9269cdad51fd41536758254f522728 Mon Sep 17 00:00:00 2001
From: Tao Huang <huangtao@rock-chips.com>
Date: Mon, 28 Dec 2020 17:34:03 +0800
Subject: [PATCH] Revert "Revert "Revert "ANDROID: vfs: add d_canonical_path
 for stacked filesystem support"""

This reverts commit f9cb1a06e3d4059b6c43c5e0fb0e7a6d7d6c3fec.

Replaced by commit 54b41388f58f ("ANDROID: vfs: add d_canonical_path for stacked filesystem support")

Signed-off-by: Tao Huang <huangtao@rock-chips.com>
---
 fs/notify/inotify/inotify_user.c | 15 ++-------------
 include/linux/dcache.h           |  2 +-
 include/linux/fsnotify.h         |  7 -------
 3 files changed, 3 insertions(+), 21 deletions(-)

diff --git a/fs/notify/inotify/inotify_user.c b/fs/notify/inotify/inotify_user.c
index a415ffa73a6d..fcfc9087be7e 100644
--- a/fs/notify/inotify/inotify_user.c
+++ b/fs/notify/inotify/inotify_user.c
@@ -702,8 +702,6 @@ SYSCALL_DEFINE3(inotify_add_watch, int, fd, const char __user *, pathname,
 	struct fsnotify_group *group;
 	struct inode *inode;
 	struct path path;
-	struct path alteredpath;
-	struct path *canonical_path = &path;
 	struct fd f;
 	int ret;
 	unsigned flags = 0;
@@ -749,22 +747,13 @@ SYSCALL_DEFINE3(inotify_add_watch, int, fd, const char __user *, pathname,
 	if (ret)
 		goto fput_and_out;
 
-	/* support stacked filesystems */
-	if(path.dentry && path.dentry->d_op) {
-		if (path.dentry->d_op->d_canonical_path) {
-			path.dentry->d_op->d_canonical_path(&path, &alteredpath);
-			canonical_path = &alteredpath;
-			path_put(&path);
-		}
-	}
-
 	/* inode held in place by reference to path; group by fget on fd */
-	inode = canonical_path->dentry->d_inode;
+	inode = path.dentry->d_inode;
 	group = f.file->private_data;
 
 	/* create/update an inode mark */
 	ret = inotify_update_watch(group, inode, mask);
-	path_put(canonical_path);
+	path_put(&path);
 fput_and_out:
 	fdput(f);
 	return ret;
diff --git a/include/linux/dcache.h b/include/linux/dcache.h
index 45b20e0d6f77..1c6bb25a8501 100644
--- a/include/linux/dcache.h
+++ b/include/linux/dcache.h
@@ -150,7 +150,7 @@ struct dentry_operations {
 	struct vfsmount *(*d_automount)(struct path *);
 	int (*d_manage)(const struct path *, bool);
 	struct dentry *(*d_real)(struct dentry *, const struct inode *);
-	void (*d_canonical_path)(const struct path *, struct path *);
+
 	ANDROID_KABI_RESERVE(1);
 	ANDROID_KABI_RESERVE(2);
 	ANDROID_KABI_RESERVE(3);
diff --git a/include/linux/fsnotify.h b/include/linux/fsnotify.h
index 61b72519f2f2..fd1ce10553bf 100644
--- a/include/linux/fsnotify.h
+++ b/include/linux/fsnotify.h
@@ -210,19 +210,12 @@ static inline void fsnotify_modify(struct file *file)
 static inline void fsnotify_open(struct file *file)
 {
 	const struct path *path = &file->f_path;
-	struct path lower_path;
 	struct inode *inode = file_inode(file);
 	__u32 mask = FS_OPEN;
 
 	if (S_ISDIR(inode->i_mode))
 		mask |= FS_ISDIR;
 
-	if (path->dentry->d_op && path->dentry->d_op->d_canonical_path) {
-		path->dentry->d_op->d_canonical_path(path, &lower_path);
-		fsnotify_parent(&lower_path, NULL, mask);
-		fsnotify(lower_path.dentry->d_inode, mask, &lower_path, FSNOTIFY_EVENT_PATH, NULL, 0);
-		path_put(&lower_path);
-	}
 	fsnotify_parent(path, NULL, mask);
 	fsnotify(inode, mask, path, FSNOTIFY_EVENT_PATH, NULL, 0);
 }
-- 
2.35.3

