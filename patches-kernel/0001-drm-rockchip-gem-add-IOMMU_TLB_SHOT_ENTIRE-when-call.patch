From 7636d59e283c11fd11acb6852639fc35e18f33ea Mon Sep 17 00:00:00 2001
From: Simon Xue <xxm@rock-chips.com>
Date: Tue, 25 Feb 2020 14:25:03 +0800
Subject: [PATCH] drm/rockchip: gem: add IOMMU_TLB_SHOT_ENTIRE when call
 iommu_map_sg

Add IOMMU_TLB_SHOT_ENTIRE prot for iommu_map_sg, this shoot down entire
iommu tlb one time after iommu_map_sg.This may save about 5ms when DRM
mapping 12MB buffer.

Change-Id: I618aff1b3928bd1ec1dd3d896db746e09e96acdc
Signed-off-by: Simon Xue <xxm@rock-chips.com>
---
 drivers/gpu/drm/rockchip/rockchip_drm_gem.c | 2 +-
 drivers/iommu/iommu.c                       | 3 +++
 drivers/iommu/rockchip-iommu.c              | 5 ++++-
 include/linux/iommu.h                       | 3 +++
 4 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/rockchip/rockchip_drm_gem.c b/drivers/gpu/drm/rockchip/rockchip_drm_gem.c
index 622ac6ae4d4c..dbd08eb94fd6 100644
--- a/drivers/gpu/drm/rockchip/rockchip_drm_gem.c
+++ b/drivers/gpu/drm/rockchip/rockchip_drm_gem.c
@@ -37,7 +37,7 @@ static int rockchip_gem_iommu_map(struct rockchip_gem_object *rk_obj)
 {
 	struct drm_device *drm = rk_obj->base.dev;
 	struct rockchip_drm_private *private = drm->dev_private;
-	int prot = IOMMU_READ | IOMMU_WRITE;
+	int prot = IOMMU_READ | IOMMU_WRITE | IOMMU_TLB_SHOT_ENTIRE;
 	ssize_t ret;
 
 	mutex_lock(&private->mm_lock);
diff --git a/drivers/iommu/iommu.c b/drivers/iommu/iommu.c
index 3dd56f149178..88cad7db1bf2 100644
--- a/drivers/iommu/iommu.c
+++ b/drivers/iommu/iommu.c
@@ -1717,6 +1717,9 @@ size_t iommu_map_sg(struct iommu_domain *domain, unsigned long iova,
 		mapped += s->length;
 	}
 
+	if (domain->ops->flush_iotlb_all && (prot & IOMMU_TLB_SHOT_ENTIRE))
+		domain->ops->flush_iotlb_all(domain);
+
 	return mapped;
 
 out_err:
diff --git a/drivers/iommu/rockchip-iommu.c b/drivers/iommu/rockchip-iommu.c
index 2747dffe69c9..d5e52aabb8b0 100644
--- a/drivers/iommu/rockchip-iommu.c
+++ b/drivers/iommu/rockchip-iommu.c
@@ -771,7 +771,10 @@ static int rk_iommu_map_iova(struct rk_iommu_domain *rk_domain, u32 *pte_addr,
 	 * We only zap the first and last iova, since only they could have
 	 * dte or pte shared with an existing mapping.
 	 */
-	rk_iommu_zap_iova_first_last(rk_domain, iova, size);
+
+	/* Do not zap tlb cache line if IOMMU_TLB_SHOT_ENTIRE set */
+	if (!(prot & IOMMU_TLB_SHOT_ENTIRE))
+		rk_iommu_zap_iova_first_last(rk_domain, iova, size);
 
 	return 0;
 unwind:
diff --git a/include/linux/iommu.h b/include/linux/iommu.h
index 87994c265bf5..f76d47368d78 100644
--- a/include/linux/iommu.h
+++ b/include/linux/iommu.h
@@ -42,6 +42,9 @@
  */
 #define IOMMU_PRIV	(1 << 5)
 
+/* For shoting entire IOMMU tlb once */
+#define IOMMU_TLB_SHOT_ENTIRE	(1 << 6)
+
 struct iommu_ops;
 struct iommu_group;
 struct bus_type;
-- 
2.35.3

