From e56fd17b3fcf7e03de1497616fa2ca9c7ad91b05 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E9=BB=84=E6=B6=9B?= <huangtao@rock-chips.com>
Date: Wed, 26 Mar 2014 15:50:52 +0800
Subject: [PATCH] ARM: rockchip: cpufreq remove loops_per_jiffy adjust

---
 drivers/cpufreq/rockchip-cpufreq.c | 15 +--------------
 1 file changed, 1 insertion(+), 14 deletions(-)

diff --git a/drivers/cpufreq/rockchip-cpufreq.c b/drivers/cpufreq/rockchip-cpufreq.c
index 0f1eac489881..191068d63079 100644
--- a/drivers/cpufreq/rockchip-cpufreq.c
+++ b/drivers/cpufreq/rockchip-cpufreq.c
@@ -326,7 +326,6 @@ static int cpufreq_verify(struct cpufreq_policy *policy)
 
 static int cpufreq_scale_rate_for_dvfs(struct clk *clk, unsigned long rate)
 {
-	unsigned int i;
 	int ret;
 	struct cpufreq_freqs freqs;
 	struct cpufreq_policy *policy;
@@ -344,17 +343,6 @@ static int cpufreq_scale_rate_for_dvfs(struct clk *clk, unsigned long rate)
 	
 	ret = clk_set_rate(clk, rate);
 
-#ifdef CONFIG_SMP
-	/*
-	 * Note that loops_per_jiffy is not updated on SMP systems in
-	 * cpufreq driver. So, update the per-CPU loops_per_jiffy value
-	 * on frequency transition. We need to update all dependent CPUs.
-	 */
-	for_each_possible_cpu(i) {
-		per_cpu(cpu_data, i).loops_per_jiffy = loops_per_jiffy;
-	}
-#endif
-
 	freqs.new = clk_get_rate(clk) / 1000;
 	/* notifiers */
 	for_each_online_cpu(freqs.cpu) {
@@ -470,8 +458,7 @@ static struct freq_attr *cpufreq_attr[] = {
 	NULL,
 };
 
-//#ifdef CONFIG_POWER_SUPPLY
-#if 0
+#ifdef CONFIG_CHARGER_DISPLAY
 extern int rk_get_system_battery_capacity(void);
 #else
 static int rk_get_system_battery_capacity(void) { return 100; }
-- 
2.35.3

