From e08c2aee064a3d3f1a6174fec3fa7bf449cfab5b Mon Sep 17 00:00:00 2001
From: Jon Lin <jon.lin@rock-chips.com>
Date: Mon, 11 Mar 2019 17:12:13 +0800
Subject: [PATCH] drivers: rkflash: reduce print tag

Warning awaits elimination, it's normal.
[   14.568343] g_gc_superblock_free 260 40 0 2f 2f
[   14.597317] lpa=c779, ppa=130000
[   14.921319] g_gc_superblock_free 1ee 40 0 3 3

Change-Id: I4b3721310fcd833152ff8a7576c997b2202bc4f0
Signed-off-by: Jon Lin <jon.lin@rock-chips.com>
---
 drivers/rkflash/rk_sftl_arm_v7.S       | 1267 +++++++++++------------
 drivers/rkflash/rk_sftl_arm_v7_thumb.S | 1312 ++++++++++++------------
 drivers/rkflash/rk_sftl_arm_v8.S       | 1113 ++++++++++----------
 3 files changed, 1821 insertions(+), 1871 deletions(-)

diff --git a/drivers/rkflash/rk_sftl_arm_v7.S b/drivers/rkflash/rk_sftl_arm_v7.S
index e8f58318b4e4..c4115a947c38 100644
--- a/drivers/rkflash/rk_sftl_arm_v7.S
+++ b/drivers/rkflash/rk_sftl_arm_v7.S
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0 */
 
 /* Copyright (c) 2018 Rockchip Electronics Co. Ltd.
- * date: 2019-02-20
+ * date: 2019-03-11
  */
 	.file	"rk_sftl.c"
 	.global	__udivsi3
@@ -10721,7 +10721,7 @@ rk_ftl_garbage_collect:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
 	sub	fp, ip, #4
 	sub	sp, sp, #40
-	ldr	r3, .L1662
+	ldr	r3, .L1663
 	str	r0, [fp, #-64]
 	ldr	r0, [r3, #3276]
 	mov	r4, r3
@@ -10732,7 +10732,7 @@ rk_ftl_garbage_collect:
 	ldrh	r2, [r3, r2]
 	cmp	r2, #47
 	bls	.L1534
-	ldr	r2, .L1662+4
+	ldr	r2, .L1663+4
 	ldrh	r1, [r2, #4]
 	movw	r2, #65535
 	cmp	r1, r2
@@ -10767,7 +10767,7 @@ rk_ftl_garbage_collect:
 	cmp	r3, r2
 	movls	r6, r5
 	bls	.L1540
-	ldr	r3, .L1662+8
+	ldr	r3, .L1663+8
 	mov	r8, #0
 	str	r8, [r4, #3160]
 	strh	r8, [r3]	@ movhi
@@ -10838,7 +10838,7 @@ rk_ftl_garbage_collect:
 	ldrh	r1, [r4, #226]
 	cmp	r1, r3
 	bne	.L1554
-	ldr	r3, .L1662+8
+	ldr	r3, .L1663+8
 	ldrh	r0, [r3]
 	cmp	r0, #0
 	bne	.L1555
@@ -10847,14 +10847,14 @@ rk_ftl_garbage_collect:
 	add	r3, r3, r3, lsl #1
 	cmp	r1, r3, lsr #2
 	movcs	r3, #18
-	bcs	.L1655
+	bcs	.L1656
 .L1555:
-	ldr	r3, .L1662+12
+	ldr	r3, .L1663+12
 	movw	r2, #3156
 	ldrh	r3, [r3]
 	add	r3, r3, r3, lsl #1
 	asr	r3, r3, #2
-.L1655:
+.L1656:
 	strh	r3, [r4, r2]	@ movhi
 	mov	r3, #0
 	str	r3, [r4, #3168]
@@ -10880,12 +10880,12 @@ rk_ftl_garbage_collect:
 	b	.L1538
 .L1546:
 	mov	r3, #64
-.L1654:
+.L1655:
 	strh	r3, [r4, r7]	@ movhi
 	b	.L1545
 .L1543:
 	mov	r3, #80
-	b	.L1654
+	b	.L1655
 .L1542:
 	movw	r0, #3156
 	ldr	r3, [r4, #76]
@@ -10897,13 +10897,13 @@ rk_ftl_garbage_collect:
 	str	r0, [sp, #4]
 	ldr	r0, [r4, #2540]
 	ldrh	r1, [r0, r1]
-	ldr	r0, .L1662+16
+	ldr	r0, .L1663+16
 	str	r1, [sp]
 	mov	r1, r5
 	bl	sftl_printk
 	b	.L1545
 .L1554:
-	ldr	r3, .L1662+12
+	ldr	r3, .L1663+12
 	movw	r2, #3156
 	ldrh	r3, [r3]
 	add	r3, r3, r3, lsl #1
@@ -10952,7 +10952,7 @@ rk_ftl_garbage_collect:
 	ldrh	r2, [r4, #176]
 	cmp	r2, r3
 	beq	.L1568
-	ldr	r0, .L1662+20
+	ldr	r0, .L1663+20
 	bl	make_superblock
 	mov	r3, #0
 	movw	r2, #3666
@@ -10980,14 +10980,14 @@ rk_ftl_garbage_collect:
 	mvn	r3, #0
 	strh	r3, [r4, #176]	@ movhi
 .L1575:
-	ldr	r4, .L1662
+	ldr	r4, .L1663
 	mov	r7, r4
-.L1609:
+.L1610:
 	ldrh	r2, [r4, #176]
 	movw	r3, #65535
 	cmp	r2, r3
 	bne	.L1576
-	ldr	r10, .L1662+24
+	ldr	r10, .L1663+24
 	mov	r3, #0
 	str	r3, [r4, #3168]
 	mov	r9, r10
@@ -11007,19 +11007,19 @@ rk_ftl_garbage_collect:
 .L1548:
 	ldrh	r7, [r4, #128]
 	cmp	r7, r1
-	bne	.L1623
+	bne	.L1624
 	ldrh	r1, [r4, #226]
 	cmp	r1, r7
 	movne	r3, #0
 	andeq	r3, r3, #1
 	cmp	r3, #0
-	beq	.L1623
+	beq	.L1624
 	ldrh	r3, [r4, #176]
 	cmp	r3, r7
 	beq	.L1560
 .L1565:
 	mov	r6, r7
-.L1623:
+.L1624:
 	mov	r5, #1
 	b	.L1559
 .L1560:
@@ -11027,7 +11027,7 @@ rk_ftl_garbage_collect:
 	movw	r2, #3156
 	ldrh	r1, [r4, #228]
 	ldrh	r3, [r4, r2]
-	ldr	r5, .L1662+8
+	ldr	r5, .L1663+8
 	cmp	r1, r3
 	bls	.L1561
 	ldrh	r3, [r5]
@@ -11038,14 +11038,14 @@ rk_ftl_garbage_collect:
 	add	r3, r3, r3, lsl #1
 	cmp	r1, r3, lsr #2
 	movcs	r3, #18
-	bcs	.L1656
+	bcs	.L1657
 .L1562:
-	ldr	r3, .L1662+12
+	ldr	r3, .L1663+12
 	movw	r2, #3156
 	ldrh	r3, [r3]
 	add	r3, r3, r3, lsl #1
 	asr	r3, r3, #2
-.L1656:
+.L1657:
 	strh	r3, [r4, r2]	@ movhi
 	bl	FtlReadRefresh
 	mov	r0, #0
@@ -11056,14 +11056,14 @@ rk_ftl_garbage_collect:
 	ldrh	r3, [r3, r0]
 	cmp	r3, #4
 	bls	.L1561
-.L1659:
+.L1660:
 	ldrh	r0, [r5]
 	b	.L1534
 .L1561:
 	ldrh	r0, [r5]
 	cmp	r0, #0
 	bne	.L1565
-	ldr	r3, .L1662+12
+	ldr	r3, .L1663+12
 	movw	r2, #3156
 	ldrh	r6, [r3]
 	add	r3, r6, r6, lsl #1
@@ -11074,7 +11074,7 @@ rk_ftl_garbage_collect:
 	ldr	r3, [r4, #76]
 	lsl	r0, r0, #1
 	ldrh	r2, [r3, r0]
-	ldr	r3, .L1662+28
+	ldr	r3, .L1663+28
 	ldrh	r1, [r3]
 	ldrh	r3, [r4, #236]
 	mul	r3, r3, r1
@@ -11086,7 +11086,7 @@ rk_ftl_garbage_collect:
 	cmp	r3, r6
 	blt	.L1566
 	bl	FtlReadRefresh
-	b	.L1659
+	b	.L1660
 .L1566:
 	cmp	r2, #0
 	bne	.L1565
@@ -11108,7 +11108,7 @@ rk_ftl_garbage_collect:
 	strhne	r8, [r10]	@ movhi
 	bne	.L1577
 	lsl	r0, r3, #1
-	ldr	r3, .L1662+32
+	ldr	r3, .L1663+32
 	ldrh	lr, [r7, #236]
 	uxth	r8, r8
 	ldr	r1, [r7, #76]
@@ -11119,10 +11119,10 @@ rk_ftl_garbage_collect:
 	add	lr, r3, r3, lsr #31
 	cmp	ip, lr, asr #1
 	bgt	.L1581
-	cmp	ip, #8
-	cmphi	r8, #48
+	cmp	r8, #48
+	cmphi	ip, #8
 	bls	.L1582
-	ldr	ip, .L1662+36
+	ldr	ip, .L1663+36
 	ldrh	ip, [ip]
 	cmp	ip, #35
 	bhi	.L1582
@@ -11142,9 +11142,9 @@ rk_ftl_garbage_collect:
 	strh	r3, [r7, #176]	@ movhi
 	mov	r3, #0
 	strh	r3, [r9]	@ movhi
-.L1661:
-	ldr	r3, .L1662+8
-	b	.L1660
+.L1662:
+	ldr	r3, .L1663+8
+	b	.L1661
 .L1583:
 	cmp	r1, #0
 	bne	.L1584
@@ -11161,8 +11161,8 @@ rk_ftl_garbage_collect:
 	cmp	r3, r2
 	bne	.L1585
 	movw	r2, #717
-	ldr	r1, .L1662+40
-	ldr	r0, .L1662+44
+	ldr	r1, .L1663+40
+	ldr	r0, .L1663+44
 	bl	sftl_printk
 .L1585:
 	ldrh	r2, [r7, #176]
@@ -11170,8 +11170,8 @@ rk_ftl_garbage_collect:
 	cmp	r2, r3
 	bne	.L1586
 	movw	r2, #718
-	ldr	r1, .L1662+40
-	ldr	r0, .L1662+44
+	ldr	r1, .L1663+40
+	ldr	r0, .L1663+44
 	bl	sftl_printk
 .L1586:
 	ldrh	r2, [r7, #176]
@@ -11179,15 +11179,15 @@ rk_ftl_garbage_collect:
 	cmp	r2, r3
 	bne	.L1587
 	movw	r2, #719
-	ldr	r1, .L1662+40
-	ldr	r0, .L1662+44
+	ldr	r1, .L1663+40
+	ldr	r0, .L1663+44
 	bl	sftl_printk
 .L1587:
-	ldr	r0, .L1662+20
+	ldr	r0, .L1663+20
 	bl	make_superblock
 	ldrh	r2, [r7, #176]
 	mov	r3, #0
-	ldr	r1, .L1662+48
+	ldr	r1, .L1663+48
 	ldr	r0, [r7, #76]
 	lsl	r2, r2, #1
 	strh	r3, [r1]	@ movhi
@@ -11198,7 +11198,7 @@ rk_ftl_garbage_collect:
 .L1576:
 	mov	r3, #1
 	str	r3, [r7, #3276]
-	ldr	r3, .L1662+32
+	ldr	r3, .L1663+32
 	ldrh	r3, [r3]
 	str	r3, [fp, #-52]
 	ldr	r3, [fp, #-64]
@@ -11226,7 +11226,7 @@ rk_ftl_garbage_collect:
 	subgt	r5, r2, r3
 	mov	r3, #0
 	uxthgt	r5, r5
-.L1658:
+.L1659:
 	str	r3, [fp, #-60]
 	ldrh	r3, [fp, #-60]
 	cmp	r5, r3
@@ -11238,7 +11238,7 @@ rk_ftl_garbage_collect:
 	ldr	r0, [r4, #3188]
 	add	r1, r1, r3
 	mov	r3, #0
-	ldr	ip, .L1662+52
+	ldr	ip, .L1663+52
 	mov	r8, r3
 	b	.L1599
 .L1592:
@@ -11259,13 +11259,13 @@ rk_ftl_garbage_collect:
 	mov	r1, r8
 	bl	FlashReadPages
 	mov	r3, #0
-.L1657:
+.L1658:
 	str	r3, [fp, #-56]
 	ldrh	r3, [fp, #-56]
 	cmp	r8, r3
 	ldrls	r3, [fp, #-60]
 	addls	r3, r3, #1
-	bls	.L1658
+	bls	.L1659
 .L1597:
 	ldr	r3, [fp, #-56]
 	mov	r9, #20
@@ -11284,8 +11284,8 @@ rk_ftl_garbage_collect:
 	cmn	ip, #1
 	bne	.L1595
 	movw	r2, #753
-	ldr	r1, .L1662+40
-	ldr	r0, .L1662+44
+	ldr	r1, .L1663+40
+	ldr	r0, .L1663+44
 	str	ip, [fp, #-68]
 	bl	sftl_printk
 	ldr	ip, [fp, #-68]
@@ -11300,7 +11300,7 @@ rk_ftl_garbage_collect:
 	ldr	r0, [r2, #4]
 	cmp	r0, r1
 	bne	.L1594
-	ldr	r3, .L1662+48
+	ldr	r3, .L1663+48
 	mov	ip, #20
 	ldr	r0, [r4, #3172]
 	ldr	r2, [r2, #16]
@@ -11349,20 +11349,20 @@ rk_ftl_garbage_collect:
 	bl	Ftl_gc_temp_data_write_back
 	cmp	r0, #0
 	beq	.L1594
-	ldr	r3, .L1662
+	ldr	r3, .L1663
 	mov	r2, #0
 	mvn	r1, #0
 	str	r2, [r3, #3276]
 	strh	r1, [r3, #176]	@ movhi
 	strh	r2, [r3, #178]	@ movhi
 	add	r3, r3, #3664
-.L1660:
+.L1661:
 	ldrh	r0, [r3]
 	b	.L1534
 .L1594:
 	ldr	r3, [fp, #-56]
 	add	r3, r3, #1
-	b	.L1657
+	b	.L1658
 .L1598:
 	ldrh	r3, [r4, #178]
 	add	r5, r5, r3
@@ -11378,46 +11378,35 @@ rk_ftl_garbage_collect:
 	cmp	r0, #0
 	movne	r3, #0
 	strne	r3, [r4, #3276]
-	bne	.L1661
+	bne	.L1662
 .L1601:
-	ldr	r0, .L1662+48
-	ldrh	r5, [r0]
+	ldr	r3, .L1663+48
+	ldrh	r5, [r3]
 	cmp	r5, #0
 	bne	.L1602
-	ldrh	r1, [r4, #176]
+	ldrh	r3, [r4, #176]
 	ldr	r2, [r4, #76]
-	lsl	r3, r1, #1
+	lsl	r3, r3, #1
 	ldrh	r3, [r2, r3]
 	cmp	r3, #0
 	beq	.L1602
-	ldrh	r0, [r0, #2]
-	ldrh	r2, [r4, #178]
-	str	r3, [sp]
-	mov	r3, r5
-	str	r0, [sp, #4]
-	ldr	r0, .L1662+56
-	bl	sftl_printk
 .L1603:
 	ldr	r3, [r4, #2556]
 	cmp	r5, r3
-	bcs	.L1605
+	bcs	.L1608
 	mov	r2, #0
 	sub	r1, fp, #44
 	mov	r0, r5
 	bl	log2phys
-	ldr	r8, [fp, #-44]
-	cmn	r8, #1
+	ldr	r0, [fp, #-44]
+	cmn	r0, #1
 	beq	.L1604
-	ubfx	r0, r8, #10, #16
+	ubfx	r0, r0, #10, #16
 	bl	P2V_block_in_plane
 	ldrh	r3, [r4, #176]
 	cmp	r3, r0
 	bne	.L1604
-	mov	r2, r8
-	mov	r1, r5
-	ldr	r0, .L1662+60
-	bl	sftl_printk
-.L1605:
+.L1608:
 	ldr	r3, [r4, #2556]
 	cmp	r5, r3
 	bcc	.L1602
@@ -11438,22 +11427,22 @@ rk_ftl_garbage_collect:
 	str	r3, [r4, #3276]
 	ldrh	r3, [r4, #228]
 	cmp	r3, #2
-	bhi	.L1608
-	ldr	r3, .L1662+32
+	bhi	.L1609
+	ldr	r3, .L1663+32
 	ldrh	r5, [r3]
-	b	.L1609
+	b	.L1610
 .L1604:
 	add	r5, r5, #1
 	b	.L1603
-.L1608:
-	ldr	r2, .L1662+8
+.L1609:
+	ldr	r2, .L1663+8
 	ldrh	r0, [r2]
 	cmp	r0, #0
 	addeq	r0, r3, #1
 	b	.L1534
-.L1663:
+.L1664:
 	.align	2
-.L1662:
+.L1663:
 	.word	.LANCHOR0
 	.word	.LANCHOR2
 	.word	.LANCHOR0+3664
@@ -11468,8 +11457,6 @@ rk_ftl_garbage_collect:
 	.word	.LC8
 	.word	.LANCHOR0+3666
 	.word	.LANCHOR0+190
-	.word	.LC125
-	.word	.LC126
 	.size	rk_ftl_garbage_collect, .-rk_ftl_garbage_collect
 	.align	2
 	.global	FtlRead
@@ -11489,19 +11476,19 @@ FtlRead:
 	str	r2, [fp, #-52]
 	cmp	r0, #16
 	mov	r9, r3
-	bne	.L1665
+	bne	.L1666
 	mov	r2, r3
 	ldr	r1, [fp, #-52]
 	add	r0, r6, #256
 	bl	FtlVendorPartRead
 	str	r0, [fp, #-48]
-.L1664:
+.L1665:
 	ldr	r0, [fp, #-48]
 	sub	sp, fp, #40
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.L1665:
+.L1666:
 	ldr	r3, [fp, #-52]
-	ldr	r10, .L1700
+	ldr	r10, .L1701
 	add	r3, r1, r3
 	str	r3, [fp, #-60]
 	ldr	r2, [fp, #-60]
@@ -11509,12 +11496,12 @@ FtlRead:
 	cmp	r2, r3
 	mvnhi	r3, #0
 	strhi	r3, [fp, #-48]
-	bhi	.L1664
-	ldr	r3, .L1700+4
+	bhi	.L1665
+	ldr	r3, .L1701+4
 	ldr	r7, [r3]
 	cmn	r7, #1
 	streq	r7, [fp, #-48]
-	beq	.L1664
+	beq	.L1665
 	movw	r3, #262
 	mov	r0, r6
 	ldrh	r4, [r10, r3]
@@ -11545,24 +11532,24 @@ FtlRead:
 	ldr	r3, [r10, #2560]
 	add	r3, r3, r2
 	str	r3, [r10, #2560]
-.L1667:
+.L1668:
 	ldr	r3, [fp, #-56]
 	cmp	r3, #0
-	bne	.L1684
-	ldr	r3, .L1700
+	bne	.L1685
+	ldr	r3, .L1701
 	movw	r2, #3210
 	ldrh	r2, [r3, r2]
 	cmp	r2, #0
-	bne	.L1685
+	bne	.L1686
 	ldrh	r3, [r3, #228]
 	cmp	r3, #31
-	bhi	.L1664
-.L1685:
+	bhi	.L1665
+.L1686:
 	mov	r1, #1
 	mov	r0, #0
 	bl	rk_ftl_garbage_collect
-	b	.L1664
-.L1684:
+	b	.L1665
+.L1685:
 	mov	r2, #0
 	sub	r1, fp, #44
 	mov	r0, r4
@@ -11570,16 +11557,16 @@ FtlRead:
 	ldr	r2, [fp, #-44]
 	cmn	r2, #1
 	moveq	r10, #0
-	ldreq	r2, .L1700+8
-	beq	.L1669
+	ldreq	r2, .L1701+8
+	beq	.L1670
 	ldr	r1, [r7, #3292]
 	mov	r10, #20
 	ldr	r3, [fp, #-64]
 	mla	r10, r10, r5, r1
 	cmp	r4, r3
 	str	r2, [r10, #4]
-	ldr	r2, .L1700+8
-	bne	.L1673
+	ldr	r2, .L1701+8
+	bne	.L1674
 	ldrh	r2, [r2]
 	mov	r0, r6
 	ldr	r1, [r7, #3316]
@@ -11596,8 +11583,8 @@ FtlRead:
 	cmp	r3, r2
 	str	r3, [fp, #-76]
 	streq	r9, [r10, #8]
-.L1674:
-	ldr	r3, .L1700+12
+.L1675:
+	ldr	r3, .L1701+12
 	ldr	r1, [r7, #3340]
 	str	r4, [r10, #16]
 	ldrh	r2, [r3]
@@ -11606,8 +11593,8 @@ FtlRead:
 	bic	r2, r2, #3
 	add	r2, r1, r2
 	str	r2, [r10, #12]
-	b	.L1672
-.L1671:
+	b	.L1673
+.L1672:
 	mla	r0, r0, r4, r10
 	ldr	r1, [fp, #-60]
 	cmp	r1, r0
@@ -11616,31 +11603,31 @@ FtlRead:
 	cmp	r6, r0
 	movhi	r1, #0
 	cmp	r1, #0
-	beq	.L1670
+	beq	.L1671
 	sub	r0, r0, r6
 	mov	r1, #512
 	add	r0, r9, r0, lsl #9
 	str	r2, [fp, #-80]
 	bl	__memzero
 	ldr	r2, [fp, #-80]
-.L1670:
+.L1671:
 	add	r10, r10, #1
-.L1669:
+.L1670:
 	ldrh	r0, [r2]
 	cmp	r10, r0
-	bcc	.L1671
-.L1672:
+	bcc	.L1672
+.L1673:
 	ldr	r3, [fp, #-56]
 	add	r4, r4, #1
 	subs	r3, r3, #1
 	str	r3, [fp, #-56]
-	beq	.L1676
+	beq	.L1677
 	ldrh	r2, [r7, #236]
 	cmp	r5, r2, lsl #2
-	bne	.L1667
-.L1676:
+	bne	.L1668
+.L1677:
 	cmp	r5, #0
-	beq	.L1667
+	beq	.L1668
 	mov	r2, #0
 	mov	r1, r5
 	ldr	r0, [r7, #3292]
@@ -11654,7 +11641,7 @@ FtlRead:
 	ldr	r3, [fp, #-76]
 	lsl	r3, r3, #9
 	str	r3, [fp, #-84]
-.L1683:
+.L1684:
 	mov	ip, #20
 	ldr	r2, [r7, #3292]
 	mul	ip, ip, r10
@@ -11662,20 +11649,20 @@ FtlRead:
 	add	r2, r2, ip
 	ldr	r1, [r2, #16]
 	cmp	r3, r1
-	bne	.L1678
+	bne	.L1679
 	ldr	r1, [r2, #8]
 	ldr	r2, [r7, #3316]
 	cmp	r1, r2
-	bne	.L1679
+	bne	.L1680
 	ldr	r3, [fp, #-80]
 	mov	r0, r9
 	ldr	r2, [fp, #-84]
 	str	ip, [fp, #-92]
 	add	r1, r1, r3
-.L1699:
+.L1700:
 	bl	ftl_memcpy
 	ldr	ip, [fp, #-92]
-.L1679:
+.L1680:
 	ldr	r1, [r7, #3292]
 	add	r2, r1, ip
 	ldr	r0, [r2, #12]
@@ -11693,23 +11680,23 @@ FtlRead:
 	streq	r0, [r7, #2716]
 	ldr	r1, [r1, ip]
 	cmp	r1, #256
-	bne	.L1682
+	bne	.L1683
 	ldr	r0, [r2, #4]
 	ubfx	r0, r0, #10, #16
 	bl	P2V_block_in_plane
 	bl	FtlGcRefreshBlock
-.L1682:
+.L1683:
 	add	r10, r10, #1
 	cmp	r5, r10
-	bne	.L1683
+	bne	.L1684
 	mov	r5, #0
-	b	.L1667
-.L1673:
+	b	.L1668
+.L1674:
 	ldr	r3, [fp, #-68]
 	cmp	r4, r3
 	ldrhne	r2, [r2]
 	mulne	r2, r4, r2
-	bne	.L1698
+	bne	.L1699
 	ldr	r1, [r7, #3320]
 	ldr	r3, [fp, #-60]
 	str	r1, [r10, #8]
@@ -11717,31 +11704,31 @@ FtlRead:
 	mul	r2, r1, r4
 	sub	r8, r3, r2
 	cmp	r1, r8
-	bne	.L1674
-.L1698:
+	bne	.L1675
+.L1699:
 	sub	r2, r2, r6
 	add	r2, r9, r2, lsl #9
 	str	r2, [r10, #8]
-	b	.L1674
-.L1678:
+	b	.L1675
+.L1679:
 	ldr	r3, [fp, #-68]
 	cmp	r3, r1
-	bne	.L1679
+	bne	.L1680
 	ldr	r1, [r2, #8]
 	ldr	r2, [r7, #3320]
 	cmp	r1, r2
-	bne	.L1679
-	ldr	r2, .L1700+8
+	bne	.L1680
+	ldr	r2, .L1701+8
 	str	ip, [fp, #-92]
 	ldrh	r0, [r2]
 	ldr	r2, [fp, #-88]
 	mul	r0, r3, r0
 	sub	r0, r0, r6
 	add	r0, r9, r0, lsl #9
-	b	.L1699
-.L1701:
+	b	.L1700
+.L1702:
 	.align	2
-.L1700:
+.L1701:
 	.word	.LANCHOR0
 	.word	.LANCHOR2
 	.word	.LANCHOR0+262
@@ -11803,26 +11790,26 @@ FtlWrite:
 	str	r2, [fp, #-80]
 	cmp	r0, #16
 	str	r3, [fp, #-84]
-	bne	.L1705
+	bne	.L1706
 	mov	r2, r3
 	ldr	r1, [fp, #-80]
 	add	r0, r9, #256
 	bl	FtlVendorPartWrite
-.L1704:
+.L1705:
 	sub	sp, fp, #40
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.L1705:
+.L1706:
 	ldr	r3, [fp, #-80]
-	ldr	r4, .L1756
+	ldr	r4, .L1757
 	add	r6, r1, r3
 	ldr	r3, [r4, #344]
 	cmp	r6, r3
 	mvnhi	r0, #0
-	bhi	.L1704
-	ldr	r5, .L1756+4
+	bhi	.L1705
+	ldr	r5, .L1757+4
 	ldr	r0, [r5]
 	cmn	r0, #1
-	beq	.L1704
+	beq	.L1705
 	mov	r3, #2048
 	mov	r0, r9
 	str	r3, [r4, #3672]
@@ -11851,67 +11838,67 @@ FtlWrite:
 	ldr	r3, [r5, #8]
 	cmp	r3, #0
 	addeq	r4, r4, #28
-	beq	.L1707
+	beq	.L1708
 	ldrh	r3, [r4, #32]
 	cmp	r3, #0
 	addne	r4, r4, #28
 	addeq	r4, r4, #80
-.L1707:
-	ldr	r6, [fp, #-76]
-	ldr	r10, .L1756
 .L1708:
+	ldr	r6, [fp, #-76]
+	ldr	r10, .L1757
+.L1709:
 	ldr	r3, [fp, #-72]
 	cmp	r3, #0
-	bne	.L1736
+	bne	.L1737
 	mov	r0, r3
 	ldr	r1, [fp, #-96]
 	bl	rk_ftl_garbage_collect
 	ldrh	r3, [r10, #228]
 	cmp	r3, #5
 	movls	r4, #256
-	ldrls	r5, .L1756+8
-	bls	.L1740
-.L1739:
+	ldrls	r5, .L1757+8
+	bls	.L1741
+.L1740:
 	mov	r0, #0
-	b	.L1704
-.L1736:
+	b	.L1705
+.L1737:
 	ldrb	r2, [r4, #6]	@ zero_extendqisi2
 	ldrh	r3, [r10, #236]
 	cmp	r2, r3
-	bcc	.L1709
+	bcc	.L1710
 	movw	r2, #1038
-	ldr	r1, .L1756+12
-	ldr	r0, .L1756+16
+	ldr	r1, .L1757+12
+	ldr	r0, .L1757+16
 	bl	sftl_printk
-.L1709:
+.L1710:
 	ldrh	r2, [r4, #4]
 	cmp	r2, #0
-	bne	.L1710
-	ldr	r3, .L1756+20
-	ldr	r5, .L1756+4
-	cmp	r4, r3
 	bne	.L1711
+	ldr	r3, .L1757+20
+	ldr	r5, .L1757+4
+	cmp	r4, r3
+	bne	.L1712
 	ldrh	r7, [r10, #84]
 	cmp	r7, #0
-	bne	.L1712
+	bne	.L1713
 	add	r0, r4, #52
 	bl	allocate_new_data_superblock
 	str	r7, [r5, #8]
-.L1712:
-	ldr	r0, .L1756+20
+.L1713:
+	ldr	r0, .L1757+20
 	bl	allocate_new_data_superblock
-	ldr	r4, .L1756+20
+	ldr	r4, .L1757+20
 	ldr	r2, [r5, #8]
 	add	r3, r4, #52
 	cmp	r2, #0
 	movne	r4, r3
-.L1713:
+.L1714:
 	ldrh	r3, [r4, #4]
 	cmp	r3, #0
-	bne	.L1710
+	bne	.L1711
 	mov	r0, r4
 	bl	allocate_new_data_superblock
-.L1710:
+.L1711:
 	ldrh	r3, [r4, #4]
 	ldr	r2, [fp, #-72]
 	cmp	r3, r2
@@ -11924,20 +11911,20 @@ FtlWrite:
 	str	r3, [fp, #-108]
 	ldrh	r3, [r10, #236]
 	cmp	r2, r3
-	bcc	.L1714
+	bcc	.L1715
 	movw	r2, #1071
-	ldr	r1, .L1756+12
-	ldr	r0, .L1756+16
+	ldr	r1, .L1757+12
+	ldr	r0, .L1757+16
 	bl	sftl_printk
-.L1714:
+.L1715:
 	mov	r3, #0
-.L1755:
+.L1756:
 	str	r3, [fp, #-68]
 	ldr	r3, [fp, #-68]
 	ldr	r2, [fp, #-108]
 	cmp	r3, r2
-	bne	.L1734
-.L1716:
+	bne	.L1735
+.L1717:
 	mov	r3, r4
 	mov	r2, #0
 	ldr	r1, [fp, #-68]
@@ -11946,30 +11933,30 @@ FtlWrite:
 	ldr	r3, [fp, #-68]
 	ldr	r2, [fp, #-72]
 	cmp	r3, r2
-	bls	.L1735
+	bls	.L1736
 	movw	r2, #1149
-	ldr	r1, .L1756+12
-	ldr	r0, .L1756+16
+	ldr	r1, .L1757+12
+	ldr	r0, .L1757+16
 	bl	sftl_printk
-.L1735:
+.L1736:
 	ldr	r3, [fp, #-72]
 	ldr	r2, [fp, #-68]
 	sub	r3, r3, r2
 	str	r3, [fp, #-72]
-	b	.L1708
-.L1711:
+	b	.L1709
+.L1712:
 	str	r2, [r5, #8]
 	ldrh	r2, [r10, #32]
 	cmp	r2, #0
 	movne	r4, r3
-	bne	.L1710
+	bne	.L1711
 	mov	r0, r4
 	bl	allocate_new_data_superblock
-	b	.L1713
-.L1734:
+	b	.L1714
+.L1735:
 	ldrh	r3, [r4, #4]
 	cmp	r3, #0
-	beq	.L1716
+	beq	.L1717
 	mov	r2, #0
 	sub	r1, fp, #64
 	mov	r0, r6
@@ -11977,7 +11964,7 @@ FtlWrite:
 	bl	log2phys
 	mov	r0, r4
 	bl	get_new_active_ppa
-	ldr	r2, .L1756+24
+	ldr	r2, .L1757+24
 	ldr	r1, [fp, #-68]
 	ldr	r3, [fp, #-68]
 	ldrh	r2, [r2]
@@ -12001,11 +11988,11 @@ FtlWrite:
 	ldr	r2, [fp, #-92]
 	cmp	r6, r2
 	cmpne	r6, r3
-	ldr	r3, .L1756+28
-	bne	.L1717
+	ldr	r3, .L1757+28
+	bne	.L1718
 	ldr	r2, [fp, #-76]
 	cmp	r6, r2
-	bne	.L1718
+	bne	.L1719
 	ldrh	r5, [r3]
 	mov	r0, r9
 	mov	r1, r5
@@ -12015,33 +12002,33 @@ FtlWrite:
 	str	r0, [fp, #-88]
 	cmp	r5, r3
 	movcs	r5, r3
-.L1719:
-	ldr	r3, .L1756+28
+.L1720:
+	ldr	r3, .L1757+28
 	ldrh	r3, [r3]
 	cmp	r5, r3
 	ldr	r3, [fp, #-76]
-	bne	.L1720
+	bne	.L1721
 	cmp	r6, r3
 	ldr	r3, [r10, #3300]
 	add	r7, r3, r7
 	ldreq	r3, [fp, #-84]
-	beq	.L1752
+	beq	.L1753
 	mul	r5, r5, r6
 	ldr	r3, [fp, #-84]
 	sub	r5, r5, r9
 	add	r5, r3, r5, lsl #9
 	str	r5, [r7, #8]
-.L1722:
+.L1723:
 	ldrb	r2, [r4, #6]	@ zero_extendqisi2
 	ldrh	r3, [r10, #236]
 	cmp	r2, r3
-	bcc	.L1731
+	bcc	.L1732
 	movw	r2, #1140
-	ldr	r1, .L1756+12
-	ldr	r0, .L1756+16
+	ldr	r1, .L1757+12
+	ldr	r0, .L1757+16
 	bl	sftl_printk
-.L1731:
-	ldr	r3, .L1756+32
+.L1732:
+	ldr	r3, .L1757+32
 	ldr	r2, [fp, #-104]
 	ldr	r1, [fp, #-100]
 	strh	r3, [r2, r1]	@ movhi
@@ -12059,8 +12046,8 @@ FtlWrite:
 	strh	r3, [r8, #2]	@ movhi
 	ldr	r3, [fp, #-68]
 	add	r3, r3, #1
-	b	.L1755
-.L1718:
+	b	.L1756
+.L1719:
 	ldr	r2, [fp, #-80]
 	add	r5, r9, r2
 	ldrh	r2, [r3]
@@ -12069,8 +12056,8 @@ FtlWrite:
 	smulbb	r2, r2, r6
 	sub	r5, r5, r2
 	uxth	r5, r5
-	b	.L1719
-.L1720:
+	b	.L1720
+.L1721:
 	cmp	r6, r3
 	ldr	r3, [r10, #3300]
 	ldreq	r2, [r10, #3316]
@@ -12079,7 +12066,7 @@ FtlWrite:
 	str	r2, [r3, #8]
 	ldr	r3, [fp, #-64]
 	cmn	r3, #1
-	beq	.L1725
+	beq	.L1726
 	str	r3, [fp, #-56]
 	mov	r1, #1
 	ldr	r3, [r10, #3300]
@@ -12094,59 +12081,59 @@ FtlWrite:
 	bl	FlashReadPages
 	ldr	r3, [fp, #-60]
 	cmn	r3, #1
-	bne	.L1726
+	bne	.L1727
 	ldr	r2, [r10, #2716]
-	ldr	r0, .L1756+36
+	ldr	r0, .L1757+36
 	add	r2, r2, #1
 	str	r2, [r10, #2716]
 	mov	r2, r6
 	ldr	r1, [r8, #8]
 	bl	sftl_printk
-.L1729:
+.L1730:
 	ldr	r3, [fp, #-76]
 	lsl	r2, r5, #9
 	cmp	r6, r3
-	bne	.L1730
+	bne	.L1731
 	ldr	r3, [r10, #3300]
 	ldr	r1, [fp, #-84]
 	add	r7, r3, r7
 	ldr	r3, [fp, #-88]
 	ldr	r0, [r7, #8]
 	add	r0, r0, r3, lsl #9
-.L1753:
+.L1754:
 	bl	ftl_memcpy
-	b	.L1722
-.L1726:
+	b	.L1723
+.L1727:
 	ldr	r3, [r8, #8]
 	cmp	r6, r3
-	beq	.L1728
+	beq	.L1729
 	ldr	r3, [r10, #2716]
 	mov	r2, r6
-	ldr	r0, .L1756+40
+	ldr	r0, .L1757+40
 	add	r3, r3, #1
 	str	r3, [r10, #2716]
 	ldr	r1, [r8, #8]
 	bl	sftl_printk
-.L1728:
+.L1729:
 	ldr	r3, [r8, #8]
 	cmp	r6, r3
-	beq	.L1729
+	beq	.L1730
 	movw	r2, #1125
-	ldr	r1, .L1756+12
-	ldr	r0, .L1756+16
+	ldr	r1, .L1757+12
+	ldr	r0, .L1757+16
 	bl	sftl_printk
-	b	.L1729
-.L1725:
+	b	.L1730
+.L1726:
 	ldr	r3, [r10, #3300]
 	mov	r1, #0
-	ldr	r2, .L1756+44
+	ldr	r2, .L1757+44
 	add	r3, r3, r7
 	ldrh	r2, [r2]
 	ldr	r0, [r3, #8]
 	bl	ftl_memset
-	b	.L1729
-.L1730:
-	ldr	r3, .L1756+28
+	b	.L1730
+.L1731:
+	ldr	r3, .L1757+28
 	ldrh	r1, [r3]
 	ldr	r3, [r10, #3300]
 	mul	r1, r6, r1
@@ -12155,8 +12142,8 @@ FtlWrite:
 	ldr	r0, [r7, #8]
 	sub	r1, r1, r9
 	add	r1, r3, r1, lsl #9
-	b	.L1753
-.L1717:
+	b	.L1754
+.L1718:
 	ldrh	r3, [r3]
 	ldr	r2, [r10, #3300]
 	mul	r3, r6, r3
@@ -12164,23 +12151,23 @@ FtlWrite:
 	ldr	r2, [fp, #-84]
 	sub	r3, r3, r9
 	add	r3, r2, r3, lsl #9
-.L1752:
+.L1753:
 	str	r3, [r7, #8]
-	b	.L1722
-.L1740:
+	b	.L1723
+.L1741:
 	ldrh	r3, [r10, #176]
 	movw	r2, #65535
 	cmp	r3, r2
-	bne	.L1738
+	bne	.L1739
 	ldrh	r2, [r10, #226]
 	cmp	r2, r3
-	bne	.L1738
+	bne	.L1739
 	mov	r0, #0
 	bl	List_get_gc_head_node
 	uxth	r0, r0
 	bl	FtlGcRefreshBlock
-.L1738:
-	ldr	r2, .L1756+48
+.L1739:
+	ldr	r2, .L1757+48
 	mov	r1, #1
 	mov	r3, #128
 	mov	r0, r1
@@ -12192,13 +12179,13 @@ FtlWrite:
 	bl	rk_ftl_garbage_collect
 	ldrh	r3, [r10, #228]
 	cmp	r3, #2
-	bhi	.L1739
+	bhi	.L1740
 	subs	r4, r4, #1
-	bne	.L1740
-	b	.L1739
-.L1757:
+	bne	.L1741
+	b	.L1740
+.L1758:
 	.align	2
-.L1756:
+.L1757:
 	.word	.LANCHOR0
 	.word	.LANCHOR2
 	.word	.LANCHOR0+3158
@@ -12208,8 +12195,8 @@ FtlWrite:
 	.word	.LANCHOR0+316
 	.word	.LANCHOR0+262
 	.word	-3947
-	.word	.LC127
-	.word	.LC128
+	.word	.LC125
+	.word	.LC126
 	.word	.LANCHOR0+314
 	.word	.LANCHOR0+3156
 	.size	FtlWrite, .-FtlWrite
@@ -12263,9 +12250,9 @@ FtlLoadSysInfo:
 	sub	fp, ip, #4
 	sub	sp, sp, #16
 	mov	r1, #0
-	ldr	r4, .L1790
+	ldr	r4, .L1791
 	movw	r7, #2628
-	ldr	r6, .L1790+4
+	ldr	r6, .L1791+4
 	ldr	r3, [r4, #3304]
 	ldrh	r2, [r4, #244]
 	ldr	r0, [r4, #76]
@@ -12277,41 +12264,41 @@ FtlLoadSysInfo:
 	ldrh	r0, [r4, r7]
 	movw	r3, #65535
 	cmp	r0, r3
-	bne	.L1761
-.L1772:
+	bne	.L1762
+.L1773:
 	mvn	r0, #0
-.L1760:
+.L1761:
 	sub	sp, fp, #40
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.L1761:
+.L1762:
 	mov	r1, #1
-	ldr	r9, .L1790+8
+	ldr	r9, .L1791+8
 	bl	FtlGetLastWrittenPage
 	ldrsh	r7, [r4, r7]
 	add	r8, r4, #3456
 	sxth	r5, r0
 	add	r0, r0, #1
 	strh	r0, [r6, #2]	@ movhi
-.L1763:
+.L1764:
 	cmp	r5, #0
-	bge	.L1769
+	bge	.L1770
 	movw	r2, #1465
-	ldr	r1, .L1790+12
-	ldr	r0, .L1790+16
+	ldr	r1, .L1791+12
+	ldr	r0, .L1791+16
 	bl	sftl_printk
-.L1768:
+.L1769:
 	movw	r2, #314
 	ldrh	r3, [r4, #244]
 	ldrh	r2, [r4, r2]
 	add	r3, r3, #24
 	cmp	r2, r3, lsl #1
-	bcs	.L1771
+	bcs	.L1772
 	movw	r2, #1467
-	ldr	r1, .L1790+12
-	ldr	r0, .L1790+16
+	ldr	r1, .L1791+12
+	ldr	r0, .L1791+16
 	bl	sftl_printk
-.L1771:
-	ldr	r5, .L1790+20
+.L1772:
+	ldr	r5, .L1791+20
 	mov	r2, #48
 	ldr	r1, [r4, #3464]
 	mov	r0, r5
@@ -12333,16 +12320,16 @@ FtlLoadSysInfo:
 	add	r1, r3, r1
 	bl	ftl_memcpy
 	ldr	r2, [r4, #2472]
-	ldr	r3, .L1790+8
+	ldr	r3, .L1791+8
 	cmp	r2, r3
-	bne	.L1772
+	bne	.L1773
 	movw	r3, #258
 	ldrb	r2, [r4, #2482]	@ zero_extendqisi2
 	ldrh	r3, [r4, r3]
 	ldrh	r7, [r5, #8]
 	cmp	r2, r3
 	strh	r7, [r6, #6]	@ movhi
-	bne	.L1772
+	bne	.L1773
 	movw	r3, #306
 	movw	r2, #262
 	ldrh	r3, [r4, r3]
@@ -12354,19 +12341,19 @@ FtlLoadSysInfo:
 	str	r3, [r4, #2556]
 	mul	r3, r3, r2
 	str	r3, [r4, #344]
-	ldr	r3, .L1790+24
+	ldr	r3, .L1791+24
 	ldrh	r0, [r3, #6]
 	sub	r0, r6, r0
 	sub	r0, r0, r7
 	bl	__udivsi3
 	cmp	r7, r6
 	strh	r0, [r5, #152]	@ movhi
-	bls	.L1773
+	bls	.L1774
 	movw	r2, #1489
-	ldr	r1, .L1790+12
-	ldr	r0, .L1790+16
+	ldr	r1, .L1791+12
+	ldr	r0, .L1791+16
 	bl	sftl_printk
-.L1773:
+.L1774:
 	ldrh	r3, [r5, #16]
 	ldrh	r1, [r5, #14]
 	lsr	r2, r3, #6
@@ -12419,34 +12406,34 @@ FtlLoadSysInfo:
 	strhi	r3, [r4, #2596]
 	movw	r3, #65535
 	cmp	r1, r3
-	beq	.L1776
-	ldr	r0, .L1790+28
-	bl	make_superblock
-.L1776:
-	ldrh	r2, [r4, #80]
-	movw	r3, #65535
-	cmp	r2, r3
 	beq	.L1777
-	ldr	r0, .L1790+32
+	ldr	r0, .L1791+28
 	bl	make_superblock
 .L1777:
-	ldrh	r2, [r4, #128]
+	ldrh	r2, [r4, #80]
 	movw	r3, #65535
 	cmp	r2, r3
 	beq	.L1778
-	ldr	r0, .L1790+36
+	ldr	r0, .L1791+32
 	bl	make_superblock
 .L1778:
-	ldrh	r2, [r4, #176]
+	ldrh	r2, [r4, #128]
 	movw	r3, #65535
 	cmp	r2, r3
 	beq	.L1779
-	ldr	r0, .L1790+40
+	ldr	r0, .L1791+36
 	bl	make_superblock
 .L1779:
+	ldrh	r2, [r4, #176]
+	movw	r3, #65535
+	cmp	r2, r3
+	beq	.L1780
+	ldr	r0, .L1791+40
+	bl	make_superblock
+.L1780:
 	mov	r0, #0
-	b	.L1760
-.L1769:
+	b	.L1761
+.L1770:
 	orr	r3, r5, r7, lsl #10
 	mov	r2, #1
 	mov	r1, r2
@@ -12459,56 +12446,56 @@ FtlLoadSysInfo:
 	ldr	r3, [r3, #12]
 	cmp	r3, #0
 	str	r3, [fp, #-44]
-	beq	.L1764
+	beq	.L1765
 	ldr	r2, [r4, #3456]
 	cmn	r2, #1
-	beq	.L1764
-	ldr	r10, .L1790+44
+	beq	.L1765
+	ldr	r10, .L1791+44
 	ldr	r0, [r4, #3464]
 	ldrh	r1, [r10]
 	bl	js_hash
 	ldr	r3, [fp, #-44]
 	cmp	r3, r0
-	beq	.L1764
+	beq	.L1765
 	str	r0, [sp, #8]
 	mov	r2, r7
 	str	r3, [sp, #4]
 	ldrh	r3, [r6, #4]
-	ldr	r1, .L1790+12
-	ldr	r0, .L1790+48
+	ldr	r1, .L1791+12
+	ldr	r0, .L1791+48
 	str	r3, [sp]
 	mov	r3, r5
 	bl	sftl_printk
 	cmp	r5, #0
-	bne	.L1765
+	bne	.L1766
 	ldrh	r3, [r6, #4]
 	cmp	r7, r3
 	sxthne	r7, r3
 	ldrhne	r5, [r10, #-6]
-	bne	.L1767
-.L1765:
+	bne	.L1768
+.L1766:
 	mvn	r3, #0
 	str	r3, [r4, #3456]
-.L1764:
+.L1765:
 	ldr	r3, [r4, #3456]
 	cmn	r3, #1
-	beq	.L1767
+	beq	.L1768
 	ldr	r3, [r4, #3304]
 	ldr	r3, [r3]
 	cmp	r3, r9
-	bne	.L1767
+	bne	.L1768
 	ldr	r3, [r4, #3336]
 	ldrh	r2, [r3]
 	movw	r3, #61604
 	cmp	r2, r3
-	beq	.L1768
-.L1767:
+	beq	.L1769
+.L1768:
 	sub	r5, r5, #1
 	sxth	r5, r5
-	b	.L1763
-.L1791:
+	b	.L1764
+.L1792:
 	.align	2
-.L1790:
+.L1791:
 	.word	.LANCHOR0
 	.word	.LANCHOR0+2628
 	.word	1179929683
@@ -12521,7 +12508,7 @@ FtlLoadSysInfo:
 	.word	.LANCHOR0+128
 	.word	.LANCHOR0+176
 	.word	.LANCHOR0+314
-	.word	.LC129
+	.word	.LC127
 	.size	FtlLoadSysInfo, .-FtlLoadSysInfo
 	.align	2
 	.global	FtlMapTblRecovery
@@ -12539,7 +12526,7 @@ FtlMapTblRecovery:
 	mov	r1, #0
 	ldr	r3, [r0, #24]
 	mov	r4, r0
-	ldr	r9, .L1833
+	ldr	r9, .L1834
 	mov	r7, #0
 	ldr	r8, [r0, #12]
 	str	r3, [fp, #-44]
@@ -12564,23 +12551,23 @@ FtlMapTblRecovery:
 	mov	r3, #1
 	str	r7, [r4, #28]
 	str	r3, [r4, #36]
-.L1793:
+.L1794:
 	ldr	r3, [fp, #-52]
 	sxth	r6, r7
 	cmp	r6, r3
-	bge	.L1812
+	bge	.L1813
 	ldr	r3, [fp, #-52]
 	sub	r3, r3, #1
 	cmp	r6, r3
 	lsl	r3, r6, #1
-	bne	.L1794
+	bne	.L1795
 	add	r2, r8, r3
 	ldrh	r0, [r8, r3]
 	mov	r1, #1
 	str	r2, [fp, #-52]
 	bl	FtlGetLastWrittenPage
 	sxth	r3, r0
-	ldr	r9, .L1833
+	ldr	r9, .L1834
 	add	r0, r0, #1
 	strh	r7, [r4]	@ movhi
 	str	r3, [fp, #-60]
@@ -12590,23 +12577,23 @@ FtlMapTblRecovery:
 	strh	r0, [r4, #2]	@ movhi
 	ldr	r3, [r3, r6, lsl #2]
 	str	r3, [r4, #28]
-.L1795:
+.L1796:
 	ldr	r3, [fp, #-60]
 	sxth	r8, r7
 	add	r2, r3, #1
 	cmp	r8, r2
-	blt	.L1798
-.L1812:
+	blt	.L1799
+.L1813:
 	mov	r0, r4
 	bl	ftl_free_no_use_map_blk
-	ldr	r3, .L1833+4
+	ldr	r3, .L1834+4
 	ldrh	r2, [r4, #2]
 	ldrh	r3, [r3]
 	cmp	r2, r3
-	bne	.L1800
+	bne	.L1801
 	mov	r0, r4
 	bl	ftl_map_blk_alloc_new_blk
-.L1800:
+.L1801:
 	mov	r0, r4
 	bl	ftl_map_blk_gc
 	mov	r0, r4
@@ -12614,7 +12601,7 @@ FtlMapTblRecovery:
 	mov	r0, #0
 	sub	sp, fp, #40
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.L1798:
+.L1799:
 	ldr	r3, [fp, #-52]
 	mov	r0, r10
 	ldrh	r2, [r3]
@@ -12627,51 +12614,51 @@ FtlMapTblRecovery:
 	ldr	r2, [r2, #12]
 	cmp	r2, #0
 	str	r2, [fp, #-56]
-	beq	.L1796
+	beq	.L1797
 	ldr	r1, [r9, #3456]
 	cmn	r1, #1
-	beq	.L1796
-	ldr	r1, .L1833+8
+	beq	.L1797
+	ldr	r1, .L1834+8
 	ldr	r0, [r9, #3464]
 	ldrh	r1, [r1]
 	bl	js_hash
 	ldr	r2, [fp, #-56]
 	cmp	r2, r0
-	beq	.L1796
+	beq	.L1797
 	str	r0, [sp, #4]
 	mov	r3, r8
 	str	r2, [sp]
 	mov	r2, r6
-	ldr	r1, .L1833+12
-	ldr	r0, .L1833+16
+	ldr	r1, .L1834+12
+	ldr	r0, .L1834+16
 	bl	sftl_printk
 	mvn	r3, #0
 	str	r3, [r9, #3456]
-.L1796:
+.L1797:
 	ldr	r3, [r9, #3456]
 	cmn	r3, #1
-	beq	.L1797
+	beq	.L1798
 	ldrh	r3, [r5, #8]
 	ldr	r2, [fp, #-48]
 	cmp	r2, r3
-	bls	.L1797
+	bls	.L1798
 	ldrh	r1, [r5]
 	ldrh	r2, [r4, #4]
 	cmp	r1, r2
 	ldreq	r2, [r9, #3460]
 	ldreq	r1, [fp, #-44]
 	streq	r2, [r1, r3, lsl #2]
-.L1797:
+.L1798:
 	add	r7, r7, #1
-	b	.L1795
-.L1794:
+	b	.L1796
+.L1795:
 	ldr	r2, [r9, #3304]
-	ldr	r0, .L1833+20
+	ldr	r0, .L1834+20
 	str	r2, [r9, #3464]
 	add	r2, r8, r3
 	str	r2, [fp, #-60]
 	ldrh	r2, [r8, r3]
-	ldr	r3, .L1833+4
+	ldr	r3, .L1834+4
 	ldrh	r3, [r3]
 	sub	r3, r3, #1
 	orr	r3, r3, r2, lsl #10
@@ -12681,25 +12668,25 @@ FtlMapTblRecovery:
 	bl	FlashReadPages
 	ldr	r3, [r9, #3456]
 	cmn	r3, #1
-	beq	.L1814
+	beq	.L1815
 	ldrh	r2, [r5]
 	ldrh	r3, [r4, #4]
 	cmp	r2, r3
-	bne	.L1814
+	bne	.L1815
 	ldrh	r2, [r5, #8]
 	movw	r3, #64245
 	cmp	r2, r3
-	beq	.L1802
-.L1814:
+	beq	.L1803
+.L1815:
 	mov	r10, #0
-.L1803:
-	ldr	r2, .L1833+4
+.L1804:
+	ldr	r2, .L1834+4
 	sxth	r3, r10
 	ldrh	r2, [r2]
 	cmp	r3, r2
-	bge	.L1810
+	bge	.L1811
 	ldr	r2, [fp, #-60]
-	ldr	r0, .L1833+20
+	ldr	r0, .L1834+20
 	str	r3, [fp, #-68]
 	ldrh	r2, [r2]
 	orr	r2, r3, r2, lsl #10
@@ -12711,57 +12698,57 @@ FtlMapTblRecovery:
 	ldr	r2, [r2, #12]
 	cmp	r2, #0
 	str	r2, [fp, #-64]
-	beq	.L1807
+	beq	.L1808
 	ldr	r1, [r9, #3456]
 	cmn	r1, #1
-	beq	.L1807
-	ldr	r1, .L1833+8
+	beq	.L1808
+	ldr	r1, .L1834+8
 	ldr	r0, [r9, #3464]
 	ldrh	r1, [r1]
 	bl	js_hash
 	ldr	r2, [fp, #-64]
 	cmp	r2, r0
-	beq	.L1807
+	beq	.L1808
 	str	r0, [sp, #4]
 	str	r2, [sp]
 	mov	r2, r6
 	ldr	r3, [fp, #-68]
-	ldr	r1, .L1833+12
-	ldr	r0, .L1833+24
+	ldr	r1, .L1834+12
+	ldr	r0, .L1834+24
 	bl	sftl_printk
 	mvn	r3, #0
 	str	r3, [r9, #3456]
-.L1807:
+.L1808:
 	ldr	r3, [r9, #3456]
 	cmn	r3, #1
-	beq	.L1808
+	beq	.L1809
 	ldrh	r3, [r5, #8]
 	ldr	r2, [fp, #-48]
 	cmp	r2, r3
-	bls	.L1808
+	bls	.L1809
 	ldrh	r1, [r5]
 	ldrh	r2, [r4, #4]
 	cmp	r1, r2
 	ldreq	r2, [r9, #3460]
 	ldreq	r1, [fp, #-44]
 	streq	r2, [r1, r3, lsl #2]
-.L1808:
+.L1809:
 	add	r10, r10, #1
-	b	.L1803
-.L1802:
-	ldr	ip, .L1833+4
+	b	.L1804
+.L1803:
+	ldr	ip, .L1834+4
 	mov	r1, #0
 	mov	lr, #4
-.L1804:
+.L1805:
 	ldrh	r2, [ip]
 	sxth	r3, r1
 	sub	r2, r2, #1
 	cmp	r3, r2
-	blt	.L1806
-.L1810:
+	blt	.L1807
+.L1811:
 	add	r7, r7, #1
-	b	.L1793
-.L1806:
+	b	.L1794
+.L1807:
 	ldr	r0, [r9, #3304]
 	add	r1, r1, #1
 	ldr	r10, [fp, #-48]
@@ -12773,17 +12760,17 @@ FtlMapTblRecovery:
 	ldrhi	r3, [r0, r3]
 	ldrhi	r0, [fp, #-44]
 	strhi	r3, [r0, r2, lsl #2]
-	b	.L1804
-.L1834:
+	b	.L1805
+.L1835:
 	.align	2
-.L1833:
+.L1834:
 	.word	.LANCHOR0
 	.word	.LANCHOR0+308
 	.word	.LANCHOR0+314
 	.word	.LANCHOR1+615
-	.word	.LC130
+	.word	.LC128
 	.word	.LANCHOR0+3456
-	.word	.LC131
+	.word	.LC129
 	.size	FtlMapTblRecovery, .-FtlMapTblRecovery
 	.align	2
 	.global	FtlLoadVonderInfo
@@ -12797,13 +12784,13 @@ FtlLoadVonderInfo:
 	mov	ip, sp
 	push	{fp, ip, lr, pc}
 	sub	fp, ip, #4
-	ldr	r3, .L1836
+	ldr	r3, .L1837
 	add	r2, r3, #324
 	add	r0, r3, #3600
 	ldrh	r2, [r2]
 	add	r0, r0, #12
 	strh	r2, [r0, #10]	@ movhi
-	ldr	r2, .L1836+4
+	ldr	r2, .L1837+4
 	strh	r2, [r0, #4]	@ movhi
 	add	r2, r3, #348
 	ldrh	r2, [r2]
@@ -12822,9 +12809,9 @@ FtlLoadVonderInfo:
 	bl	FtlMapTblRecovery
 	mov	r0, #0
 	ldmfd	sp, {fp, sp, pc}
-.L1837:
+.L1838:
 	.align	2
-.L1836:
+.L1837:
 	.word	.LANCHOR0
 	.word	-3962
 	.size	FtlLoadVonderInfo, .-FtlLoadVonderInfo
@@ -12841,13 +12828,13 @@ FtlLoadMapInfo:
 	push	{fp, ip, lr, pc}
 	sub	fp, ip, #4
 	bl	FtlL2PDataInit
-	ldr	r0, .L1839
+	ldr	r0, .L1840
 	bl	FtlMapTblRecovery
 	mov	r0, #0
 	ldmfd	sp, {fp, sp, pc}
-.L1840:
+.L1841:
 	.align	2
-.L1839:
+.L1840:
 	.word	.LANCHOR0+3396
 	.size	FtlLoadMapInfo, .-FtlLoadMapInfo
 	.align	2
@@ -12862,7 +12849,7 @@ FtlSysBlkInit:
 	mov	ip, sp
 	push	{r4, r5, r6, fp, ip, lr, pc}
 	sub	fp, ip, #4
-	ldr	r4, .L1857
+	ldr	r4, .L1858
 	mov	r2, #0
 	movw	r3, #3476
 	ldrh	r0, [r4, #240]
@@ -12873,16 +12860,16 @@ FtlSysBlkInit:
 	ldrh	r2, [r4, r3]
 	movw	r3, #65535
 	cmp	r2, r3
-	bne	.L1842
-.L1844:
+	bne	.L1843
+.L1845:
 	mvn	r6, #0
-.L1841:
+.L1842:
 	mov	r0, r6
 	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
-.L1842:
+.L1843:
 	bl	FtlLoadSysInfo
 	subs	r6, r0, #0
-	bne	.L1844
+	bne	.L1845
 	bl	FtlLoadMapInfo
 	bl	FtlLoadVonderInfo
 	bl	Ftl_load_ext_data
@@ -12897,24 +12884,24 @@ FtlSysBlkInit:
 	ldrh	r1, [r4, r3]
 	mov	r0, #12
 	mov	r3, r6
-.L1845:
+.L1846:
 	cmp	r3, r1
-	bge	.L1850
+	bge	.L1851
 	mla	ip, r0, r3, r2
 	ldr	ip, [ip, #4]
 	cmp	ip, #0
-	bge	.L1846
-.L1850:
-	ldr	r5, .L1857+4
+	bge	.L1847
+.L1851:
+	ldr	r5, .L1858+4
 	cmp	r3, r1
 	ldrh	r2, [r5, #28]
 	add	r2, r2, #1
 	strh	r2, [r5, #28]	@ movhi
-	bge	.L1856
-.L1847:
-	ldr	r0, .L1857+8
+	bge	.L1857
+.L1848:
+	ldr	r0, .L1858+8
 	bl	FtlSuperblockPowerLostFix
-	ldr	r0, .L1857+12
+	ldr	r0, .L1858+12
 	bl	FtlSuperblockPowerLostFix
 	ldrh	r3, [r4, #28]
 	ldr	r1, [r4, #76]
@@ -12946,40 +12933,40 @@ FtlSysBlkInit:
 	bl	l2p_flush
 	bl	FtlVpcTblFlush
 	bl	FtlVpcTblFlush
-	b	.L1851
-.L1846:
+	b	.L1852
+.L1847:
 	add	r3, r3, #1
-	b	.L1845
-.L1856:
+	b	.L1846
+.L1857:
 	movw	r3, #3476
 	ldrh	r3, [r4, r3]
 	cmp	r3, #0
-	bne	.L1847
-.L1851:
+	bne	.L1848
+.L1852:
 	ldrh	r0, [r4, #28]
 	movw	r3, #65535
 	cmp	r0, r3
-	beq	.L1852
+	beq	.L1853
 	ldrh	r3, [r4, #32]
 	cmp	r3, #0
-	bne	.L1852
+	bne	.L1853
 	ldrh	r3, [r4, #84]
 	cmp	r3, #0
-	bne	.L1852
+	bne	.L1853
 	bl	FtlGcRefreshBlock
 	ldrh	r0, [r4, #80]
 	bl	FtlGcRefreshBlock
 	bl	FtlVpcTblFlush
-	ldr	r0, .L1857+8
+	ldr	r0, .L1858+8
 	bl	allocate_new_data_superblock
-	ldr	r0, .L1857+12
+	ldr	r0, .L1858+12
 	bl	allocate_new_data_superblock
-.L1852:
+.L1853:
 	bl	FtlVpcCheckAndModify
-	b	.L1841
-.L1858:
+	b	.L1842
+.L1859:
 	.align	2
-.L1857:
+.L1858:
 	.word	.LANCHOR0
 	.word	.LANCHOR0+2472
 	.word	.LANCHOR0+28
@@ -12997,7 +12984,7 @@ ftl_low_format:
 	mov	ip, sp
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
 	sub	fp, ip, #4
-	ldr	r4, .L1883
+	ldr	r4, .L1884
 	mov	r3, #0
 	ldrh	r0, [r4, #240]
 	str	r3, [r4, #2592]
@@ -13006,43 +12993,43 @@ ftl_low_format:
 	bl	FtlFreeSysBlkQueueInit
 	bl	FtlLoadBbt
 	cmp	r0, #0
-	beq	.L1860
+	beq	.L1861
 	bl	FtlMakeBbt
-.L1860:
-	ldr	r0, .L1883+4
-	mov	r2, #0
-	ldr	ip, .L1883+8
 .L1861:
+	ldr	r0, .L1884+4
+	mov	r2, #0
+	ldr	ip, .L1884+8
+.L1862:
 	ldrh	r1, [r0]
 	uxth	r3, r2
 	add	r2, r2, #1
 	cmp	r3, r1, lsl #7
-	blt	.L1862
+	blt	.L1863
 	ldrh	r6, [r4, #244]
 	mov	r5, #0
-.L1863:
+.L1864:
 	ldrh	r3, [r4, #246]
 	cmp	r3, r6
-	bhi	.L1864
+	bhi	.L1865
 	ldrh	r1, [r4, #236]
 	sub	r3, r5, #3
 	cmp	r3, r1, lsl #1
-	bge	.L1865
-.L1869:
+	bge	.L1866
+.L1870:
 	mov	r0, #0
 	mov	r7, r0
-.L1866:
+.L1867:
 	ldrh	r2, [r4, #244]
 	uxth	r3, r0
 	add	r5, r0, #1
 	cmp	r2, r3
-	bhi	.L1870
+	bhi	.L1871
 	ldrh	r3, [r4, #246]
 	ldrh	r5, [r4, #236]
 	ldr	r10, [r4, #248]
 	str	r3, [r4, #3288]
 	mov	r1, r5
-	ldr	r6, .L1883+12
+	ldr	r6, .L1884+12
 	mov	r0, r10
 	bl	__udivsi3
 	ubfx	r8, r0, #5, #16
@@ -13053,7 +13040,7 @@ ftl_low_format:
 	mov	r3, #24
 	mul	r3, r3, r5
 	cmp	r7, r3
-	ble	.L1871
+	ble	.L1872
 	mov	r1, r5
 	sub	r0, r10, r7
 	bl	__udivsi3
@@ -13061,11 +13048,11 @@ ftl_low_format:
 	lsr	r0, r0, #5
 	add	r0, r0, #24
 	strh	r0, [r6]	@ movhi
-.L1871:
+.L1872:
 	movw	r3, #298
 	ldrh	r3, [r4, r3]
 	cmp	r3, #0
-	beq	.L1873
+	beq	.L1874
 	ldrh	r2, [r6]
 	add	r2, r2, r3, lsr #1
 	strh	r2, [r6]	@ movhi
@@ -13075,10 +13062,10 @@ ftl_low_format:
 	strlt	r9, [r4, #2556]
 	addlt	r3, r8, r3
 	strhlt	r3, [r6]	@ movhi
-.L1873:
+.L1874:
 	ldrh	r2, [r6]
 	ldr	r3, [r4, #2556]
-	ldr	r6, .L1883+16
+	ldr	r6, .L1884+16
 	sub	r3, r3, r2
 	mul	r5, r5, r3
 	movw	r3, #306
@@ -13113,29 +13100,29 @@ ftl_low_format:
 	strh	r5, [r4, #176]	@ movhi
 	strb	r3, [r4, #36]
 	bl	ftl_memset
-.L1875:
+.L1876:
 	mov	r0, r6
 	bl	make_superblock
 	ldrb	r3, [r4, #35]	@ zero_extendqisi2
 	cmp	r3, #0
 	ldrh	r3, [r4, #28]
-	bne	.L1876
+	bne	.L1877
 	ldr	r2, [r4, #76]
 	lsl	r3, r3, #1
 	strh	r5, [r2, r3]	@ movhi
 	ldrh	r3, [r4, #28]
 	add	r3, r3, #1
 	strh	r3, [r4, #28]	@ movhi
-	b	.L1875
-.L1862:
+	b	.L1876
+.L1863:
 	ldr	lr, [r4, #3316]
 	mvn	r1, r3
 	orr	r1, r3, r1, lsl #16
 	str	r1, [lr, r3, lsl #2]
 	ldr	r1, [r4, #3320]
 	str	ip, [r1, r3, lsl #2]
-	b	.L1861
-.L1864:
+	b	.L1862
+.L1865:
 	mov	r0, r6
 	mov	r1, #1
 	bl	FtlLowFormatEraseBlock
@@ -13143,8 +13130,8 @@ ftl_low_format:
 	add	r5, r5, r0
 	uxth	r5, r5
 	uxth	r6, r6
-	b	.L1863
-.L1865:
+	b	.L1864
+.L1866:
 	mov	r0, r5
 	bl	__udivsi3
 	ldr	r3, [r4, #336]
@@ -13154,30 +13141,30 @@ ftl_low_format:
 	ldrh	r0, [r4, #240]
 	bl	FtlFreeSysBlkQueueInit
 	ldrh	r5, [r4, #244]
-.L1867:
+.L1868:
 	ldrh	r3, [r4, #246]
 	cmp	r3, r5
-	bls	.L1869
+	bls	.L1870
 	mov	r0, r5
 	mov	r1, #1
 	add	r5, r5, #1
 	bl	FtlLowFormatEraseBlock
 	uxth	r5, r5
-	b	.L1867
-.L1870:
+	b	.L1868
+.L1871:
 	mov	r1, #0
 	uxth	r0, r0
 	bl	FtlLowFormatEraseBlock
 	add	r7, r7, r0
 	mov	r0, r5
 	uxth	r7, r7
-	b	.L1866
-.L1876:
+	b	.L1867
+.L1877:
 	ldr	r2, [r4, #2592]
 	lsl	r3, r3, #1
 	ldrh	r1, [r4, #32]
 	mvn	r5, #0
-	ldr	r6, .L1883+20
+	ldr	r6, .L1884+20
 	str	r2, [r4, #40]
 	add	r2, r2, #1
 	str	r2, [r4, #2592]
@@ -13191,21 +13178,21 @@ ftl_low_format:
 	strh	r3, [r4, #80]	@ movhi
 	mov	r3, #1
 	strb	r3, [r4, #88]
-.L1877:
+.L1878:
 	mov	r0, r6
 	bl	make_superblock
 	ldrb	r3, [r4, #87]	@ zero_extendqisi2
 	cmp	r3, #0
 	ldrh	r3, [r4, #80]
-	bne	.L1878
+	bne	.L1879
 	ldr	r2, [r4, #76]
 	lsl	r3, r3, #1
 	strh	r5, [r2, r3]	@ movhi
 	ldrh	r3, [r4, #80]
 	add	r3, r3, #1
 	strh	r3, [r4, #80]	@ movhi
-	b	.L1877
-.L1878:
+	b	.L1878
+.L1879:
 	ldr	r2, [r4, #2592]
 	lsl	r3, r3, #1
 	ldrh	r1, [r4, #84]
@@ -13217,7 +13204,7 @@ ftl_low_format:
 	strh	r1, [r2, r3]	@ movhi
 	strh	r5, [r4, #128]	@ movhi
 	bl	FtlFreeSysBlkQueueOut
-	ldr	r3, .L1883+24
+	ldr	r3, .L1884+24
 	movw	r2, #2628
 	strh	r0, [r4, r2]	@ movhi
 	mov	r2, #0
@@ -13233,13 +13220,13 @@ ftl_low_format:
 	bl	FtlSysBlkInit
 	cmp	r0, #0
 	mov	r0, #0
-	ldreq	r3, .L1883+28
+	ldreq	r3, .L1884+28
 	moveq	r2, #1
 	streq	r2, [r3]
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.L1884:
+.L1885:
 	.align	2
-.L1883:
+.L1884:
 	.word	.LANCHOR0
 	.word	.LANCHOR0+262
 	.word	168778952
@@ -13261,11 +13248,11 @@ sftl_init:
 	mov	ip, sp
 	push	{r4, r5, fp, ip, lr, pc}
 	sub	fp, ip, #4
-	ldr	r4, .L1891
+	ldr	r4, .L1892
 	mvn	r3, #0
-	ldr	r5, .L1891+4
-	ldr	r1, .L1891+8
-	ldr	r0, .L1891+12
+	ldr	r5, .L1892+4
+	ldr	r1, .L1892+8
+	ldr	r0, .L1892+12
 	str	r3, [r5]
 	bl	sftl_printk
 	mov	r0, r4
@@ -13276,28 +13263,28 @@ sftl_init:
 	bl	FtlFreeSysBlkQueueInit
 	bl	FtlLoadBbt
 	cmp	r0, #0
-	bne	.L1889
+	bne	.L1890
 	bl	FtlSysBlkInit
 	cmp	r0, #0
-	bne	.L1889
+	bne	.L1890
 	mov	r3, #1
 	str	r3, [r5]
 	ldrh	r3, [r4, #228]
 	cmp	r3, #15
-	bhi	.L1889
+	bhi	.L1890
 	movw	r4, #8129
-.L1888:
+.L1889:
 	mov	r1, #1
 	mov	r0, #0
 	bl	rk_ftl_garbage_collect
 	subs	r4, r4, #1
-	bne	.L1888
-.L1889:
+	bne	.L1889
+.L1890:
 	mov	r0, #0
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L1892:
+.L1893:
 	.align	2
-.L1891:
+.L1892:
 	.word	.LANCHOR0
 	.word	.LANCHOR2
 	.word	.LC0
@@ -13327,30 +13314,30 @@ FtlWriteToIDB:
 	orrcs	r3, r3, #1
 	mov	r7, r2
 	cmp	r3, #0
-	ldr	r6, .L1955
-	beq	.L1894
+	ldr	r6, .L1956
+	beq	.L1895
 	ldr	r3, [r6, #3680]
 	cmp	r3, #0
-	bne	.L1895
-.L1954:
+	bne	.L1896
+.L1955:
 	mov	r4, #0
-	b	.L1893
-.L1895:
+	b	.L1894
+.L1896:
 	ldr	r3, [r6, #3684]
 	ldr	r2, [r3]
 	str	r3, [fp, #-112]
-	ldr	r3, .L1955+4
+	ldr	r3, .L1956+4
 	cmp	r2, r3
-	bne	.L1897
+	bne	.L1898
 	ldr	r3, [fp, #-112]
 	mov	r2, #0
 	ldrh	r1, [r6, #10]
 	add	r0, r3, #262144
 	movw	r3, #65535
-.L1901:
+.L1902:
 	ldr	ip, [r0, #-4]
 	cmp	ip, #0
-	bne	.L1898
+	bne	.L1899
 	ldr	ip, [fp, #-112]
 	sub	r3, r3, #1
 	ldr	ip, [ip, r2, lsl #2]
@@ -13359,18 +13346,18 @@ FtlWriteToIDB:
 	movhi	r2, #0
 	cmp	r3, #4096
 	str	ip, [r0, #-4]!
-	bne	.L1901
+	bne	.L1902
 	mov	r3, #512
-	b	.L1952
-.L1898:
+	b	.L1953
+.L1899:
 	add	r3, r3, #127
 	lsr	r3, r3, #7
-.L1952:
+.L1953:
 	str	r3, [fp, #-116]
 	lsl	r1, r1, #2
 	ldr	r3, [fp, #-116]
 	uxth	r1, r1
-	ldr	r4, .L1955
+	ldr	r4, .L1956
 	add	r0, r3, #4
 	bl	__udivsi3
 	add	r3, r0, #1
@@ -13382,7 +13369,7 @@ FtlWriteToIDB:
 	mov	r3, #0
 	str	r3, [fp, #-124]
 	str	r3, [fp, #-108]
-.L1923:
+.L1924:
 	mov	r1, #512
 	ldr	r0, [r4, #3688]
 	bl	__memzero
@@ -13392,32 +13379,32 @@ FtlWriteToIDB:
 	ldr	r3, [r4, #3264]
 	cmp	r3, #0
 	moveq	r10, #6
-	beq	.L1902
+	beq	.L1903
 	ldr	r3, [r4, #3268]
 	cmp	r3, #0
 	moveq	r10, #6
 	movne	r10, #9
-.L1902:
+.L1903:
 	ldr	r3, [r6, #3252]
 	mov	r1, r8
 	mov	r0, #0
 	blx	r3
 	ldr	r3, [fp, #-120]
 	cmp	r3, #1
-	beq	.L1903
+	beq	.L1904
 	ldr	r3, [r6, #3252]
 	add	r1, r7, r8
 	mov	r0, #0
 	blx	r3
-.L1903:
+.L1904:
 	cmp	r10, #9
 	movne	r5, #0
-	bne	.L1904
+	bne	.L1905
 	ldr	r5, [r6, #3688]
 	mov	r1, #1024
 	mov	r0, r5
 	bl	__memzero
-	ldr	r3, .L1955+8
+	ldr	r3, .L1956+8
 	mov	r1, #12
 	mov	r2, #4
 	str	r1, [r5, #4]
@@ -13435,7 +13422,7 @@ FtlWriteToIDB:
 	strh	r3, [r5, #22]	@ movhi
 	bl	js_hash
 	str	r0, [r5, #8]
-.L1904:
+.L1905:
 	ldr	r3, [fp, #-120]
 	mov	r9, r8
 	mul	r3, r7, r3
@@ -13443,10 +13430,10 @@ FtlWriteToIDB:
 	str	r3, [fp, #-136]
 	ldr	r3, [fp, #-112]
 	str	r3, [fp, #-128]
-.L1905:
+.L1906:
 	ldr	r3, [fp, #-136]
 	cmp	r7, r3
-	beq	.L1912
+	beq	.L1913
 	cmp	r10, #9
 	addne	r3, r8, r7
 	addeq	r3, r9, #1
@@ -13458,7 +13445,7 @@ FtlWriteToIDB:
 	movw	r3, #61424
 	str	r3, [fp, #-100]
 	movne	r0, #0
-	bne	.L1908
+	bne	.L1909
 	ldr	r3, [r4, #3264]
 	mov	r0, #70
 	blx	r3
@@ -13474,8 +13461,8 @@ FtlWriteToIDB:
 	blx	r2
 	ldr	r3, [fp, #-140]
 	cmn	r3, #1
-	bne	.L1909
-.L1912:
+	bne	.L1910
+.L1913:
 	ldrb	r3, [r4, #14]	@ zero_extendqisi2
 	ldrh	r10, [r4, #10]
 	ldr	r7, [r4, #3688]
@@ -13485,23 +13472,23 @@ FtlWriteToIDB:
 	ldr	r3, [r4, #3264]
 	cmp	r3, #0
 	moveq	r8, #6
-	beq	.L1911
+	beq	.L1912
 	ldr	r3, [r4, #3268]
 	cmp	r3, #0
 	moveq	r8, #6
 	movne	r8, #9
-.L1911:
+.L1912:
 	ldr	r3, [fp, #-120]
 	mov	r5, #0
 	mul	r10, r10, r3
-.L1914:
+.L1915:
 	cmp	r5, r10
-	beq	.L1918
+	beq	.L1919
 	cmp	r5, #0
 	cmpeq	r8, #9
 	moveq	r0, #1
 	movne	r0, #0
-	bne	.L1915
+	bne	.L1916
 	ldr	r3, [r4, #3264]
 	mov	r0, #70
 	blx	r3
@@ -13521,27 +13508,27 @@ FtlWriteToIDB:
 	ldrb	r0, [r4, #22]	@ zero_extendqisi2
 	blx	r3
 	ldr	r3, [r7]
-	ldr	r2, .L1955+8
+	ldr	r2, .L1956+8
 	cmp	r3, r2
-	beq	.L1916
-.L1918:
+	beq	.L1917
+.L1919:
 	ldr	r0, [r4, #3688]
 	mov	r5, #0
 	ldr	r3, [fp, #-112]
-.L1917:
+.L1918:
 	mov	r8, r3
 	ldr	r1, [r0, r5, lsl #2]
 	ldr	r2, [r8]
 	lsl	r7, r5, #2
 	add	r3, r3, #4
 	cmp	r1, r2
-	beq	.L1920
+	beq	.L1921
 	mov	r1, #512
 	bl	__memzero
 	ldr	r2, [r6, #3688]
 	ldr	r1, [fp, #-108]
 	str	r5, [sp]
-	ldr	r0, .L1955+12
+	ldr	r0, .L1956+12
 	ldr	r3, [r8]
 	ldr	r2, [r2, r7]
 	bl	sftl_printk
@@ -13551,21 +13538,21 @@ FtlWriteToIDB:
 	ldr	r3, [r6, #3252]
 	mul	r1, r2, r1
 	blx	r3
-.L1921:
+.L1922:
 	ldr	r3, [fp, #-108]
 	ldr	r2, [fp, #-120]
 	add	r3, r3, r2
 	cmp	r3, #15
 	str	r3, [fp, #-108]
-	bls	.L1923
+	bls	.L1924
 	ldr	r3, [fp, #-124]
 	cmp	r3, #0
-	bne	.L1924
-.L1897:
+	bne	.L1925
+.L1898:
 	mvn	r3, #0
 	str	r3, [fp, #-116]
-.L1924:
-	ldr	r5, .L1955
+.L1925:
+	ldr	r5, .L1956
 	mov	r3, #0
 	ldr	r4, [fp, #-116]
 	ldr	r0, [r5, #3684]
@@ -13573,55 +13560,55 @@ FtlWriteToIDB:
 	bl	kfree
 	ldr	r0, [r5, #3688]
 	bl	kfree
-.L1893:
+.L1894:
 	mov	r0, r4
 	sub	sp, fp, #40
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.L1908:
+.L1909:
 	ldr	ip, [r4, #3256]
 	sub	r3, fp, #104
 	ldr	r2, [fp, #-128]
 	mov	r1, r9
 	blx	ip
 	cmn	r0, #1
-	beq	.L1912
+	beq	.L1913
 	ldr	r3, [fp, #-128]
 	add	r3, r3, #2048
 	str	r3, [fp, #-128]
-.L1909:
+.L1910:
 	add	r7, r7, #1
 	add	r9, r9, #1
-	b	.L1905
-.L1915:
+	b	.L1906
+.L1916:
 	ldr	ip, [r4, #3260]
 	sub	r3, fp, #104
 	mov	r2, r7
 	add	r1, r9, r5
 	blx	ip
 	cmn	r0, #1
-	beq	.L1918
+	beq	.L1919
 	ldr	r2, [fp, #-100]
 	movw	r3, #61424
 	cmp	r2, r3
-	bne	.L1918
+	bne	.L1919
 	add	r7, r7, #2048
-.L1916:
+.L1917:
 	add	r5, r5, #1
-	b	.L1914
-.L1920:
+	b	.L1915
+.L1921:
 	ldr	r2, [fp, #-132]
 	add	r5, r5, #1
 	cmp	r5, r2
-	bne	.L1917
+	bne	.L1918
 	ldr	r3, [fp, #-124]
 	add	r3, r3, #1
 	cmp	r3, #5
 	str	r3, [fp, #-124]
-	bls	.L1921
-	b	.L1924
-.L1894:
+	bls	.L1922
+	b	.L1925
+.L1895:
 	cmp	r0, #64
-	bne	.L1925
+	bne	.L1926
 	mov	r0, #262144
 	bl	ftl_malloc
 	str	r0, [r6, #3684]
@@ -13631,24 +13618,24 @@ FtlWriteToIDB:
 	str	r0, [r6, #3688]
 	cmp	r3, #0
 	cmpne	r0, #0
-	beq	.L1926
+	beq	.L1927
 	mov	r2, #1
 	mov	r1, #262144
 	mov	r0, r3
 	str	r2, [r6, #3680]
 	bl	__memzero
-.L1925:
+.L1926:
 	ldr	r3, [r6, #3680]
 	cmp	r3, #0
-	beq	.L1954
+	beq	.L1955
 	cmp	r5, #63
 	ldr	r1, [r6, #3684]
-	ldrhi	r6, .L1955+16
+	ldrhi	r6, .L1956+16
 	rsbls	r5, r5, #64
 	subls	r4, r4, r5
 	addls	r7, r7, r5, lsl #9
 	movls	r6, r1
-	ldr	r0, .L1955+20
+	ldr	r0, .L1956+20
 	addhi	r6, r5, r6
 	mov	r2, #262144
 	addhi	r6, r1, r6, lsl #9
@@ -13663,23 +13650,23 @@ FtlWriteToIDB:
 	mov	r1, r7
 	mov	r0, r6
 	bl	ftl_memcpy
-	b	.L1954
-.L1926:
-	ldr	r1, .L1955+24
-	ldr	r0, .L1955+28
+	b	.L1955
+.L1927:
+	ldr	r1, .L1956+24
+	ldr	r0, .L1956+28
 	bl	sftl_printk
-	b	.L1925
-.L1956:
+	b	.L1926
+.L1957:
 	.align	2
-.L1955:
+.L1956:
 	.word	.LANCHOR0
 	.word	-52655045
 	.word	1179535694
-	.word	.LC132
+	.word	.LC130
 	.word	8388544
-	.word	.LC134
+	.word	.LC132
 	.word	.LANCHOR1+633
-	.word	.LC133
+	.word	.LC131
 	.size	FtlWriteToIDB, .-FtlWriteToIDB
 	.align	2
 	.global	sftl_write
@@ -13716,7 +13703,7 @@ rk_sftl_vendor_dev_ops_register:
 	mov	ip, sp
 	push	{fp, ip, lr, pc}
 	sub	fp, ip, #4
-	ldr	r2, .L1961
+	ldr	r2, .L1962
 	ldr	r3, [r2, #3692]
 	cmp	r3, #0
 	streq	r0, [r2, #3692]
@@ -13724,9 +13711,9 @@ rk_sftl_vendor_dev_ops_register:
 	streq	r1, [r2, #3696]
 	mvnne	r0, #0
 	ldmfd	sp, {fp, sp, pc}
-.L1962:
+.L1963:
 	.align	2
-.L1961:
+.L1962:
 	.word	.LANCHOR0
 	.size	rk_sftl_vendor_dev_ops_register, .-rk_sftl_vendor_dev_ops_register
 	.align	2
@@ -13742,28 +13729,28 @@ rk_sftl_vendor_storage_init:
 	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
 	sub	fp, ip, #4
 	mov	r0, #65536
-	ldr	r4, .L1972
+	ldr	r4, .L1973
 	bl	ftl_malloc
 	cmp	r0, #0
 	str	r0, [r4, #3700]
 	mvneq	r9, #11
-	beq	.L1963
-	ldr	r8, .L1972+4
+	beq	.L1964
+	ldr	r8, .L1973+4
 	mov	r6, #0
 	mov	r5, r6
 	mov	r7, r6
-.L1967:
+.L1968:
 	ldr	r3, [r4, #3692]
 	mov	r1, #128
 	ldr	r2, [r4, #3700]
 	lsl	r0, r7, #7
 	blx	r3
 	subs	r9, r0, #0
-	bne	.L1965
+	bne	.L1966
 	ldr	r2, [r4, #3700]
 	ldr	r3, [r2]
 	cmp	r3, r8
-	bne	.L1966
+	bne	.L1967
 	add	r1, r2, #61440
 	ldr	r3, [r2, #4]
 	ldr	r1, [r1, #4092]
@@ -13775,26 +13762,26 @@ rk_sftl_vendor_storage_init:
 	cmp	r1, #0
 	movne	r6, r7
 	movne	r5, r3
-.L1966:
+.L1967:
 	add	r7, r7, #1
 	cmp	r7, #2
-	bne	.L1967
+	bne	.L1968
 	cmp	r5, #0
-	beq	.L1968
+	beq	.L1969
 	ldr	r3, [r4, #3692]
 	mov	r1, #128
 	lsl	r0, r6, #7
 	blx	r3
 	subs	r9, r0, #0
-	beq	.L1963
-.L1965:
+	beq	.L1964
+.L1966:
 	ldr	r0, [r4, #3700]
 	mvn	r9, #0
 	bl	kfree
 	mov	r3, #0
 	str	r3, [r4, #3700]
-	b	.L1963
-.L1968:
+	b	.L1964
+.L1969:
 	mov	r1, #65536
 	mov	r0, r2
 	bl	__memzero
@@ -13804,15 +13791,15 @@ rk_sftl_vendor_storage_init:
 	str	r2, [r3, #4]
 	str	r8, [r3]
 	str	r2, [r1, #4092]
-	ldr	r2, .L1972+8
+	ldr	r2, .L1973+8
 	strh	r5, [r3, #12]	@ movhi
 	strh	r2, [r3, #14]	@ movhi
-.L1963:
+.L1964:
 	mov	r0, r9
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
-.L1973:
+.L1974:
 	.align	2
-.L1972:
+.L1973:
 	.word	.LANCHOR0
 	.word	1380668996
 	.word	-1032
@@ -13829,26 +13816,26 @@ rk_sftl_vendor_read:
 	mov	ip, sp
 	push	{r4, r5, fp, ip, lr, pc}
 	sub	fp, ip, #4
-	ldr	r3, .L1980
+	ldr	r3, .L1981
 	mov	r4, r0
 	mov	r0, r1
 	ldr	ip, [r3, #3700]
 	cmp	ip, #0
 	ldrhne	lr, [ip, #10]
 	movne	r3, #0
-	bne	.L1976
-.L1979:
+	bne	.L1977
+.L1980:
 	mvn	r0, #0
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L1977:
+.L1978:
 	add	r3, r3, #1
-.L1976:
+.L1977:
 	cmp	r3, lr
-	bcs	.L1979
+	bcs	.L1980
 	add	r1, ip, r3, lsl #3
 	ldrh	r5, [r1, #16]
 	cmp	r5, r4
-	bne	.L1977
+	bne	.L1978
 	ldrh	r4, [r1, #20]
 	ldrh	r1, [r1, #18]
 	cmp	r4, r2
@@ -13859,9 +13846,9 @@ rk_sftl_vendor_read:
 	bl	memcpy
 	mov	r0, r4
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L1981:
+.L1982:
 	.align	2
-.L1980:
+.L1981:
 	.word	.LANCHOR0
 	.size	rk_sftl_vendor_read, .-rk_sftl_vendor_read
 	.align	2
@@ -13878,23 +13865,23 @@ rk_sftl_vendor_write:
 	sub	fp, ip, #4
 	sub	sp, sp, #24
 	mov	ip, r1
-	ldr	r8, .L2001
+	ldr	r8, .L2002
 	mov	r9, r2
 	ldr	r4, [r8, #3700]
 	cmp	r4, #0
-	beq	.L1997
+	beq	.L1998
 	ldrh	r2, [r4, #10]
 	add	r7, r9, #63
 	ldrh	r3, [r4, #8]
 	bic	r7, r7, #63
 	mov	r5, #0
 	str	r3, [fp, #-44]
-.L1984:
+.L1985:
 	cmp	r5, r2
-	bcc	.L1992
+	bcc	.L1993
 	ldrh	r1, [r4, #14]
 	cmp	r7, r1
-	bhi	.L1997
+	bhi	.L1998
 	add	r3, r4, r2, lsl #3
 	uxth	r7, r7
 	strh	r0, [r3, #16]	@ movhi
@@ -13926,31 +13913,31 @@ rk_sftl_vendor_write:
 	movhi	r3, #0
 	strh	r3, [r4, #8]	@ movhi
 	ldr	r3, [r8, #3696]
-	b	.L2000
-.L1992:
+	b	.L2001
+.L1993:
 	add	r6, r4, r5, lsl #3
 	ldrh	r3, [r6, #16]
 	cmp	r3, r0
 	str	r3, [fp, #-48]
-	bne	.L1985
+	bne	.L1986
 	ldrh	r1, [r6, #20]
 	add	r3, r4, #1024
 	add	r1, r1, #63
 	bic	r1, r1, #63
 	cmp	r9, r1
 	str	r1, [fp, #-52]
-	bls	.L1986
+	bls	.L1987
 	ldrh	r1, [r4, #14]
 	cmp	r7, r1
-	bhi	.L1997
+	bhi	.L1998
 	ldrh	r8, [r6, #18]
 	sub	r2, r2, #1
 	str	r2, [fp, #-56]
-.L1987:
+.L1988:
 	ldr	r2, [fp, #-56]
 	add	r6, r6, #8
 	cmp	r5, r2
-	bcc	.L1988
+	bcc	.L1989
 	ldrh	r2, [fp, #-48]
 	add	r5, r4, r5, lsl #3
 	uxth	r8, r8
@@ -13969,7 +13956,7 @@ rk_sftl_vendor_write:
 	strh	r8, [r4, #12]	@ movhi
 	add	r7, r7, r3
 	strh	r7, [r4, #14]	@ movhi
-.L1989:
+.L1990:
 	ldr	r3, [r4, #4]
 	add	r2, r4, #61440
 	add	r3, r3, #1
@@ -13981,19 +13968,19 @@ rk_sftl_vendor_write:
 	cmp	r3, #1
 	movhi	r3, #0
 	strh	r3, [r4, #8]	@ movhi
-	ldr	r3, .L2001
+	ldr	r3, .L2002
 	ldr	r3, [r3, #3696]
-.L2000:
+.L2001:
 	ldr	r0, [fp, #-44]
 	mov	r2, r4
 	mov	r1, #128
 	lsl	r0, r0, #7
 	blx	r3
 	mov	r0, #0
-.L1982:
+.L1983:
 	sub	sp, fp, #40
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.L1988:
+.L1989:
 	ldrh	r10, [r6, #20]
 	add	r0, r3, r8
 	ldrh	r2, [r6, #16]
@@ -14012,8 +13999,8 @@ rk_sftl_vendor_write:
 	bl	memcpy
 	ldr	ip, [fp, #-64]
 	ldr	r3, [fp, #-60]
-	b	.L1987
-.L1986:
+	b	.L1988
+.L1987:
 	add	r5, r4, r5, lsl #3
 	mov	r2, r9
 	mov	r1, ip
@@ -14021,16 +14008,16 @@ rk_sftl_vendor_write:
 	add	r0, r3, r0
 	bl	memcpy
 	strh	r9, [r6, #20]	@ movhi
-	b	.L1989
-.L1985:
+	b	.L1990
+.L1986:
 	add	r5, r5, #1
-	b	.L1984
-.L1997:
+	b	.L1985
+.L1998:
 	mvn	r0, #0
-	b	.L1982
-.L2002:
+	b	.L1983
+.L2003:
 	.align	2
-.L2001:
+.L2002:
 	.word	.LANCHOR0
 	.size	rk_sftl_vendor_write, .-rk_sftl_vendor_write
 	.align	2
@@ -14051,18 +14038,18 @@ rk_sftl_vendor_storage_ioctl:
 	bl	ftl_malloc
 	subs	r5, r0, #0
 	mvneq	r4, #0
-	beq	.L2003
-	ldr	r3, .L2031
+	beq	.L2004
+	ldr	r3, .L2032
 	cmp	r6, r3
-	beq	.L2006
+	beq	.L2007
 	add	r3, r3, #1
 	cmp	r6, r3
-	beq	.L2007
-.L2026:
+	beq	.L2008
+.L2027:
 	mvn	r4, #13
-	b	.L2005
-.L2006:
-	ldr	r6, .L2031+4
+	b	.L2006
+.L2007:
+	ldr	r6, .L2032+4
 	mov	r3, sp
 	and	r3, r3, r6
 	ldr	r3, [r3, #72]
@@ -14073,43 +14060,43 @@ rk_sftl_vendor_storage_ioctl:
 	.arm
 	.syntax unified
 	cmp	r3, #0
-	bne	.L2008
+	bne	.L2009
 	mov	r2, #8
 	mov	r1, r4
 	bl	arm_copy_from_user
 	cmp	r0, #0
-	beq	.L2027
-.L2009:
+	beq	.L2028
+.L2010:
 	mov	r2, r4
 	mov	r1, #256
-.L2030:
-	ldr	r0, .L2031+8
+.L2031:
+	ldr	r0, .L2032+8
 	bl	sftl_printk
-	b	.L2026
-.L2008:
+	b	.L2027
+.L2009:
 	mov	r1, #8
 	bl	__memzero
-	b	.L2009
-.L2027:
+	b	.L2010
+.L2028:
 	ldr	r2, [r5]
-	ldr	r3, .L2031+12
+	ldr	r3, .L2032+12
 	cmp	r2, r3
-	beq	.L2011
-.L2012:
+	beq	.L2012
+.L2013:
 	mvn	r4, #0
-.L2005:
+.L2006:
 	mov	r0, r5
 	bl	kfree
-.L2003:
+.L2004:
 	mov	r0, r4
 	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
-.L2011:
+.L2012:
 	ldrh	r2, [r5, #6]
 	add	r1, r5, #8
 	ldrh	r0, [r5, #4]
 	bl	rk_sftl_vendor_read
 	cmn	r0, #1
-	beq	.L2012
+	beq	.L2013
 	mov	r3, sp
 	uxth	r2, r0
 	and	r6, r6, r3
@@ -14123,15 +14110,15 @@ rk_sftl_vendor_storage_ioctl:
 	.arm
 	.syntax unified
 	cmp	r3, #0
-	bne	.L2026
+	bne	.L2027
 	mov	r0, r4
 	mov	r1, r5
 	bl	arm_copy_to_user
 	subs	r4, r0, #0
-	beq	.L2005
-	b	.L2026
-.L2007:
-	ldr	r6, .L2031+4
+	beq	.L2006
+	b	.L2027
+.L2008:
+	ldr	r6, .L2032+4
 	mov	r3, sp
 	and	r3, r3, r6
 	ldr	r3, [r3, #72]
@@ -14142,29 +14129,29 @@ rk_sftl_vendor_storage_ioctl:
 	.arm
 	.syntax unified
 	cmp	r3, #0
-	bne	.L2014
+	bne	.L2015
 	mov	r2, #8
 	mov	r1, r4
 	bl	arm_copy_from_user
 	cmp	r0, #0
-	beq	.L2028
-.L2015:
+	beq	.L2029
+.L2016:
 	mov	r2, r4
 	mov	r1, #276
-	b	.L2030
-.L2014:
+	b	.L2031
+.L2015:
 	mov	r1, #8
 	bl	__memzero
-	b	.L2015
-.L2028:
+	b	.L2016
+.L2029:
 	ldr	r2, [r5]
-	ldr	r3, .L2031+12
+	ldr	r3, .L2032+12
 	cmp	r2, r3
-	bne	.L2012
+	bne	.L2013
 	ldrh	r2, [r5, #6]
 	movw	r3, #4087
 	cmp	r2, r3
-	bhi	.L2012
+	bhi	.L2013
 	mov	r3, sp
 	add	r2, r2, #8
 	and	r6, r6, r3
@@ -14176,34 +14163,34 @@ rk_sftl_vendor_storage_ioctl:
 	.arm
 	.syntax unified
 	cmp	r3, #0
-	bne	.L2017
+	bne	.L2018
 	mov	r1, r4
 	mov	r0, r5
 	bl	arm_copy_from_user
 	cmp	r0, #0
-	beq	.L2029
-.L2018:
+	beq	.L2030
+.L2019:
 	mov	r2, r4
 	movw	r1, #283
-	b	.L2030
-.L2017:
+	b	.L2031
+.L2018:
 	mov	r1, r2
 	mov	r0, r5
 	bl	__memzero
-	b	.L2018
-.L2029:
+	b	.L2019
+.L2030:
 	ldrh	r2, [r5, #6]
 	add	r1, r5, #8
 	ldrh	r0, [r5, #4]
 	bl	rk_sftl_vendor_write
 	mov	r4, r0
-	b	.L2005
-.L2032:
+	b	.L2006
+.L2033:
 	.align	2
-.L2031:
+.L2032:
 	.word	1074034177
 	.word	-8192
-	.word	.LC135
+	.word	.LC133
 	.word	1448232273
 	.size	rk_sftl_vendor_storage_ioctl, .-rk_sftl_vendor_storage_ioctl
 	.align	2
@@ -14218,12 +14205,12 @@ rk_sftl_vendor_register:
 	mov	ip, sp
 	push	{fp, ip, lr, pc}
 	sub	fp, ip, #4
-	ldr	r0, .L2034
+	ldr	r0, .L2035
 	bl	misc_register
 	ldmfd	sp, {fp, sp, pc}
-.L2035:
+.L2036:
 	.align	2
-.L2034:
+.L2035:
 	.word	.LANCHOR2+12
 	.size	rk_sftl_vendor_register, .-rk_sftl_vendor_register
 	.global	g_nand_ops
@@ -14554,7 +14541,7 @@ power_up_flag:
 	.size	rkflash_vender_storage_dev, 40
 rkflash_vender_storage_dev:
 	.word	255
-	.word	.LC136
+	.word	.LC134
 	.word	rk_sftl_vendor_storage_fops
 	.space	28
 	.bss
@@ -15445,29 +15432,25 @@ gp_last_act_superblock:
 .LC124:
 	.ascii	"SWL %x, FSB = %x vpc= %x,ec=%x th=%x\012\000"
 .LC125:
-	.ascii	"g_gc_superblock_free %x %x %x %x %x\012\000"
-.LC126:
-	.ascii	"lpa=%x, ppa=%x\012\000"
-.LC127:
 	.ascii	"FtlWrite: ecc error:%x %x %x\012\000"
-.LC128:
+.LC126:
 	.ascii	"FtlWrite: lpa error:%x %x\012\000"
-.LC129:
+.LC127:
 	.ascii	"%s hash error this.id =%x page =%x pre_id =%x hash "
 	.ascii	"=%x hash_r =%x\012\000"
-.LC130:
+.LC128:
 	.ascii	"%s last blk_id =%x page =%x hash error hash =%x has"
 	.ascii	"h_r =%x\012\000"
-.LC131:
+.LC129:
 	.ascii	"%s scan blk_id =%x page =%x hash error hash =%x has"
 	.ascii	"h_r =%x\012\000"
-.LC132:
+.LC130:
 	.ascii	"write_idblock fail! %x %x %x %x\012\000"
-.LC133:
+.LC131:
 	.ascii	"%s idb buffer alloc fail\012\000"
-.LC134:
+.LC132:
 	.ascii	"%p %x %p %x\012\000"
-.LC135:
+.LC133:
 	.ascii	"copy_from_user error %d %p %p\012\000"
-.LC136:
+.LC134:
 	.ascii	"vendor_storage\000"
diff --git a/drivers/rkflash/rk_sftl_arm_v7_thumb.S b/drivers/rkflash/rk_sftl_arm_v7_thumb.S
index d71f076cf0ba..9103696ff033 100644
--- a/drivers/rkflash/rk_sftl_arm_v7_thumb.S
+++ b/drivers/rkflash/rk_sftl_arm_v7_thumb.S
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0 */
 
 /* Copyright (c) 2018 Rockchip Electronics Co. Ltd.
- * date: 2019-02-20
+ * date: 2019-03-11
  */
 	.arch armv7-a
 	.eabi_attribute 20, 1
@@ -10741,7 +10741,7 @@ rk_ftl_garbage_collect:
 	.fnstart
 	@ args = 0, pretend = 0, frame = 32
 	@ frame_needed = 0, uses_anonymous_args = 0
-	ldr	r3, .L1706
+	ldr	r3, .L1707
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 	mov	r9, r0
@@ -10750,11 +10750,11 @@ rk_ftl_garbage_collect:
 	mov	r4, r3
 	ldr	r0, [r3, #3276]
 	cmp	r0, #0
-	bne	.L1658
+	bne	.L1659
 	ldrh	r2, [r3, #2532]
 	cmp	r2, #47
 	bls	.L1576
-	ldr	r2, .L1706+4
+	ldr	r2, .L1707+4
 	ldrh	r1, [r2, #4]
 	movw	r2, #65535
 	cmp	r1, r2
@@ -10793,7 +10793,7 @@ rk_ftl_garbage_collect:
 	bl	GetSwlReplaceBlock
 	cmp	r0, r6
 	mov	r7, r0
-	bne	.L1662
+	bne	.L1663
 	ldrh	r2, [r4, #228]
 	ldrh	r3, [r4, #3158]
 	cmp	r2, r3
@@ -10822,10 +10822,10 @@ rk_ftl_garbage_collect:
 	movw	r3, #65535
 	cmp	r7, r3
 	bne	.L1592
-.L1656:
+.L1657:
 	ldrh	r3, [r4, #228]
 	cmp	r3, #24
-	bhi	.L1663
+	bhi	.L1664
 	cmp	r3, #16
 	ldrh	r6, [r4, #306]
 	bls	.L1594
@@ -10852,7 +10852,7 @@ rk_ftl_garbage_collect:
 	ldrh	r3, [r4, #2624]
 	add	r3, r3, r3, lsl #1
 	asrs	r3, r3, #2
-.L1702:
+.L1703:
 	strh	r3, [r4, #3156]	@ movhi
 	movs	r3, #0
 	str	r3, [r4, #3168]
@@ -10879,13 +10879,13 @@ rk_ftl_garbage_collect:
 	b	.L1580
 .L1590:
 	movs	r3, #64
-.L1701:
+.L1702:
 	strh	r3, [r4, #3158]	@ movhi
 	b	.L1589
 .L1587:
 	movs	r3, #80
-	b	.L1701
-.L1662:
+	b	.L1702
+.L1663:
 	mov	r5, r0
 .L1586:
 	ldr	r3, [r4, #76]
@@ -10895,7 +10895,7 @@ rk_ftl_garbage_collect:
 	ldrh	r3, [r3, r5, lsl #1]
 	str	r1, [sp, #4]
 	ldr	r1, [r4, #2540]
-	ldr	r0, .L1706+8
+	ldr	r0, .L1707+8
 	ldrh	r1, [r1, r5, lsl #1]
 	str	r1, [sp]
 	mov	r1, r5
@@ -10911,12 +10911,12 @@ rk_ftl_garbage_collect:
 	bls	.L1593
 	lsrs	r6, r6, #2
 	b	.L1593
-.L1663:
+.L1664:
 	movs	r6, #1
 	b	.L1593
 .L1600:
 	movs	r3, #18
-	b	.L1702
+	b	.L1703
 .L1598:
 	ldrh	r3, [r4, #2624]
 	add	r3, r3, r3, lsl #1
@@ -10924,10 +10924,10 @@ rk_ftl_garbage_collect:
 	strh	r3, [r4, #3156]	@ movhi
 .L1597:
 	ldrh	r3, [r4, #3210]
-	cbz	r3, .L1664
+	cbz	r3, .L1665
 	adds	r6, r6, #32
 	uxth	r6, r6
-.L1664:
+.L1665:
 	movw	r7, #65535
 .L1603:
 	ldrh	r3, [r4, #176]
@@ -10952,7 +10952,7 @@ rk_ftl_garbage_collect:
 	movw	r3, #65535
 	cmp	r2, r3
 	beq	.L1612
-	ldr	r0, .L1706+12
+	ldr	r0, .L1707+12
 	bl	make_superblock
 	movs	r3, #0
 	ldrh	r2, [r4, #176]
@@ -10977,9 +10977,9 @@ rk_ftl_garbage_collect:
 	movw	r3, #65535
 	strh	r3, [r4, #176]	@ movhi
 .L1619:
-	ldr	r5, .L1706
+	ldr	r5, .L1707
 	mov	r4, r5
-.L1654:
+.L1655:
 	ldrh	r10, [r5, #176]
 	movw	r3, #65535
 	cmp	r10, r3
@@ -11017,7 +11017,7 @@ rk_ftl_garbage_collect:
 	ldrh	r3, [r4, #2624]
 	add	r3, r3, r3, lsl #1
 	asrs	r3, r3, #2
-.L1703:
+.L1704:
 	strh	r3, [r4, #3156]	@ movhi
 	bl	FtlReadRefresh
 	movs	r0, #0
@@ -11027,12 +11027,12 @@ rk_ftl_garbage_collect:
 	ldrh	r3, [r3, r0, lsl #1]
 	cmp	r3, #4
 	bls	.L1605
-.L1705:
+.L1706:
 	ldrh	r0, [r4, #3664]
 	b	.L1576
 .L1607:
 	movs	r3, #18
-	b	.L1703
+	b	.L1704
 .L1605:
 	ldrh	r0, [r4, #3664]
 	cmp	r0, #0
@@ -11056,7 +11056,7 @@ rk_ftl_garbage_collect:
 	cmp	r3, r5
 	blt	.L1610
 	bl	FtlReadRefresh
-	b	.L1705
+	b	.L1706
 .L1610:
 	cmp	r2, #0
 	bne	.L1609
@@ -11065,9 +11065,9 @@ rk_ftl_garbage_collect:
 	ldrh	r0, [r4, #228]
 	adds	r0, r0, #1
 	b	.L1576
-.L1707:
+.L1708:
 	.align	2
-.L1706:
+.L1707:
 	.word	.LANCHOR0
 	.word	.LANCHOR2
 	.word	.LC124
@@ -11130,7 +11130,7 @@ rk_ftl_garbage_collect:
 	movs	r3, #0
 	strh	r7, [r4, #176]	@ movhi
 	strh	r3, [r4, #3164]	@ movhi
-	b	.L1705
+	b	.L1706
 .L1627:
 	cbnz	r3, .L1628
 	movw	r0, #65535
@@ -11146,8 +11146,8 @@ rk_ftl_garbage_collect:
 	cmp	r3, r2
 	bne	.L1629
 	movw	r2, #717
-	ldr	r1, .L1708
-	ldr	r0, .L1708+4
+	ldr	r1, .L1709
+	ldr	r0, .L1709+4
 	bl	sftl_printk
 .L1629:
 	ldrh	r2, [r4, #176]
@@ -11155,8 +11155,8 @@ rk_ftl_garbage_collect:
 	cmp	r2, r3
 	bne	.L1630
 	movw	r2, #718
-	ldr	r1, .L1708
-	ldr	r0, .L1708+4
+	ldr	r1, .L1709
+	ldr	r0, .L1709+4
 	bl	sftl_printk
 .L1630:
 	ldrh	r2, [r4, #176]
@@ -11164,11 +11164,11 @@ rk_ftl_garbage_collect:
 	cmp	r2, r3
 	bne	.L1631
 	movw	r2, #719
-	ldr	r1, .L1708
-	ldr	r0, .L1708+4
+	ldr	r1, .L1709
+	ldr	r0, .L1709+4
 	bl	sftl_printk
 .L1631:
-	ldr	r0, .L1708+8
+	ldr	r0, .L1709+8
 	bl	make_superblock
 	ldrh	r1, [r4, #176]
 	movs	r3, #0
@@ -11207,7 +11207,7 @@ rk_ftl_garbage_collect:
 	mov	r3, #0
 	it	gt
 	uxthgt	r6, r6
-.L1704:
+.L1705:
 	str	r3, [sp, #20]
 	ldrh	r3, [sp, #20]
 	cmp	r6, r3
@@ -11219,7 +11219,7 @@ rk_ftl_garbage_collect:
 	ldrh	ip, [r5, #236]
 	ldr	r0, [r5, #3188]
 	add	r8, r8, r3
-	ldr	r3, .L1708+12
+	ldr	r3, .L1709+12
 	str	r3, [sp, #24]
 	movs	r3, #0
 	str	r3, [sp, #12]
@@ -11255,7 +11255,7 @@ rk_ftl_garbage_collect:
 	bhi	.L1642
 	ldr	r3, [sp, #20]
 	adds	r3, r3, #1
-	b	.L1704
+	b	.L1705
 .L1642:
 	mov	r8, #20
 	ldr	r3, [r5, #3188]
@@ -11273,8 +11273,8 @@ rk_ftl_garbage_collect:
 	adds	r2, r3, #1
 	bne	.L1640
 	movw	r2, #753
-	ldr	r1, .L1708
-	ldr	r0, .L1708+4
+	ldr	r1, .L1709
+	ldr	r0, .L1709+4
 	str	r3, [sp, #24]
 	bl	sftl_printk
 	ldr	r3, [sp, #24]
@@ -11335,7 +11335,7 @@ rk_ftl_garbage_collect:
 .L1641:
 	bl	Ftl_gc_temp_data_write_back
 	cbz	r0, .L1639
-	ldr	r3, .L1708+16
+	ldr	r3, .L1709+16
 	movs	r2, #0
 	movw	r1, #65535
 	str	r2, [r3, #3276]
@@ -11364,40 +11364,28 @@ rk_ftl_garbage_collect:
 	b	.L1576
 .L1646:
 	ldrh	r6, [r5, #3666]
-	cmp	r6, #0
-	bne	.L1647
-	ldrh	r1, [r5, #176]
+	cbnz	r6, .L1647
+	ldrh	r2, [r5, #176]
 	ldr	r3, [r5, #76]
-	ldrh	r3, [r3, r1, lsl #1]
+	ldrh	r3, [r3, r2, lsl #1]
 	cbz	r3, .L1647
-	ldrh	r0, [r5, #3668]
-	ldrh	r2, [r5, #178]
-	str	r3, [sp]
-	mov	r3, r6
-	str	r0, [sp, #4]
-	ldr	r0, .L1708+20
-	bl	sftl_printk
 .L1648:
 	ldr	r3, [r5, #2556]
 	cmp	r6, r3
-	bcs	.L1650
+	bcs	.L1653
 	movs	r2, #0
 	add	r1, sp, #36
 	mov	r0, r6
 	bl	log2phys
-	ldr	r8, [sp, #36]
-	cmp	r8, #-1
+	ldr	r0, [sp, #36]
+	adds	r3, r0, #1
 	beq	.L1649
-	ubfx	r0, r8, #10, #16
+	ubfx	r0, r0, #10, #16
 	bl	P2V_block_in_plane
 	ldrh	r3, [r5, #176]
 	cmp	r3, r0
 	bne	.L1649
-	mov	r2, r8
-	mov	r1, r6
-	ldr	r0, .L1708+24
-	bl	sftl_printk
-.L1650:
+.L1653:
 	ldr	r3, [r5, #2556]
 	cmp	r6, r3
 	bcc	.L1647
@@ -11417,63 +11405,61 @@ rk_ftl_garbage_collect:
 	str	r3, [r5, #3276]
 	ldrh	r3, [r5, #228]
 	cmp	r3, #2
-	bhi	.L1653
+	bhi	.L1654
 	ldrh	r6, [r5, #306]
-	b	.L1654
+	b	.L1655
 .L1649:
 	adds	r6, r6, #1
 	b	.L1648
-.L1653:
+.L1654:
 	ldrh	r0, [r5, #3664]
 	cmp	r0, #0
 	bne	.L1576
 	adds	r0, r3, #1
 	b	.L1576
-.L1658:
+.L1659:
 	movs	r0, #0
 	b	.L1576
-.L1709:
-	.align	2
-.L1708:
-	.word	.LANCHOR1+568
-	.word	.LC8
-	.word	.LANCHOR0+176
-	.word	.LANCHOR0+190
-	.word	.LANCHOR0
-	.word	.LC125
-	.word	.LC126
 .L1582:
 	cmp	r9, #0
-	beq	.L1656
+	beq	.L1657
 .L1592:
 	ldrh	r2, [r4, #128]
 	movw	r3, #65535
 	cmp	r2, r3
-	bne	.L1667
-.L1657:
+	bne	.L1668
+.L1658:
 	ldrh	r3, [r4, #226]
 	movw	r2, #65535
 	cmp	r3, r2
-	bne	.L1667
+	bne	.L1668
 	cmp	r7, r3
-	bne	.L1667
+	bne	.L1668
 	ldrh	r3, [r4, #176]
 	cmp	r3, r7
 	beq	.L1604
 .L1609:
 	movw	r7, #65535
-.L1667:
+.L1668:
 	movs	r6, #1
 	b	.L1603
 .L1584:
 	cmp	r9, #0
-	beq	.L1656
+	beq	.L1657
 	movw	r7, #65535
-	b	.L1657
+	b	.L1658
+.L1710:
+	.align	2
+.L1709:
+	.word	.LANCHOR1+568
+	.word	.LC8
+	.word	.LANCHOR0+176
+	.word	.LANCHOR0+190
+	.word	.LANCHOR0
 .L1583:
 	cmp	r9, #0
 	bne	.L1609
-	b	.L1656
+	b	.L1657
 	.fnend
 	.size	rk_ftl_garbage_collect, .-rk_ftl_garbage_collect
 	.align	1
@@ -11495,30 +11481,30 @@ FtlRead:
 	mov	r7, r1
 	mov	r10, r3
 	str	r2, [sp, #20]
-	bne	.L1711
+	bne	.L1712
 	mov	r2, r3
 	ldr	r1, [sp, #20]
 	add	r0, r7, #256
 	bl	FtlVendorPartRead
 	mov	r8, r0
-.L1710:
+.L1711:
 	mov	r0, r8
 	add	sp, sp, #60
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
-.L1711:
+.L1712:
 	ldr	r3, [sp, #20]
-	ldr	r4, .L1743
+	ldr	r4, .L1744
 	adds	r3, r1, r3
 	str	r3, [sp, #8]
 	ldr	r2, [sp, #8]
 	ldr	r3, [r4, #344]
 	cmp	r2, r3
-	bhi	.L1732
-	ldr	r3, .L1743+4
+	bhi	.L1733
+	ldr	r3, .L1744+4
 	ldr	r3, [r3]
 	adds	r5, r3, #1
-	beq	.L1733
+	beq	.L1734
 	ldrh	r5, [r4, #262]
 	mov	r0, r7
 	mov	r9, #0
@@ -11547,45 +11533,45 @@ FtlRead:
 	ldr	r3, [r4, #2560]
 	add	r3, r3, r2
 	str	r3, [r4, #2560]
-.L1713:
+.L1714:
 	ldr	r3, [sp, #4]
-	cbnz	r3, .L1730
-	ldr	r3, .L1743
+	cbnz	r3, .L1731
+	ldr	r3, .L1744
 	ldrh	r2, [r3, #3210]
-	cbnz	r2, .L1731
+	cbnz	r2, .L1732
 	ldrh	r3, [r3, #228]
 	cmp	r3, #31
-	bhi	.L1710
-.L1731:
+	bhi	.L1711
+.L1732:
 	movs	r1, #1
 	movs	r0, #0
 	bl	rk_ftl_garbage_collect
-	b	.L1710
-.L1730:
+	b	.L1711
+.L1731:
 	movs	r2, #0
 	add	r1, sp, #52
 	mov	r0, r5
 	bl	log2phys
 	ldr	r2, [sp, #52]
 	adds	r0, r2, #1
-	bne	.L1714
+	bne	.L1715
 	mov	fp, #0
-.L1715:
+.L1716:
 	ldrh	r0, [r4, #262]
 	cmp	fp, r0
-	bcc	.L1717
-.L1718:
+	bcc	.L1718
+.L1719:
 	ldr	r3, [sp, #4]
 	adds	r5, r5, #1
 	subs	r3, r3, #1
 	str	r3, [sp, #4]
-	beq	.L1722
+	beq	.L1723
 	ldrh	r3, [r4, #236]
 	cmp	r6, r3, lsl #2
-	bne	.L1713
-.L1722:
+	bne	.L1714
+.L1723:
 	cmp	r6, #0
-	beq	.L1713
+	beq	.L1714
 	movs	r2, #0
 	mov	r1, r6
 	ldr	r0, [r4, #3292]
@@ -11599,7 +11585,7 @@ FtlRead:
 	ldr	r3, [sp, #28]
 	lsls	r3, r3, #9
 	str	r3, [sp, #36]
-.L1729:
+.L1730:
 	movs	r3, #20
 	ldr	r2, [r4, #3292]
 	mul	r3, r3, fp
@@ -11607,20 +11593,20 @@ FtlRead:
 	add	r2, r2, r3
 	ldr	r1, [r2, #16]
 	cmp	r0, r1
-	bne	.L1724
+	bne	.L1725
 	ldr	r1, [r2, #8]
 	ldr	r2, [r4, #3316]
 	cmp	r1, r2
-	bne	.L1725
+	bne	.L1726
 	str	r3, [sp, #44]
 	mov	r0, r10
 	ldr	r3, [sp, #32]
 	ldr	r2, [sp, #36]
 	add	r1, r1, r3
-.L1742:
+.L1743:
 	bl	ftl_memcpy
 	ldr	r3, [sp, #44]
-.L1725:
+.L1726:
 	ldr	ip, [r4, #3292]
 	add	r2, ip, r3
 	ldr	r0, [r2, #12]
@@ -11640,32 +11626,32 @@ FtlRead:
 	streq	r1, [r4, #2716]
 	ldr	r3, [ip, r3]
 	cmp	r3, #256
-	bne	.L1728
+	bne	.L1729
 	ldr	r0, [r2, #4]
 	ubfx	r0, r0, #10, #16
 	bl	P2V_block_in_plane
 	bl	FtlGcRefreshBlock
-.L1728:
+.L1729:
 	add	fp, fp, #1
 	cmp	r6, fp
-	bne	.L1729
+	bne	.L1730
 	movs	r6, #0
-	b	.L1713
-.L1717:
+	b	.L1714
+.L1718:
 	mla	r0, r0, r5, fp
 	cmp	r7, r0
-	bhi	.L1716
+	bhi	.L1717
 	ldr	r3, [sp, #8]
 	cmp	r3, r0
-	bls	.L1716
+	bls	.L1717
 	subs	r0, r0, r7
 	mov	r1, #512
 	add	r0, r10, r0, lsl #9
 	bl	__memzero
-.L1716:
+.L1717:
 	add	fp, fp, #1
-	b	.L1715
-.L1714:
+	b	.L1716
+.L1715:
 	ldr	r3, [r4, #3292]
 	movs	r1, #20
 	ldrh	fp, [r4, #262]
@@ -11673,7 +11659,7 @@ FtlRead:
 	str	r2, [r3, #4]
 	ldr	r2, [sp, #12]
 	cmp	r5, r2
-	bne	.L1719
+	bne	.L1720
 	ldr	r2, [r4, #3316]
 	mov	r1, fp
 	mov	r0, r7
@@ -11690,9 +11676,9 @@ FtlRead:
 	cmp	r3, fp
 	str	r3, [sp, #28]
 	ldr	r3, [sp, #32]
-	bne	.L1720
+	bne	.L1721
 	str	r10, [r3, #8]
-.L1720:
+.L1721:
 	ldrh	r2, [r4, #316]
 	ldr	r1, [r4, #3340]
 	str	r5, [r3, #16]
@@ -11701,34 +11687,34 @@ FtlRead:
 	bic	r2, r2, #3
 	add	r2, r2, r1
 	str	r2, [r3, #12]
-	b	.L1718
-.L1719:
+	b	.L1719
+.L1720:
 	ldr	r2, [sp, #16]
 	cmp	r5, r2
-	bne	.L1721
+	bne	.L1722
 	ldr	r2, [r4, #3320]
 	ldr	r1, [sp, #8]
 	str	r2, [r3, #8]
 	mul	r2, fp, r5
 	sub	r9, r1, r2
 	cmp	fp, r9
-	bne	.L1720
-.L1741:
+	bne	.L1721
+.L1742:
 	subs	r2, r2, r7
 	add	r2, r10, r2, lsl #9
 	str	r2, [r3, #8]
-	b	.L1720
-.L1721:
+	b	.L1721
+.L1722:
 	mul	r2, r5, fp
-	b	.L1741
-.L1724:
+	b	.L1742
+.L1725:
 	ldr	r0, [sp, #16]
 	cmp	r0, r1
-	bne	.L1725
+	bne	.L1726
 	ldr	r1, [r2, #8]
 	ldr	r2, [r4, #3320]
 	cmp	r1, r2
-	bne	.L1725
+	bne	.L1726
 	str	r3, [sp, #44]
 	ldrh	r0, [r4, #262]
 	ldr	r3, [sp, #16]
@@ -11736,16 +11722,16 @@ FtlRead:
 	muls	r0, r3, r0
 	subs	r0, r0, r7
 	add	r0, r10, r0, lsl #9
-	b	.L1742
-.L1732:
-	mov	r8, #-1
-	b	.L1710
+	b	.L1743
 .L1733:
+	mov	r8, #-1
+	b	.L1711
+.L1734:
 	mov	r8, r3
-	b	.L1710
-.L1744:
+	b	.L1711
+.L1745:
 	.align	2
-.L1743:
+.L1744:
 	.word	.LANCHOR0
 	.word	.LANCHOR2
 	.fnend
@@ -11788,26 +11774,26 @@ FtlWrite:
 	mov	r10, r1
 	str	r2, [sp, #12]
 	str	r3, [sp, #8]
-	bne	.L1747
+	bne	.L1748
 	mov	r2, r3
 	ldr	r1, [sp, #12]
 	add	r0, r10, #256
 	bl	FtlVendorPartWrite
-.L1746:
+.L1747:
 	add	sp, sp, #68
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
-.L1747:
+.L1748:
 	ldr	r3, [sp, #12]
-	ldr	r5, .L1798
+	ldr	r5, .L1799
 	adds	r6, r1, r3
 	ldr	r3, [r5, #344]
 	cmp	r6, r3
-	bhi	.L1784
-	ldr	r4, .L1798+4
+	bhi	.L1785
+	ldr	r4, .L1799+4
 	ldr	r0, [r4]
 	adds	r7, r0, #1
-	beq	.L1746
+	beq	.L1747
 	ldrh	r7, [r5, #262]
 	mov	r3, #2048
 	str	r3, [r5, #3672]
@@ -11833,68 +11819,68 @@ FtlWrite:
 	add	r3, r3, r2
 	str	r3, [r5, #2568]
 	ldr	r3, [r4, #8]
-	cbz	r3, .L1786
+	cbz	r3, .L1787
 	ldrh	r2, [r5, #32]
 	add	r3, r5, #28
 	adds	r5, r5, #80
 	cmp	r2, #0
 	it	ne
 	movne	r5, r3
-.L1749:
-	ldr	r7, [sp, #4]
-	ldr	r4, .L1798
 .L1750:
+	ldr	r7, [sp, #4]
+	ldr	r4, .L1799
+.L1751:
 	ldr	r3, [sp]
-	cbnz	r3, .L1779
+	cbnz	r3, .L1780
 	mov	r0, r3
 	ldr	r1, [sp, #24]
 	bl	rk_ftl_garbage_collect
 	ldrh	r3, [r4, #228]
 	cmp	r3, #5
-	bls	.L1780
-.L1782:
+	bls	.L1781
+.L1783:
 	movs	r0, #0
-	b	.L1746
-.L1786:
+	b	.L1747
+.L1787:
 	adds	r5, r5, #28
-	b	.L1749
-.L1779:
+	b	.L1750
+.L1780:
 	ldrb	r2, [r5, #6]	@ zero_extendqisi2
 	ldrh	r3, [r4, #236]
 	cmp	r2, r3
-	bcc	.L1751
+	bcc	.L1752
 	movw	r2, #1038
-	ldr	r1, .L1798+8
-	ldr	r0, .L1798+12
+	ldr	r1, .L1799+8
+	ldr	r0, .L1799+12
 	bl	sftl_printk
-.L1751:
+.L1752:
 	ldrh	r2, [r5, #4]
-	cbnz	r2, .L1752
-	ldr	r3, .L1798+16
-	ldr	r6, .L1798+4
+	cbnz	r2, .L1753
+	ldr	r3, .L1799+16
+	ldr	r6, .L1799+4
 	cmp	r5, r3
-	bne	.L1753
+	bne	.L1754
 	ldrh	r8, [r4, #84]
 	cmp	r8, #0
-	bne	.L1754
+	bne	.L1755
 	add	r0, r5, #52
 	bl	allocate_new_data_superblock
 	str	r8, [r6, #8]
-.L1754:
-	ldr	r5, .L1798+16
-	ldr	r0, .L1798+16
+.L1755:
+	ldr	r5, .L1799+16
+	ldr	r0, .L1799+16
 	bl	allocate_new_data_superblock
 	ldr	r2, [r6, #8]
 	add	r3, r5, #52
 	cmp	r2, #0
 	it	ne
 	movne	r5, r3
-.L1755:
+.L1756:
 	ldrh	r3, [r5, #4]
-	cbnz	r3, .L1752
+	cbnz	r3, .L1753
 	mov	r0, r5
 	bl	allocate_new_data_superblock
-.L1752:
+.L1753:
 	ldrh	r2, [r5, #4]
 	ldr	r3, [sp]
 	cmp	r2, r3
@@ -11909,18 +11895,18 @@ FtlWrite:
 	str	r2, [sp, #36]
 	ldrb	r2, [r5, #6]	@ zero_extendqisi2
 	cmp	r2, r3
-	bcc	.L1756
+	bcc	.L1757
 	movw	r2, #1071
-	ldr	r1, .L1798+8
-	ldr	r0, .L1798+12
+	ldr	r1, .L1799+8
+	ldr	r0, .L1799+12
 	bl	sftl_printk
-.L1756:
-	mov	fp, #0
 .L1757:
+	mov	fp, #0
+.L1758:
 	ldr	r3, [sp, #36]
 	cmp	fp, r3
-	bne	.L1777
-.L1758:
+	bne	.L1778
+.L1759:
 	mov	r3, r5
 	movs	r2, #0
 	mov	r1, fp
@@ -11928,30 +11914,30 @@ FtlWrite:
 	bl	FtlProgPages
 	ldr	r3, [sp]
 	cmp	fp, r3
-	bls	.L1778
+	bls	.L1779
 	movw	r2, #1149
-	ldr	r1, .L1798+8
-	ldr	r0, .L1798+12
+	ldr	r1, .L1799+8
+	ldr	r0, .L1799+12
 	bl	sftl_printk
-.L1778:
+.L1779:
 	ldr	r3, [sp]
 	sub	r3, r3, fp
 	str	r3, [sp]
-	b	.L1750
-.L1753:
+	b	.L1751
+.L1754:
 	str	r2, [r6, #8]
 	ldrh	r2, [r4, #32]
-	cbnz	r2, .L1789
+	cbnz	r2, .L1790
 	mov	r0, r5
 	bl	allocate_new_data_superblock
-	b	.L1755
-.L1789:
+	b	.L1756
+.L1790:
 	mov	r5, r3
-	b	.L1752
-.L1777:
+	b	.L1753
+.L1778:
 	ldrh	r3, [r5, #4]
 	cmp	r3, #0
-	beq	.L1758
+	beq	.L1759
 	movs	r2, #0
 	add	r1, sp, #40
 	mov	r0, r7
@@ -11978,10 +11964,10 @@ FtlWrite:
 	bl	ftl_memset
 	ldr	r3, [sp, #4]
 	cmp	r7, r3
-	beq	.L1759
+	beq	.L1760
 	ldr	r3, [sp, #20]
 	cmp	r7, r3
-	bne	.L1794
+	bne	.L1795
 	ldrh	r2, [r4, #262]
 	ldr	r3, [sp, #12]
 	smulbb	r2, r2, r7
@@ -11990,8 +11976,8 @@ FtlWrite:
 	str	r3, [sp, #16]
 	subs	r6, r6, r2
 	uxth	r6, r6
-	b	.L1762
-.L1759:
+	b	.L1763
+.L1760:
 	ldrh	r6, [r4, #262]
 	mov	r0, r10
 	mov	r1, r6
@@ -12002,11 +11988,11 @@ FtlWrite:
 	cmp	r6, r3
 	it	cs
 	movcs	r6, r3
-.L1762:
+.L1763:
 	ldrh	r3, [r4, #262]
 	cmp	r6, r3
 	ldr	r3, [sp, #4]
-	bne	.L1763
+	bne	.L1764
 	cmp	r7, r3
 	ldr	r3, [r4, #3300]
 	itte	ne
@@ -12019,16 +12005,16 @@ FtlWrite:
 	streq	r2, [r3, #8]
 	addne	r6, r2, r6, lsl #9
 	strne	r6, [r3, #8]
-.L1765:
+.L1766:
 	ldrb	r2, [r5, #6]	@ zero_extendqisi2
 	ldrh	r3, [r4, #236]
 	cmp	r2, r3
-	bcc	.L1774
+	bcc	.L1775
 	movw	r2, #1140
-	ldr	r1, .L1798+8
-	ldr	r0, .L1798+12
+	ldr	r1, .L1799+8
+	ldr	r0, .L1799+12
 	bl	sftl_printk
-.L1774:
+.L1775:
 	ldr	r2, [sp, #32]
 	movw	r3, #61589
 	ldr	r1, [sp, #28]
@@ -12047,8 +12033,8 @@ FtlWrite:
 	str	r3, [r9, #12]
 	ldrh	r3, [r5]
 	strh	r3, [r9, #2]	@ movhi
-	b	.L1757
-.L1763:
+	b	.L1758
+.L1764:
 	cmp	r7, r3
 	ldr	r3, [r4, #3300]
 	ite	eq
@@ -12058,7 +12044,7 @@ FtlWrite:
 	str	r2, [r3, #8]
 	ldr	r3, [sp, #40]
 	adds	r0, r3, #1
-	beq	.L1768
+	beq	.L1769
 	str	r3, [sp, #48]
 	movs	r1, #1
 	ldr	r3, [r4, #3300]
@@ -12073,66 +12059,66 @@ FtlWrite:
 	bl	FlashReadPages
 	ldr	r3, [sp, #44]
 	adds	r1, r3, #1
-	bne	.L1769
+	bne	.L1770
 	ldr	r2, [r4, #2716]
-	ldr	r0, .L1798+20
+	ldr	r0, .L1799+20
 	adds	r2, r2, #1
 	str	r2, [r4, #2716]
 	mov	r2, r7
 	ldr	r1, [r9, #8]
 	bl	sftl_printk
-.L1772:
+.L1773:
 	ldr	r3, [sp, #4]
 	lsls	r2, r6, #9
 	cmp	r7, r3
-	bne	.L1773
+	bne	.L1774
 	ldr	r3, [r4, #3300]
 	ldr	r1, [sp, #8]
 	add	r3, r3, r8
 	ldr	r0, [r3, #8]
 	ldr	r3, [sp, #16]
 	add	r0, r0, r3, lsl #9
-.L1796:
+.L1797:
 	bl	ftl_memcpy
-	b	.L1765
-.L1799:
+	b	.L1766
+.L1800:
 	.align	2
-.L1798:
+.L1799:
 	.word	.LANCHOR0
 	.word	.LANCHOR2
 	.word	.LANCHOR1+591
 	.word	.LC8
 	.word	.LANCHOR0+28
-	.word	.LC127
-.L1769:
+	.word	.LC125
+.L1770:
 	ldr	r3, [r9, #8]
 	cmp	r7, r3
-	beq	.L1771
+	beq	.L1772
 	ldr	r3, [r4, #2716]
 	mov	r2, r7
-	ldr	r0, .L1800
+	ldr	r0, .L1801
 	adds	r3, r3, #1
 	str	r3, [r4, #2716]
 	ldr	r1, [r9, #8]
 	bl	sftl_printk
-.L1771:
+.L1772:
 	ldr	r3, [r9, #8]
 	cmp	r7, r3
-	beq	.L1772
+	beq	.L1773
 	movw	r2, #1125
-	ldr	r1, .L1800+4
-	ldr	r0, .L1800+8
+	ldr	r1, .L1801+4
+	ldr	r0, .L1801+8
 	bl	sftl_printk
-	b	.L1772
-.L1768:
+	b	.L1773
+.L1769:
 	ldr	r3, [r4, #3300]
 	movs	r1, #0
 	ldrh	r2, [r4, #314]
 	add	r3, r3, r8
 	ldr	r0, [r3, #8]
 	bl	ftl_memset
-	b	.L1772
-.L1773:
+	b	.L1773
+.L1774:
 	ldrh	r1, [r4, #262]
 	ldr	r0, [sp, #8]
 	ldr	r3, [r4, #3300]
@@ -12141,8 +12127,8 @@ FtlWrite:
 	sub	r1, r1, r10
 	add	r1, r0, r1, lsl #9
 	ldr	r0, [r3, #8]
-	b	.L1796
-.L1794:
+	b	.L1797
+.L1795:
 	ldr	r3, [r4, #3300]
 	ldr	r2, [sp, #8]
 	add	r8, r8, r3
@@ -12151,22 +12137,22 @@ FtlWrite:
 	sub	r3, r3, r10
 	add	r3, r2, r3, lsl #9
 	str	r3, [r8, #8]
-	b	.L1765
-.L1780:
+	b	.L1766
+.L1781:
 	mov	r5, #256
 	movw	r6, #65535
-.L1783:
+.L1784:
 	ldrh	r3, [r4, #176]
 	cmp	r3, r6
-	bne	.L1781
+	bne	.L1782
 	ldrh	r3, [r4, #226]
 	cmp	r3, r6
-	bne	.L1781
+	bne	.L1782
 	movs	r0, #0
 	bl	List_get_gc_head_node
 	uxth	r0, r0
 	bl	FtlGcRefreshBlock
-.L1781:
+.L1782:
 	movs	r1, #1
 	movs	r3, #128
 	mov	r0, r1
@@ -12178,17 +12164,17 @@ FtlWrite:
 	bl	rk_ftl_garbage_collect
 	ldrh	r3, [r4, #228]
 	cmp	r3, #2
-	bhi	.L1782
+	bhi	.L1783
 	subs	r5, r5, #1
-	bne	.L1783
-	b	.L1782
-.L1784:
+	bne	.L1784
+	b	.L1783
+.L1785:
 	mov	r0, #-1
-	b	.L1746
-.L1801:
+	b	.L1747
+.L1802:
 	.align	2
-.L1800:
-	.word	.LC128
+.L1801:
+	.word	.LC126
 	.word	.LANCHOR1+591
 	.word	.LC8
 	.fnend
@@ -12225,7 +12211,7 @@ FtlLoadSysInfo:
 	.save {r4, r5, r6, r7, r8, r9, r10, lr}
 	.pad #16
 	movs	r1, #0
-	ldr	r4, .L1833
+	ldr	r4, .L1834
 	ldr	r3, [r4, #3304]
 	ldrh	r2, [r4, #244]
 	ldr	r0, [r4, #76]
@@ -12237,32 +12223,32 @@ FtlLoadSysInfo:
 	ldrh	r0, [r4, #2628]
 	movw	r3, #65535
 	cmp	r0, r3
-	bne	.L1804
-.L1815:
+	bne	.L1805
+.L1816:
 	mov	r0, #-1
-.L1803:
+.L1804:
 	add	sp, sp, #16
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r9, r10, pc}
-.L1804:
+.L1805:
 	movs	r1, #1
-	ldr	r8, .L1833+20
+	ldr	r8, .L1834+20
 	bl	FtlGetLastWrittenPage
-	ldr	r9, .L1833+4
+	ldr	r9, .L1834+4
 	add	r7, r4, #3456
 	ldrsh	r6, [r4, #2628]
 	sxth	r5, r0
 	adds	r0, r0, #1
 	strh	r0, [r4, #2630]	@ movhi
-.L1806:
+.L1807:
 	cmp	r5, #0
-	bge	.L1812
+	bge	.L1813
 	movw	r2, #1465
-	ldr	r1, .L1833+4
-	ldr	r0, .L1833+8
+	ldr	r1, .L1834+4
+	ldr	r0, .L1834+8
 	bl	sftl_printk
-	b	.L1811
-.L1812:
+	b	.L1812
+.L1813:
 	orr	r3, r5, r6, lsl #10
 	movs	r2, #1
 	mov	r1, r2
@@ -12274,15 +12260,15 @@ FtlLoadSysInfo:
 	ldr	r3, [r4, #3468]
 	ldr	r10, [r3, #12]
 	cmp	r10, #0
-	beq	.L1807
+	beq	.L1808
 	ldr	r3, [r4, #3456]
 	adds	r3, r3, #1
-	beq	.L1807
+	beq	.L1808
 	ldrh	r1, [r4, #314]
 	ldr	r0, [r4, #3464]
 	bl	js_hash
 	cmp	r10, r0
-	beq	.L1807
+	beq	.L1808
 	ldrh	r3, [r4, #2632]
 	mov	r2, r6
 	str	r0, [sp, #8]
@@ -12290,48 +12276,48 @@ FtlLoadSysInfo:
 	str	r10, [sp, #4]
 	str	r3, [sp]
 	mov	r3, r5
-	ldr	r0, .L1833+12
+	ldr	r0, .L1834+12
 	bl	sftl_printk
-	cbnz	r5, .L1808
+	cbnz	r5, .L1809
 	ldrh	r3, [r4, #2632]
 	cmp	r6, r3
-	beq	.L1808
+	beq	.L1809
 	ldrh	r5, [r4, #308]
 	sxth	r6, r3
-.L1810:
+.L1811:
 	subs	r5, r5, #1
 	sxth	r5, r5
-	b	.L1806
-.L1808:
+	b	.L1807
+.L1809:
 	mov	r3, #-1
 	str	r3, [r4, #3456]
-.L1807:
+.L1808:
 	ldr	r3, [r4, #3456]
 	adds	r3, r3, #1
-	beq	.L1810
+	beq	.L1811
 	ldr	r3, [r4, #3304]
 	ldr	r3, [r3]
 	cmp	r3, r8
-	bne	.L1810
+	bne	.L1811
 	ldr	r3, [r4, #3336]
 	ldrh	r2, [r3]
 	movw	r3, #61604
 	cmp	r2, r3
-	bne	.L1810
-.L1811:
+	bne	.L1811
+.L1812:
 	ldrh	r3, [r4, #244]
 	ldrh	r2, [r4, #314]
 	adds	r3, r3, #24
 	cmp	r2, r3, lsl #1
-	bcs	.L1814
+	bcs	.L1815
 	movw	r2, #1467
-	ldr	r1, .L1833+4
-	ldr	r0, .L1833+8
+	ldr	r1, .L1834+4
+	ldr	r0, .L1834+8
 	bl	sftl_printk
-.L1814:
+.L1815:
 	movs	r2, #48
 	ldr	r1, [r4, #3464]
-	ldr	r0, .L1833+16
+	ldr	r0, .L1834+16
 	bl	ftl_memcpy
 	ldrh	r2, [r4, #244]
 	ldr	r1, [r4, #3464]
@@ -12350,15 +12336,15 @@ FtlLoadSysInfo:
 	add	r1, r1, r3
 	bl	ftl_memcpy
 	ldr	r2, [r4, #2472]
-	ldr	r3, .L1833+20
+	ldr	r3, .L1834+20
 	cmp	r2, r3
-	bne	.L1815
+	bne	.L1816
 	ldrb	r2, [r4, #2482]	@ zero_extendqisi2
 	ldrh	r3, [r4, #258]
 	ldrh	r5, [r4, #2480]
 	cmp	r2, r3
 	strh	r5, [r4, #2634]	@ movhi
-	bne	.L1815
+	bne	.L1816
 	ldrh	r3, [r4, #306]
 	ldrh	r2, [r4, #262]
 	ldr	r6, [r4, #248]
@@ -12374,12 +12360,12 @@ FtlLoadSysInfo:
 	bl	__aeabi_uidiv
 	cmp	r5, r6
 	strh	r0, [r4, #2624]	@ movhi
-	bls	.L1816
+	bls	.L1817
 	movw	r2, #1489
-	ldr	r1, .L1833+4
-	ldr	r0, .L1833+8
+	ldr	r1, .L1834+4
+	ldr	r0, .L1834+8
 	bl	sftl_printk
-.L1816:
+.L1817:
 	ldrh	r3, [r4, #2488]
 	ldrh	r1, [r4, #2486]
 	lsrs	r2, r3, #6
@@ -12434,40 +12420,40 @@ FtlLoadSysInfo:
 	strhi	r3, [r4, #2596]
 	movw	r3, #65535
 	cmp	r1, r3
-	beq	.L1819
-	ldr	r0, .L1833+24
-	bl	make_superblock
-.L1819:
-	ldrh	r2, [r4, #80]
-	movw	r3, #65535
-	cmp	r2, r3
 	beq	.L1820
-	ldr	r0, .L1833+28
+	ldr	r0, .L1834+24
 	bl	make_superblock
 .L1820:
-	ldrh	r2, [r4, #128]
+	ldrh	r2, [r4, #80]
 	movw	r3, #65535
 	cmp	r2, r3
 	beq	.L1821
-	ldr	r0, .L1833+32
+	ldr	r0, .L1834+28
 	bl	make_superblock
 .L1821:
-	ldrh	r2, [r4, #176]
+	ldrh	r2, [r4, #128]
 	movw	r3, #65535
 	cmp	r2, r3
 	beq	.L1822
-	ldr	r0, .L1833+36
+	ldr	r0, .L1834+32
 	bl	make_superblock
 .L1822:
+	ldrh	r2, [r4, #176]
+	movw	r3, #65535
+	cmp	r2, r3
+	beq	.L1823
+	ldr	r0, .L1834+36
+	bl	make_superblock
+.L1823:
 	movs	r0, #0
-	b	.L1803
-.L1834:
+	b	.L1804
+.L1835:
 	.align	2
-.L1833:
+.L1834:
 	.word	.LANCHOR0
 	.word	.LANCHOR1+600
 	.word	.LC8
-	.word	.LC129
+	.word	.LC127
 	.word	.LANCHOR0+2472
 	.word	1179929683
 	.word	.LANCHOR0+28
@@ -12497,7 +12483,7 @@ FtlMapTblRecovery:
 	ldrh	r10, [r0, #6]
 	str	r3, [sp, #8]
 	ldr	r3, [r0, #16]
-	ldr	r4, .L1876
+	ldr	r4, .L1877
 	ldr	r9, [r0, #12]
 	lsl	r2, r10, #2
 	str	r3, [sp, #16]
@@ -12518,16 +12504,16 @@ FtlMapTblRecovery:
 	mov	r8, r3
 	str	r3, [r5, #32]
 	str	r3, [r5, #28]
-.L1836:
+.L1837:
 	ldr	r3, [sp, #12]
 	sxth	r6, r8
 	cmp	r6, r3
-	bge	.L1855
+	bge	.L1856
 	ldr	r3, [sp, #12]
 	lsls	r7, r6, #1
 	subs	r3, r3, #1
 	cmp	r6, r3
-	bne	.L1837
+	bne	.L1838
 	movs	r1, #1
 	ldrh	r0, [r9, r6, lsl #1]
 	bl	FtlGetLastWrittenPage
@@ -12541,22 +12527,22 @@ FtlMapTblRecovery:
 	strh	r0, [r5, #2]	@ movhi
 	ldr	r3, [r3, r6, lsl #2]
 	str	r3, [r5, #28]
-.L1838:
+.L1839:
 	ldr	r3, [sp, #12]
 	sxth	r9, r8
 	adds	r2, r3, #1
 	cmp	r9, r2
-	blt	.L1841
-.L1855:
+	blt	.L1842
+.L1856:
 	mov	r0, r5
 	bl	ftl_free_no_use_map_blk
 	ldrh	r2, [r5, #2]
 	ldrh	r3, [r4, #308]
 	cmp	r2, r3
-	bne	.L1843
+	bne	.L1844
 	mov	r0, r5
 	bl	ftl_map_blk_alloc_new_blk
-.L1843:
+.L1844:
 	mov	r0, r5
 	bl	ftl_map_blk_gc
 	mov	r0, r5
@@ -12565,9 +12551,9 @@ FtlMapTblRecovery:
 	add	sp, sp, #36
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
-.L1841:
+.L1842:
 	ldrh	r2, [r7]
-	ldr	r0, .L1876+4
+	ldr	r0, .L1877+4
 	orr	r2, r9, r2, lsl #10
 	str	r2, [r4, #3460]
 	movs	r2, #1
@@ -12576,32 +12562,32 @@ FtlMapTblRecovery:
 	ldr	r2, [r4, #3468]
 	ldr	r2, [r2, #12]
 	str	r2, [sp, #16]
-	cbz	r2, .L1839
+	cbz	r2, .L1840
 	ldr	r1, [r4, #3456]
 	adds	r1, r1, #1
-	beq	.L1839
+	beq	.L1840
 	ldrh	r1, [r4, #314]
 	ldr	r0, [r4, #3464]
 	bl	js_hash
 	ldr	r2, [sp, #16]
 	cmp	r2, r0
-	beq	.L1839
+	beq	.L1840
 	str	r0, [sp, #4]
 	mov	r3, r9
 	str	r2, [sp]
 	mov	r2, r6
-	ldr	r1, .L1876+8
-	ldr	r0, .L1876+12
+	ldr	r1, .L1877+8
+	ldr	r0, .L1877+12
 	bl	sftl_printk
 	mov	r3, #-1
 	str	r3, [r4, #3456]
-.L1839:
+.L1840:
 	ldr	r3, [r4, #3456]
 	adds	r3, r3, #1
-	beq	.L1840
+	beq	.L1841
 	ldrh	r3, [fp, #8]
 	cmp	r10, r3
-	bls	.L1840
+	bls	.L1841
 	ldrh	r1, [fp]
 	ldrh	r2, [r5, #4]
 	cmp	r1, r2
@@ -12609,12 +12595,12 @@ FtlMapTblRecovery:
 	ldreq	r2, [r4, #3460]
 	ldreq	r1, [sp, #8]
 	streq	r2, [r1, r3, lsl #2]
-.L1840:
+.L1841:
 	add	r8, r8, #1
-	b	.L1838
-.L1837:
+	b	.L1839
+.L1838:
 	ldr	r3, [r4, #3304]
-	ldr	r0, .L1876+4
+	ldr	r0, .L1877+4
 	str	r3, [r4, #3464]
 	add	r3, r9, r7
 	ldrh	r2, [r9, r6, lsl #1]
@@ -12628,24 +12614,24 @@ FtlMapTblRecovery:
 	bl	FlashReadPages
 	ldr	r3, [r4, #3456]
 	adds	r3, r3, #1
-	beq	.L1857
+	beq	.L1858
 	ldrh	r2, [fp]
 	ldrh	r3, [r5, #4]
 	cmp	r2, r3
-	bne	.L1857
+	bne	.L1858
 	ldrh	r2, [fp, #8]
 	movw	r3, #64245
 	cmp	r2, r3
-	beq	.L1845
-.L1857:
+	beq	.L1846
+.L1858:
 	movs	r7, #0
-.L1846:
+.L1847:
 	ldrh	r2, [r4, #308]
 	sxth	r3, r7
 	cmp	r3, r2
-	bge	.L1853
+	bge	.L1854
 	ldr	r2, [sp, #20]
-	ldr	r0, .L1876+4
+	ldr	r0, .L1877+4
 	str	r3, [sp, #28]
 	ldrh	r2, [r2]
 	orr	r2, r3, r2, lsl #10
@@ -12656,32 +12642,32 @@ FtlMapTblRecovery:
 	ldr	r2, [r4, #3468]
 	ldr	r2, [r2, #12]
 	str	r2, [sp, #24]
-	cbz	r2, .L1850
+	cbz	r2, .L1851
 	ldr	r1, [r4, #3456]
 	adds	r1, r1, #1
-	beq	.L1850
+	beq	.L1851
 	ldrh	r1, [r4, #314]
 	ldr	r0, [r4, #3464]
 	bl	js_hash
 	ldr	r2, [sp, #24]
 	cmp	r2, r0
-	beq	.L1850
+	beq	.L1851
 	str	r0, [sp, #4]
 	str	r2, [sp]
 	mov	r2, r6
 	ldr	r3, [sp, #28]
-	ldr	r1, .L1876+8
-	ldr	r0, .L1876+16
+	ldr	r1, .L1877+8
+	ldr	r0, .L1877+16
 	bl	sftl_printk
 	mov	r3, #-1
 	str	r3, [r4, #3456]
-.L1850:
+.L1851:
 	ldr	r3, [r4, #3456]
 	adds	r3, r3, #1
-	beq	.L1851
+	beq	.L1852
 	ldrh	r3, [fp, #8]
 	cmp	r10, r3
-	bls	.L1851
+	bls	.L1852
 	ldrh	r1, [fp]
 	ldrh	r2, [r5, #4]
 	cmp	r1, r2
@@ -12689,42 +12675,42 @@ FtlMapTblRecovery:
 	ldreq	r2, [r4, #3460]
 	ldreq	r1, [sp, #8]
 	streq	r2, [r1, r3, lsl #2]
-.L1851:
+.L1852:
 	adds	r7, r7, #1
-	b	.L1846
-.L1845:
+	b	.L1847
+.L1846:
 	movs	r1, #0
 	movs	r0, #4
-.L1847:
+.L1848:
 	ldrh	r2, [r4, #308]
 	sxth	r3, r1
 	subs	r2, r2, #1
 	cmp	r3, r2
-	blt	.L1849
-.L1853:
+	blt	.L1850
+.L1854:
 	add	r8, r8, #1
-	b	.L1836
-.L1849:
+	b	.L1837
+.L1850:
 	ldr	r6, [r4, #3304]
 	ldr	r2, [r6, r3, lsl #3]
 	uxth	r7, r2
 	cmp	r10, r7
-	bls	.L1848
+	bls	.L1849
 	add	r3, r0, r3, lsl #3
 	ldr	r3, [r6, r3]
 	ldr	r6, [sp, #8]
 	str	r3, [r6, r7, lsl #2]
-.L1848:
+.L1849:
 	adds	r1, r1, #1
-	b	.L1847
-.L1877:
+	b	.L1848
+.L1878:
 	.align	2
-.L1876:
+.L1877:
 	.word	.LANCHOR0
 	.word	.LANCHOR0+3456
 	.word	.LANCHOR1+615
-	.word	.LC130
-	.word	.LC131
+	.word	.LC128
+	.word	.LC129
 	.fnend
 	.size	FtlMapTblRecovery, .-FtlMapTblRecovery
 	.align	1
@@ -12738,7 +12724,7 @@ FtlLoadVonderInfo:
 	.fnstart
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 0, uses_anonymous_args = 0
-	ldr	r0, .L1879
+	ldr	r0, .L1880
 	push	{r3, lr}
 	.save {r3, lr}
 	ldrh	r3, [r0, #324]
@@ -12761,9 +12747,9 @@ FtlLoadVonderInfo:
 	bl	FtlMapTblRecovery
 	movs	r0, #0
 	pop	{r3, pc}
-.L1880:
+.L1881:
 	.align	2
-.L1879:
+.L1880:
 	.word	.LANCHOR0
 	.fnend
 	.size	FtlLoadVonderInfo, .-FtlLoadVonderInfo
@@ -12781,13 +12767,13 @@ FtlLoadMapInfo:
 	push	{r3, lr}
 	.save {r3, lr}
 	bl	FtlL2PDataInit
-	ldr	r0, .L1882
+	ldr	r0, .L1883
 	bl	FtlMapTblRecovery
 	movs	r0, #0
 	pop	{r3, pc}
-.L1883:
+.L1884:
 	.align	2
-.L1882:
+.L1883:
 	.word	.LANCHOR0+3396
 	.fnend
 	.size	FtlLoadMapInfo, .-FtlLoadMapInfo
@@ -12805,7 +12791,7 @@ FtlSysBlkInit:
 	push	{r4, r5, r6, lr}
 	.save {r4, r5, r6, lr}
 	movs	r3, #0
-	ldr	r4, .L1900
+	ldr	r4, .L1901
 	ldrh	r0, [r4, #240]
 	strh	r3, [r4, #3476]	@ movhi
 	bl	FtlFreeSysBlkQueueInit
@@ -12813,17 +12799,17 @@ FtlSysBlkInit:
 	ldrh	r2, [r4, #2628]
 	movw	r3, #65535
 	cmp	r2, r3
-	bne	.L1885
-.L1887:
+	bne	.L1886
+.L1888:
 	mov	r5, #-1
-.L1884:
+.L1885:
 	mov	r0, r5
 	pop	{r4, r5, r6, pc}
-.L1885:
+.L1886:
 	bl	FtlLoadSysInfo
 	mov	r5, r0
 	cmp	r0, #0
-	bne	.L1887
+	bne	.L1888
 	bl	FtlLoadMapInfo
 	bl	FtlLoadVonderInfo
 	bl	Ftl_load_ext_data
@@ -12837,23 +12823,23 @@ FtlSysBlkInit:
 	mov	r3, r5
 	ldr	r2, [r4, #2544]
 	movs	r0, #12
-.L1888:
+.L1889:
 	cmp	r3, r1
-	bge	.L1893
+	bge	.L1894
 	mla	r6, r0, r3, r2
 	ldr	r6, [r6, #4]
 	cmp	r6, #0
-	bge	.L1889
-.L1893:
+	bge	.L1890
+.L1894:
 	ldrh	r2, [r4, #2500]
 	cmp	r3, r1
 	add	r2, r2, #1
 	strh	r2, [r4, #2500]	@ movhi
-	bge	.L1899
-.L1890:
-	ldr	r0, .L1900+4
+	bge	.L1900
+.L1891:
+	ldr	r0, .L1901+4
 	bl	FtlSuperblockPowerLostFix
-	ldr	r0, .L1900+8
+	ldr	r0, .L1901+8
 	bl	FtlSuperblockPowerLostFix
 	ldrh	r1, [r4, #28]
 	ldr	r2, [r4, #76]
@@ -12882,37 +12868,37 @@ FtlSysBlkInit:
 	bl	l2p_flush
 	bl	FtlVpcTblFlush
 	bl	FtlVpcTblFlush
-	b	.L1894
-.L1889:
+	b	.L1895
+.L1890:
 	adds	r3, r3, #1
-	b	.L1888
-.L1899:
+	b	.L1889
+.L1900:
 	ldrh	r3, [r4, #3476]
 	cmp	r3, #0
-	bne	.L1890
-.L1894:
+	bne	.L1891
+.L1895:
 	ldrh	r0, [r4, #28]
 	movw	r3, #65535
 	cmp	r0, r3
-	beq	.L1895
+	beq	.L1896
 	ldrh	r3, [r4, #32]
-	cbnz	r3, .L1895
+	cbnz	r3, .L1896
 	ldrh	r3, [r4, #84]
-	cbnz	r3, .L1895
+	cbnz	r3, .L1896
 	bl	FtlGcRefreshBlock
 	ldrh	r0, [r4, #80]
 	bl	FtlGcRefreshBlock
 	bl	FtlVpcTblFlush
-	ldr	r0, .L1900+4
+	ldr	r0, .L1901+4
 	bl	allocate_new_data_superblock
-	ldr	r0, .L1900+8
+	ldr	r0, .L1901+8
 	bl	allocate_new_data_superblock
-.L1895:
+.L1896:
 	bl	FtlVpcCheckAndModify
-	b	.L1884
-.L1901:
+	b	.L1885
+.L1902:
 	.align	2
-.L1900:
+.L1901:
 	.word	.LANCHOR0
 	.word	.LANCHOR0+28
 	.word	.LANCHOR0+80
@@ -12932,43 +12918,43 @@ ftl_low_format:
 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
 	.save {r3, r4, r5, r6, r7, r8, r9, lr}
 	movs	r3, #0
-	ldr	r4, .L1926
+	ldr	r4, .L1927
 	ldrh	r0, [r4, #240]
 	str	r3, [r4, #2592]
 	str	r3, [r4, #2596]
 	str	r3, [r4, #2608]
 	bl	FtlFreeSysBlkQueueInit
 	bl	FtlLoadBbt
-	cbz	r0, .L1903
+	cbz	r0, .L1904
 	bl	FtlMakeBbt
-.L1903:
-	ldr	r0, .L1926+4
-	movs	r2, #0
 .L1904:
+	ldr	r0, .L1927+4
+	movs	r2, #0
+.L1905:
 	ldrh	r1, [r4, #262]
 	uxth	r3, r2
 	adds	r2, r2, #1
 	cmp	r3, r1, lsl #7
-	blt	.L1905
+	blt	.L1906
 	ldrh	r6, [r4, #244]
 	movs	r5, #0
-.L1906:
+.L1907:
 	ldrh	r3, [r4, #246]
 	cmp	r3, r6
-	bhi	.L1907
+	bhi	.L1908
 	ldrh	r1, [r4, #236]
 	subs	r3, r5, #3
 	cmp	r3, r1, lsl #1
-	bge	.L1908
-.L1912:
+	bge	.L1909
+.L1913:
 	movs	r5, #0
 	mov	r6, r5
-.L1909:
+.L1910:
 	ldrh	r3, [r4, #244]
 	uxth	r0, r5
 	adds	r5, r5, #1
 	cmp	r3, r0
-	bhi	.L1913
+	bhi	.L1914
 	ldrh	r3, [r4, #246]
 	ldrh	r5, [r4, #236]
 	ldr	r9, [r4, #248]
@@ -12984,7 +12970,7 @@ ftl_low_format:
 	movs	r3, #24
 	muls	r3, r5, r3
 	cmp	r6, r3
-	ble	.L1914
+	ble	.L1915
 	mov	r1, r5
 	sub	r0, r9, r6
 	bl	__aeabi_uidiv
@@ -12992,9 +12978,9 @@ ftl_low_format:
 	lsrs	r0, r0, #5
 	adds	r0, r0, #24
 	strh	r0, [r4, #2624]	@ movhi
-.L1914:
+.L1915:
 	ldrh	r3, [r4, #298]
-	cbz	r3, .L1916
+	cbz	r3, .L1917
 	ldrh	r2, [r4, #2624]
 	add	r2, r2, r3, lsr #1
 	strh	r2, [r4, #2624]	@ movhi
@@ -13005,10 +12991,10 @@ ftl_low_format:
 	strlt	r8, [r4, #2556]
 	addlt	r3, r3, r7
 	strhlt	r3, [r4, #2624]	@ movhi
-.L1916:
+.L1917:
 	ldrh	r2, [r4, #2624]
 	ldr	r3, [r4, #2556]
-	ldr	r6, .L1926+8
+	ldr	r6, .L1927+8
 	subs	r3, r3, r2
 	muls	r5, r3, r5
 	ldrh	r3, [r4, #306]
@@ -13041,28 +13027,28 @@ ftl_low_format:
 	strh	r5, [r4, #176]	@ movhi
 	strb	r3, [r4, #36]
 	bl	ftl_memset
-.L1918:
+.L1919:
 	mov	r0, r6
 	bl	make_superblock
 	ldrb	r3, [r4, #35]	@ zero_extendqisi2
 	ldrh	r2, [r4, #28]
 	cmp	r3, #0
-	bne	.L1919
+	bne	.L1920
 	ldr	r3, [r4, #76]
 	strh	r5, [r3, r2, lsl #1]	@ movhi
 	ldrh	r3, [r4, #28]
 	adds	r3, r3, #1
 	strh	r3, [r4, #28]	@ movhi
-	b	.L1918
-.L1905:
+	b	.L1919
+.L1906:
 	ldr	r5, [r4, #3316]
 	mvns	r1, r3
 	orr	r1, r3, r1, lsl #16
 	str	r1, [r5, r3, lsl #2]
 	ldr	r1, [r4, #3320]
 	str	r0, [r1, r3, lsl #2]
-	b	.L1904
-.L1907:
+	b	.L1905
+.L1908:
 	mov	r0, r6
 	movs	r1, #1
 	bl	FtlLowFormatEraseBlock
@@ -13070,8 +13056,8 @@ ftl_low_format:
 	add	r5, r5, r0
 	uxth	r5, r5
 	uxth	r6, r6
-	b	.L1906
-.L1908:
+	b	.L1907
+.L1909:
 	mov	r0, r5
 	bl	__aeabi_uidiv
 	ldr	r3, [r4, #336]
@@ -13081,27 +13067,27 @@ ftl_low_format:
 	ldrh	r0, [r4, #240]
 	bl	FtlFreeSysBlkQueueInit
 	ldrh	r5, [r4, #244]
-.L1910:
+.L1911:
 	ldrh	r3, [r4, #246]
 	cmp	r3, r5
-	bls	.L1912
+	bls	.L1913
 	mov	r0, r5
 	movs	r1, #1
 	adds	r5, r5, #1
 	bl	FtlLowFormatEraseBlock
 	uxth	r5, r5
-	b	.L1910
-.L1913:
+	b	.L1911
+.L1914:
 	movs	r1, #0
 	bl	FtlLowFormatEraseBlock
 	add	r6, r6, r0
 	uxth	r6, r6
-	b	.L1909
-.L1919:
+	b	.L1910
+.L1920:
 	ldr	r3, [r4, #2592]
 	movw	r5, #65535
 	ldrh	r1, [r4, #32]
-	ldr	r6, .L1926+12
+	ldr	r6, .L1927+12
 	str	r3, [r4, #40]
 	adds	r3, r3, #1
 	str	r3, [r4, #2592]
@@ -13115,19 +13101,19 @@ ftl_low_format:
 	strh	r3, [r4, #80]	@ movhi
 	movs	r3, #1
 	strb	r3, [r4, #88]
-.L1920:
+.L1921:
 	mov	r0, r6
 	bl	make_superblock
 	ldrb	r3, [r4, #87]	@ zero_extendqisi2
 	ldrh	r2, [r4, #80]
-	cbnz	r3, .L1921
+	cbnz	r3, .L1922
 	ldr	r3, [r4, #76]
 	strh	r5, [r3, r2, lsl #1]	@ movhi
 	ldrh	r3, [r4, #80]
 	adds	r3, r3, #1
 	strh	r3, [r4, #80]	@ movhi
-	b	.L1920
-.L1921:
+	b	.L1921
+.L1922:
 	ldr	r3, [r4, #2592]
 	movw	r5, #65535
 	ldrh	r1, [r4, #84]
@@ -13150,16 +13136,16 @@ ftl_low_format:
 	str	r3, [r4, #2592]
 	bl	FtlVpcTblFlush
 	bl	FtlSysBlkInit
-	cbnz	r0, .L1922
-	ldr	r3, .L1926+16
+	cbnz	r0, .L1923
+	ldr	r3, .L1927+16
 	movs	r2, #1
 	str	r2, [r3]
-.L1922:
+.L1923:
 	movs	r0, #0
 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
-.L1927:
+.L1928:
 	.align	2
-.L1926:
+.L1927:
 	.word	.LANCHOR0
 	.word	168778952
 	.word	.LANCHOR0+28
@@ -13181,10 +13167,10 @@ sftl_init:
 	push	{r3, r4, r5, lr}
 	.save {r3, r4, r5, lr}
 	mov	r3, #-1
-	ldr	r4, .L1934
-	ldr	r5, .L1934+4
-	ldr	r1, .L1934+8
-	ldr	r0, .L1934+12
+	ldr	r4, .L1935
+	ldr	r5, .L1935+4
+	ldr	r1, .L1935+8
+	ldr	r0, .L1935+12
 	str	r3, [r5]
 	bl	sftl_printk
 	mov	r0, r4
@@ -13194,27 +13180,27 @@ sftl_init:
 	ldrh	r0, [r4, #240]
 	bl	FtlFreeSysBlkQueueInit
 	bl	FtlLoadBbt
-	cbnz	r0, .L1932
+	cbnz	r0, .L1933
 	bl	FtlSysBlkInit
-	cbnz	r0, .L1932
+	cbnz	r0, .L1933
 	movs	r3, #1
 	str	r3, [r5]
 	ldrh	r3, [r4, #228]
 	cmp	r3, #15
-	bhi	.L1932
+	bhi	.L1933
 	movw	r4, #8129
-.L1931:
+.L1932:
 	movs	r1, #1
 	movs	r0, #0
 	bl	rk_ftl_garbage_collect
 	subs	r4, r4, #1
-	bne	.L1931
-.L1932:
+	bne	.L1932
+.L1933:
 	movs	r0, #0
 	pop	{r3, r4, r5, pc}
-.L1935:
+.L1936:
 	.align	2
-.L1934:
+.L1935:
 	.word	.LANCHOR0
 	.word	.LANCHOR2
 	.word	.LC0
@@ -13242,31 +13228,31 @@ FtlWriteToIDB:
 	mov	r4, r0
 	mov	r6, r1
 	mov	r9, r2
-	ldr	r5, .L2006
-	bls	.L1937
+	ldr	r5, .L2007
+	bls	.L1938
 	cmp	r0, #576
-	bcc	.L1938
-.L1937:
+	bcc	.L1939
+.L1938:
 	ldr	r3, [r5, #3680]
-	cbnz	r3, .L1939
-.L2005:
+	cbnz	r3, .L1940
+.L2006:
 	movs	r4, #0
-	b	.L1936
-.L1939:
+	b	.L1937
+.L1940:
 	ldr	r3, [r5, #3684]
 	ldr	r2, [r3]
 	str	r3, [sp, #8]
-	ldr	r3, .L2006+4
+	ldr	r3, .L2007+4
 	cmp	r2, r3
-	bne	.L1941
+	bne	.L1942
 	ldr	r3, [sp, #8]
 	movs	r2, #0
 	ldrh	r1, [r5, #10]
 	add	r0, r3, #262144
 	movw	r3, #65535
-.L1945:
+.L1946:
 	ldr	r4, [r0, #-4]
-	cbnz	r4, .L1942
+	cbnz	r4, .L1943
 	ldr	r4, [sp, #8]
 	subs	r3, r3, #1
 	ldr	r4, [r4, r2, lsl #2]
@@ -13276,18 +13262,18 @@ FtlWriteToIDB:
 	movhi	r2, #0
 	cmp	r3, #4096
 	str	r4, [r0, #-4]!
-	bne	.L1945
+	bne	.L1946
 	mov	r3, #512
-	b	.L2002
-.L1942:
+	b	.L2003
+.L1943:
 	adds	r3, r3, #127
 	lsrs	r3, r3, #7
-.L2002:
+.L2003:
 	str	r3, [sp, #12]
 	lsls	r1, r1, #2
 	ldr	r3, [sp, #12]
 	uxth	r1, r1
-	ldr	r4, .L2006
+	ldr	r4, .L2007
 	adds	r0, r3, #4
 	bl	__aeabi_uidiv
 	adds	r3, r0, #1
@@ -13298,7 +13284,7 @@ FtlWriteToIDB:
 	movs	r3, #0
 	mov	fp, r3
 	str	r3, [sp, #16]
-.L1967:
+.L1968:
 	mov	r1, #512
 	ldr	r0, [r4, #3688]
 	bl	__memzero
@@ -13306,41 +13292,41 @@ FtlWriteToIDB:
 	ldr	r3, [r4, #3264]
 	mul	r9, fp, r7
 	cmp	r3, #0
-	beq	.L1975
+	beq	.L1976
 	ldr	r3, [r4, #3268]
 	cmp	r3, #0
 	ite	eq
 	moveq	r3, #6
 	movne	r3, #9
-.L2003:
+.L2004:
 	str	r3, [sp, #24]
 	mov	r1, r9
-	ldr	r3, .L2006
+	ldr	r3, .L2007
 	movs	r0, #0
 	ldr	r3, [r3, #3252]
 	blx	r3
 	ldr	r3, [sp, #20]
 	cmp	r3, #1
-	beq	.L1947
-	ldr	r3, .L2006
+	beq	.L1948
+	ldr	r3, .L2007
 	add	r1, r7, r9
 	movs	r0, #0
 	ldr	r3, [r3, #3252]
 	blx	r3
-.L1947:
+.L1948:
 	ldr	r3, [sp, #24]
 	cmp	r3, #9
-	bne	.L1977
-	ldr	r3, .L2006
+	bne	.L1978
+	ldr	r3, .L2007
 	mov	r1, #1024
 	ldr	r5, [r3, #3688]
 	mov	r0, r5
 	bl	__memzero
 	movs	r2, #4
-	ldr	r3, .L2006+8
+	ldr	r3, .L2007+8
 	strb	r2, [r5, #17]
 	movs	r1, #12
-	ldr	r2, .L2006
+	ldr	r2, .L2007
 	adds	r0, r5, r1
 	str	r3, [r5]
 	movs	r3, #0
@@ -13355,17 +13341,17 @@ FtlWriteToIDB:
 	strh	r3, [r5, #22]	@ movhi
 	bl	js_hash
 	str	r0, [r5, #8]
-.L1948:
+.L1949:
 	ldr	r3, [sp, #20]
 	mov	r10, r9
 	mov	r8, #0
 	muls	r3, r7, r3
 	ldr	r7, [sp, #8]
 	str	r3, [sp, #32]
-.L1949:
+.L1950:
 	ldr	r3, [sp, #32]
 	cmp	r8, r3
-	beq	.L1956
+	beq	.L1957
 	ldr	r3, [sp, #24]
 	cmp	r3, #9
 	itet	ne
@@ -13376,10 +13362,10 @@ FtlWriteToIDB:
 	movw	r3, #61424
 	str	r3, [sp, #44]
 	cmp	r8, #0
-	bne	.L1952
+	bne	.L1953
 	ldr	r3, [sp, #24]
 	cmp	r3, #9
-	bne	.L1952
+	bne	.L1953
 	ldr	r3, [r4, #3264]
 	movs	r0, #70
 	blx	r3
@@ -13395,8 +13381,8 @@ FtlWriteToIDB:
 	blx	r3
 	ldr	r2, [sp, #36]
 	adds	r2, r2, #1
-	bne	.L1953
-.L1956:
+	bne	.L1954
+.L1957:
 	ldrb	r3, [r4, #14]	@ zero_extendqisi2
 	ldr	r2, [r4, #3264]
 	ldr	r8, [r4, #3688]
@@ -13404,19 +13390,19 @@ FtlWriteToIDB:
 	ldrh	r3, [r4, #10]
 	mul	r10, fp, r3
 	cmp	r2, #0
-	bne	.L1954
+	bne	.L1955
 	mov	r9, #6
-.L1955:
+.L1956:
 	ldr	r2, [sp, #20]
 	movs	r7, #0
 	mul	r5, r3, r2
-.L1958:
+.L1959:
 	cmp	r7, r5
-	beq	.L1962
+	beq	.L1963
 	cmp	r7, #0
-	bne	.L1959
+	bne	.L1960
 	cmp	r9, #9
-	bne	.L1959
+	bne	.L1960
 	ldr	r3, [r4, #3264]
 	movs	r0, #70
 	blx	r3
@@ -13436,49 +13422,49 @@ FtlWriteToIDB:
 	ldrb	r0, [r4, #22]	@ zero_extendqisi2
 	blx	r3
 	ldr	r3, [r8]
-	ldr	r2, .L2006+8
+	ldr	r2, .L2007+8
 	cmp	r3, r2
-	beq	.L1960
-.L1962:
+	beq	.L1961
+.L1963:
 	ldr	r0, [r4, #3688]
 	movs	r5, #0
 	ldr	r1, [sp, #8]
-.L1961:
+.L1962:
 	mov	r8, r1
 	ldr	r2, [r0, r5, lsl #2]
 	ldr	r3, [r8]
 	lsls	r7, r5, #2
 	adds	r1, r1, #4
 	cmp	r2, r3
-	beq	.L1964
+	beq	.L1965
 	mov	r1, #512
 	bl	__memzero
-	ldr	r3, .L2006
+	ldr	r3, .L2007
 	mov	r1, fp
-	ldr	r0, .L2006+12
+	ldr	r0, .L2007+12
 	ldr	r2, [r3, #3688]
 	str	r5, [sp]
 	ldr	r3, [r8]
 	ldr	r2, [r2, r7]
 	bl	sftl_printk
-	ldr	r3, .L2006
+	ldr	r3, .L2007
 	movs	r0, #0
 	ldrh	r1, [r3, #10]
 	ldr	r3, [r3, #3252]
 	mul	r1, fp, r1
 	blx	r3
-.L1965:
+.L1966:
 	ldr	r3, [sp, #20]
 	add	fp, fp, r3
 	cmp	fp, #15
-	bls	.L1967
+	bls	.L1968
 	ldr	r3, [sp, #16]
-	cbnz	r3, .L1968
-.L1941:
+	cbnz	r3, .L1969
+.L1942:
 	mov	r3, #-1
 	str	r3, [sp, #12]
-.L1968:
-	ldr	r5, .L2006
+.L1969:
+	ldr	r5, .L2007
 	movs	r3, #0
 	ldr	r4, [sp, #12]
 	ldr	r0, [r5, #3684]
@@ -13486,18 +13472,18 @@ FtlWriteToIDB:
 	bl	kfree
 	ldr	r0, [r5, #3688]
 	bl	kfree
-.L1936:
+.L1937:
 	mov	r0, r4
 	add	sp, sp, #108
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
-.L1975:
+.L1976:
 	movs	r3, #6
-	b	.L2003
-.L1977:
+	b	.L2004
+.L1978:
 	movs	r5, #0
-	b	.L1948
-.L1952:
+	b	.L1949
+.L1953:
 	add	r3, sp, #40
 	mov	r2, r7
 	mov	r1, r10
@@ -13505,20 +13491,20 @@ FtlWriteToIDB:
 	ldr	r6, [r4, #3256]
 	blx	r6
 	adds	r0, r0, #1
-	beq	.L1956
+	beq	.L1957
 	add	r7, r7, #2048
-.L1953:
+.L1954:
 	add	r8, r8, #1
 	add	r10, r10, #1
-	b	.L1949
-.L1954:
+	b	.L1950
+.L1955:
 	ldr	r2, [r4, #3268]
 	cmp	r2, #0
 	ite	eq
 	moveq	r9, #6
 	movne	r9, #9
-	b	.L1955
-.L1959:
+	b	.L1956
+.L1960:
 	add	r3, sp, #40
 	mov	r2, r8
 	add	r1, r10, r7
@@ -13526,36 +13512,36 @@ FtlWriteToIDB:
 	ldr	r6, [r4, #3260]
 	blx	r6
 	adds	r0, r0, #1
-	beq	.L1962
+	beq	.L1963
 	ldr	r2, [sp, #44]
 	movw	r3, #61424
 	cmp	r2, r3
-	bne	.L1962
+	bne	.L1963
 	add	r8, r8, #2048
-.L1960:
+.L1961:
 	adds	r7, r7, #1
-	b	.L1958
-.L1964:
+	b	.L1959
+.L1965:
 	ldr	r3, [sp, #28]
 	adds	r5, r5, #1
 	cmp	r5, r3
-	bne	.L1961
+	bne	.L1962
 	ldr	r3, [sp, #16]
 	adds	r3, r3, #1
 	cmp	r3, #5
 	str	r3, [sp, #16]
-	bls	.L1965
-	b	.L1968
-.L2007:
+	bls	.L1966
+	b	.L1969
+.L2008:
 	.align	2
-.L2006:
+.L2007:
 	.word	.LANCHOR0
 	.word	-52655045
 	.word	1179535694
-	.word	.LC132
-.L1938:
+	.word	.LC130
+.L1939:
 	cmp	r0, #64
-	bne	.L1969
+	bne	.L1970
 	mov	r0, #262144
 	bl	ftl_malloc
 	str	r0, [r5, #3684]
@@ -13563,27 +13549,27 @@ FtlWriteToIDB:
 	bl	ftl_malloc
 	ldr	r3, [r5, #3684]
 	str	r0, [r5, #3688]
-	cbz	r3, .L1970
-	cbz	r0, .L1970
+	cbz	r3, .L1971
+	cbz	r0, .L1971
 	movs	r2, #1
 	mov	r1, #262144
 	mov	r0, r3
 	str	r2, [r5, #3680]
 	bl	__memzero
-.L1969:
+.L1970:
 	ldr	r3, [r5, #3680]
 	cmp	r3, #0
-	beq	.L2005
+	beq	.L2006
 	cmp	r4, #63
 	ldr	r1, [r5, #3684]
 	iteee	hi
-	ldrhi	r5, .L2008
+	ldrhi	r5, .L2009
 	rsbls	r4, r4, #64
 	subls	r6, r6, r4
 	addls	r9, r9, r4, lsl #9
 	it	ls
 	movls	r5, r1
-	ldr	r0, .L2008+4
+	ldr	r0, .L2009+4
 	it	hi
 	addhi	r5, r5, r4
 	mov	r2, #262144
@@ -13600,19 +13586,19 @@ FtlWriteToIDB:
 	mov	r1, r9
 	mov	r0, r5
 	bl	ftl_memcpy
-	b	.L2005
-.L1970:
-	ldr	r1, .L2008+8
-	ldr	r0, .L2008+12
+	b	.L2006
+.L1971:
+	ldr	r1, .L2009+8
+	ldr	r0, .L2009+12
 	bl	sftl_printk
-	b	.L1969
-.L2009:
+	b	.L1970
+.L2010:
 	.align	2
-.L2008:
+.L2009:
 	.word	8388544
-	.word	.LC134
+	.word	.LC132
 	.word	.LANCHOR1+633
-	.word	.LC133
+	.word	.LC131
 	.fnend
 	.size	FtlWriteToIDB, .-FtlWriteToIDB
 	.align	1
@@ -13652,19 +13638,19 @@ rk_sftl_vendor_dev_ops_register:
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 0, uses_anonymous_args = 0
 	@ link register save eliminated.
-	ldr	r2, .L2014
+	ldr	r2, .L2015
 	ldr	r3, [r2, #3692]
-	cbnz	r3, .L2013
+	cbnz	r3, .L2014
 	str	r0, [r2, #3692]
 	mov	r0, r3
 	str	r1, [r2, #3696]
 	bx	lr
-.L2013:
+.L2014:
 	mov	r0, #-1
 	bx	lr
-.L2015:
+.L2016:
 	.align	2
-.L2014:
+.L2015:
 	.word	.LANCHOR0
 	.fnend
 	.size	rk_sftl_vendor_dev_ops_register, .-rk_sftl_vendor_dev_ops_register
@@ -13682,55 +13668,55 @@ rk_sftl_vendor_storage_init:
 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
 	.save {r3, r4, r5, r6, r7, r8, r9, lr}
 	mov	r0, #65536
-	ldr	r4, .L2024
+	ldr	r4, .L2025
 	bl	ftl_malloc
 	str	r0, [r4, #3700]
 	cmp	r0, #0
-	beq	.L2022
-	ldr	r8, .L2024+4
+	beq	.L2023
+	ldr	r8, .L2025+4
 	mov	r9, #0
 	mov	r7, r9
 	mov	r6, r9
-.L2020:
+.L2021:
 	ldr	r3, [r4, #3692]
 	movs	r1, #128
 	ldr	r2, [r4, #3700]
 	lsls	r0, r6, #7
 	blx	r3
 	mov	r5, r0
-	cbnz	r0, .L2018
+	cbnz	r0, .L2019
 	ldr	r2, [r4, #3700]
 	ldr	r3, [r2]
 	cmp	r3, r8
-	bne	.L2019
+	bne	.L2020
 	movw	r3, #65532
 	ldr	r1, [r2, r3]
 	ldr	r3, [r2, #4]
 	cmp	r1, r3
-	bne	.L2019
+	bne	.L2020
 	cmp	r1, r7
 	itt	hi
 	movhi	r9, r6
 	movhi	r7, r1
-.L2019:
+.L2020:
 	adds	r6, r6, #1
 	cmp	r6, #2
-	bne	.L2020
-	cbz	r7, .L2021
+	bne	.L2021
+	cbz	r7, .L2022
 	ldr	r3, [r4, #3692]
 	movs	r1, #128
 	lsl	r0, r9, #7
 	blx	r3
 	mov	r5, r0
-	cbz	r0, .L2016
-.L2018:
+	cbz	r0, .L2017
+.L2019:
 	ldr	r0, [r4, #3700]
 	mov	r5, #-1
 	bl	kfree
 	movs	r3, #0
 	str	r3, [r4, #3700]
-	b	.L2016
-.L2021:
+	b	.L2017
+.L2022:
 	mov	r1, #65536
 	mov	r0, r2
 	bl	__memzero
@@ -13743,15 +13729,15 @@ rk_sftl_vendor_storage_init:
 	movw	r2, #64504
 	strh	r7, [r3, #12]	@ movhi
 	strh	r2, [r3, #14]	@ movhi
-.L2016:
+.L2017:
 	mov	r0, r5
 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
-.L2022:
+.L2023:
 	mvn	r5, #11
-	b	.L2016
-.L2025:
+	b	.L2017
+.L2026:
 	.align	2
-.L2024:
+.L2025:
 	.word	.LANCHOR0
 	.word	1380668996
 	.fnend
@@ -13770,23 +13756,23 @@ rk_sftl_vendor_read:
 	push	{r3, r4, r5, r6, r7, lr}
 	.save {r3, r4, r5, r6, r7, lr}
 	mov	r7, r0
-	ldr	r3, .L2032
+	ldr	r3, .L2033
 	mov	r0, r1
 	ldr	r5, [r3, #3700]
-	cbz	r5, .L2031
+	cbz	r5, .L2032
 	ldrh	r6, [r5, #10]
 	movs	r3, #0
-.L2028:
+.L2029:
 	cmp	r3, r6
-	bcc	.L2030
-.L2031:
+	bcc	.L2031
+.L2032:
 	mov	r0, #-1
 	pop	{r3, r4, r5, r6, r7, pc}
-.L2030:
+.L2031:
 	add	r1, r5, r3, lsl #3
 	ldrh	r4, [r1, #16]
 	cmp	r4, r7
-	bne	.L2029
+	bne	.L2030
 	ldrh	r4, [r1, #20]
 	ldrh	r1, [r1, #18]
 	cmp	r4, r2
@@ -13798,12 +13784,12 @@ rk_sftl_vendor_read:
 	bl	memcpy
 	mov	r0, r4
 	pop	{r3, r4, r5, r6, r7, pc}
-.L2029:
+.L2030:
 	adds	r3, r3, #1
-	b	.L2028
-.L2033:
+	b	.L2029
+.L2034:
 	.align	2
-.L2032:
+.L2033:
 	.word	.LANCHOR0
 	.fnend
 	.size	rk_sftl_vendor_read, .-rk_sftl_vendor_read
@@ -13821,26 +13807,26 @@ rk_sftl_vendor_write:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 	mov	r8, r2
-	ldr	r2, .L2053
+	ldr	r2, .L2054
 	.pad #28
 	sub	sp, sp, #28
 	mov	r3, r1
 	ldr	r4, [r2, #3700]
 	mov	r9, r2
 	cmp	r4, #0
-	beq	.L2049
+	beq	.L2050
 	ldrh	r2, [r4, #10]
 	add	r6, r8, #63
 	ldrh	r1, [r4, #8]
 	bic	r6, r6, #63
 	movs	r7, #0
 	str	r1, [sp, #4]
-.L2036:
+.L2037:
 	cmp	r7, r2
-	bcc	.L2044
+	bcc	.L2045
 	ldrh	r1, [r4, #14]
 	cmp	r6, r1
-	bhi	.L2049
+	bhi	.L2050
 	add	r2, r4, r2, lsl #3
 	uxth	r6, r6
 	strh	r0, [r2, #16]	@ movhi
@@ -13873,31 +13859,31 @@ rk_sftl_vendor_write:
 	movhi	r3, #0
 	strh	r3, [r4, #8]	@ movhi
 	ldr	r3, [r9, #3696]
-	b	.L2052
-.L2044:
+	b	.L2053
+.L2045:
 	add	r5, r4, r7, lsl #3
 	ldrh	r1, [r5, #16]
 	cmp	r1, r0
 	str	r1, [sp, #8]
-	bne	.L2037
+	bne	.L2038
 	ldrh	r1, [r5, #20]
 	add	fp, r4, #1024
 	adds	r1, r1, #63
 	bic	r1, r1, #63
 	cmp	r8, r1
 	str	r1, [sp, #12]
-	bls	.L2038
+	bls	.L2039
 	ldrh	r1, [r4, #14]
 	cmp	r6, r1
-	bhi	.L2049
+	bhi	.L2050
 	ldrh	r10, [r5, #18]
 	subs	r2, r2, #1
 	str	r2, [sp, #16]
-.L2039:
+.L2040:
 	ldr	r2, [sp, #16]
 	adds	r5, r5, #8
 	cmp	r7, r2
-	bcc	.L2040
+	bcc	.L2041
 	ldrh	r2, [sp, #8]
 	add	r7, r4, r7, lsl #3
 	uxth	r5, r10
@@ -13916,7 +13902,7 @@ rk_sftl_vendor_write:
 	strh	r5, [r4, #12]	@ movhi
 	add	r6, r6, r3
 	strh	r6, [r4, #14]	@ movhi
-.L2041:
+.L2042:
 	ldr	r3, [r4, #4]
 	movw	r2, #65532
 	adds	r3, r3, #1
@@ -13929,20 +13915,20 @@ rk_sftl_vendor_write:
 	it	hi
 	movhi	r3, #0
 	strh	r3, [r4, #8]	@ movhi
-	ldr	r3, .L2053
+	ldr	r3, .L2054
 	ldr	r3, [r3, #3696]
-.L2052:
+.L2053:
 	ldr	r0, [sp, #4]
 	mov	r2, r4
 	movs	r1, #128
 	lsls	r0, r0, #7
 	blx	r3
 	movs	r0, #0
-.L2034:
+.L2035:
 	add	sp, sp, #28
 	@ sp needed
 	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
-.L2040:
+.L2041:
 	ldrh	r9, [r5, #20]
 	add	r0, fp, r10
 	ldrh	r2, [r5, #16]
@@ -13959,24 +13945,24 @@ rk_sftl_vendor_write:
 	add	r10, r10, r9
 	bl	memcpy
 	ldr	r3, [sp, #20]
-	b	.L2039
-.L2038:
+	b	.L2040
+.L2039:
 	ldrh	r0, [r5, #18]
 	mov	r2, r8
 	mov	r1, r3
 	add	r0, r0, fp
 	bl	memcpy
 	strh	r8, [r5, #20]	@ movhi
-	b	.L2041
-.L2037:
+	b	.L2042
+.L2038:
 	adds	r7, r7, #1
-	b	.L2036
-.L2049:
+	b	.L2037
+.L2050:
 	mov	r0, #-1
-	b	.L2034
-.L2054:
+	b	.L2035
+.L2055:
 	.align	2
-.L2053:
+.L2054:
 	.word	.LANCHOR0
 	.fnend
 	.size	rk_sftl_vendor_write, .-rk_sftl_vendor_write
@@ -13999,18 +13985,18 @@ rk_sftl_vendor_storage_ioctl:
 	bl	ftl_malloc
 	mov	r5, r0
 	cmp	r0, #0
-	beq	.L2072
-	ldr	r3, .L2083
+	beq	.L2073
+	ldr	r3, .L2084
 	cmp	r6, r3
-	beq	.L2058
+	beq	.L2059
 	adds	r3, r3, #1
 	cmp	r6, r3
-	beq	.L2059
-.L2078:
+	beq	.L2060
+.L2079:
 	mvn	r4, #13
-	b	.L2057
-.L2058:
-	ldr	r6, .L2083+4
+	b	.L2058
+.L2059:
+	ldr	r6, .L2084+4
 	mov	r3, sp
 	ands	r3, r3, r6
 	ldr	r3, [r3, #72]
@@ -14020,42 +14006,42 @@ rk_sftl_vendor_storage_ioctl:
 @ 0 "" 2
 	.thumb
 	.syntax unified
-	cbnz	r3, .L2060
+	cbnz	r3, .L2061
 	movs	r2, #8
 	mov	r1, r4
 	bl	arm_copy_from_user
-	cbz	r0, .L2079
-.L2061:
+	cbz	r0, .L2080
+.L2062:
 	mov	r2, r4
 	mov	r1, #256
-.L2082:
-	ldr	r0, .L2083+8
+.L2083:
+	ldr	r0, .L2084+8
 	bl	sftl_printk
-	b	.L2078
-.L2060:
+	b	.L2079
+.L2061:
 	movs	r1, #8
 	bl	__memzero
-	b	.L2061
-.L2079:
+	b	.L2062
+.L2080:
 	ldr	r2, [r5]
-	ldr	r3, .L2083+12
+	ldr	r3, .L2084+12
 	cmp	r2, r3
-	beq	.L2063
-.L2064:
+	beq	.L2064
+.L2065:
 	mov	r4, #-1
-.L2057:
+.L2058:
 	mov	r0, r5
 	bl	kfree
-.L2055:
+.L2056:
 	mov	r0, r4
 	pop	{r4, r5, r6, pc}
-.L2063:
+.L2064:
 	ldrh	r2, [r5, #6]
 	add	r1, r5, #8
 	ldrh	r0, [r5, #4]
 	bl	rk_sftl_vendor_read
 	adds	r3, r0, #1
-	beq	.L2064
+	beq	.L2065
 	mov	r3, sp
 	uxth	r2, r0
 	ands	r6, r6, r3
@@ -14069,17 +14055,17 @@ rk_sftl_vendor_storage_ioctl:
 	.thumb
 	.syntax unified
 	cmp	r3, #0
-	bne	.L2078
+	bne	.L2079
 	mov	r1, r5
 	mov	r0, r4
 	bl	arm_copy_to_user
 	cmp	r0, #0
-	bne	.L2078
-.L2074:
+	bne	.L2079
+.L2075:
 	mov	r4, r0
-	b	.L2057
-.L2059:
-	ldr	r6, .L2083+4
+	b	.L2058
+.L2060:
+	ldr	r6, .L2084+4
 	mov	r3, sp
 	ands	r3, r3, r6
 	ldr	r3, [r3, #72]
@@ -14089,28 +14075,28 @@ rk_sftl_vendor_storage_ioctl:
 @ 0 "" 2
 	.thumb
 	.syntax unified
-	cbnz	r3, .L2066
+	cbnz	r3, .L2067
 	movs	r2, #8
 	mov	r1, r4
 	bl	arm_copy_from_user
-	cbz	r0, .L2080
-.L2067:
+	cbz	r0, .L2081
+.L2068:
 	mov	r2, r4
 	mov	r1, #276
-	b	.L2082
-.L2066:
+	b	.L2083
+.L2067:
 	movs	r1, #8
 	bl	__memzero
-	b	.L2067
-.L2080:
+	b	.L2068
+.L2081:
 	ldr	r2, [r5]
-	ldr	r3, .L2083+12
+	ldr	r3, .L2084+12
 	cmp	r2, r3
-	bne	.L2064
+	bne	.L2065
 	ldrh	r2, [r5, #6]
 	movw	r3, #4087
 	cmp	r2, r3
-	bhi	.L2064
+	bhi	.L2065
 	mov	r3, sp
 	adds	r2, r2, #8
 	ands	r6, r6, r3
@@ -14121,35 +14107,35 @@ rk_sftl_vendor_storage_ioctl:
 @ 0 "" 2
 	.thumb
 	.syntax unified
-	cbnz	r3, .L2069
+	cbnz	r3, .L2070
 	mov	r1, r4
 	mov	r0, r5
 	bl	arm_copy_from_user
-	cbz	r0, .L2081
-.L2070:
+	cbz	r0, .L2082
+.L2071:
 	mov	r2, r4
 	movw	r1, #283
-	b	.L2082
-.L2069:
+	b	.L2083
+.L2070:
 	mov	r1, r2
 	mov	r0, r5
 	bl	__memzero
-	b	.L2070
-.L2081:
+	b	.L2071
+.L2082:
 	ldrh	r2, [r5, #6]
 	add	r1, r5, #8
 	ldrh	r0, [r5, #4]
 	bl	rk_sftl_vendor_write
-	b	.L2074
-.L2072:
+	b	.L2075
+.L2073:
 	mov	r4, #-1
-	b	.L2055
-.L2084:
+	b	.L2056
+.L2085:
 	.align	2
-.L2083:
+.L2084:
 	.word	1074034177
 	.word	-8192
-	.word	.LC135
+	.word	.LC133
 	.word	1448232273
 	.fnend
 	.size	rk_sftl_vendor_storage_ioctl, .-rk_sftl_vendor_storage_ioctl
@@ -14165,11 +14151,11 @@ rk_sftl_vendor_register:
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 0, uses_anonymous_args = 0
 	@ link register save eliminated.
-	ldr	r0, .L2086
+	ldr	r0, .L2087
 	b	misc_register
-.L2087:
+.L2088:
 	.align	2
-.L2086:
+.L2087:
 	.word	.LANCHOR2+12
 	.fnend
 	.size	rk_sftl_vendor_register, .-rk_sftl_vendor_register
@@ -14501,7 +14487,7 @@ power_up_flag:
 	.size	rkflash_vender_storage_dev, 40
 rkflash_vender_storage_dev:
 	.word	255
-	.word	.LC136
+	.word	.LC134
 	.word	rk_sftl_vendor_storage_fops
 	.space	28
 	.bss
@@ -15392,29 +15378,25 @@ gp_last_act_superblock:
 .LC124:
 	.ascii	"SWL %x, FSB = %x vpc= %x,ec=%x th=%x\012\000"
 .LC125:
-	.ascii	"g_gc_superblock_free %x %x %x %x %x\012\000"
-.LC126:
-	.ascii	"lpa=%x, ppa=%x\012\000"
-.LC127:
 	.ascii	"FtlWrite: ecc error:%x %x %x\012\000"
-.LC128:
+.LC126:
 	.ascii	"FtlWrite: lpa error:%x %x\012\000"
-.LC129:
+.LC127:
 	.ascii	"%s hash error this.id =%x page =%x pre_id =%x hash "
 	.ascii	"=%x hash_r =%x\012\000"
-.LC130:
+.LC128:
 	.ascii	"%s last blk_id =%x page =%x hash error hash =%x has"
 	.ascii	"h_r =%x\012\000"
-.LC131:
+.LC129:
 	.ascii	"%s scan blk_id =%x page =%x hash error hash =%x has"
 	.ascii	"h_r =%x\012\000"
-.LC132:
+.LC130:
 	.ascii	"write_idblock fail! %x %x %x %x\012\000"
-.LC133:
+.LC131:
 	.ascii	"%s idb buffer alloc fail\012\000"
-.LC134:
+.LC132:
 	.ascii	"%p %x %p %x\012\000"
-.LC135:
+.LC133:
 	.ascii	"copy_from_user error %d %p %p\012\000"
-.LC136:
+.LC134:
 	.ascii	"vendor_storage\000"
diff --git a/drivers/rkflash/rk_sftl_arm_v8.S b/drivers/rkflash/rk_sftl_arm_v8.S
index 608ab8160391..3cc91616b3f2 100644
--- a/drivers/rkflash/rk_sftl_arm_v8.S
+++ b/drivers/rkflash/rk_sftl_arm_v8.S
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0 */
 
 /* Copyright (c) 2018 Rockchip Electronics Co. Ltd.
- * date: 2019-02-20
+ * date: 2019-03-11
  */
 	.arch armv8-a
 	.file	"rk_sftl.c"
@@ -9755,10 +9755,10 @@ rk_ftl_garbage_collect:
 	stp	x25, x26, [sp, 64]
 	stp	x27, x28, [sp, 80]
 	ldr	w2, [x1, 3424]
-	cbnz	w2, .L1514
+	cbnz	w2, .L1515
 	ldrh	w2, [x1, 2592]
 	cmp	w2, 47
-	bls	.L1514
+	bls	.L1515
 	mov	w23, w0
 	adrp	x0, .LANCHOR2+4
 	ldrh	w2, [x0, #:lo12:.LANCHOR2+4]
@@ -9784,7 +9784,7 @@ rk_ftl_garbage_collect:
 	bne	.L1442
 	ldrh	w21, [x20, 136]
 	cmp	w21, w1
-	bne	.L1517
+	bne	.L1518
 	ldrh	w22, [x20, 234]
 	cmp	w22, w21
 	bne	.L1442
@@ -9794,13 +9794,13 @@ rk_ftl_garbage_collect:
 	mov	w1, 5120
 	csel	w1, w1, w2, cc
 	cmp	w0, w1
-	bls	.L1520
+	bls	.L1521
 	strh	wzr, [x20, 3968]
 	str	wzr, [x20, 3236]
 	bl	GetSwlReplaceBlock
 	and	w21, w0, 65535
 	cmp	w21, w22
-	bne	.L1521
+	bne	.L1522
 	ldrh	w1, [x20, 236]
 	ldrh	w0, [x20, 3234]
 	cmp	w1, w0
@@ -9832,7 +9832,7 @@ rk_ftl_garbage_collect:
 	bne	.L1450
 	ldrh	w0, [x1, 236]
 	cmp	w0, 24
-	bhi	.L1522
+	bhi	.L1523
 	cmp	w0, 16
 	ldrh	w20, [x1, 314]
 	bls	.L1452
@@ -9892,13 +9892,13 @@ rk_ftl_garbage_collect:
 	b	.L1440
 .L1448:
 	mov	w0, 64
-.L1552:
+.L1553:
 	strh	w0, [x20, 3234]
 	b	.L1447
 .L1445:
 	mov	w0, 80
-	b	.L1552
-.L1521:
+	b	.L1553
+.L1522:
 	mov	w22, w21
 .L1444:
 	add	x0, x19, :lo12:.LANCHOR0
@@ -9915,10 +9915,10 @@ rk_ftl_garbage_collect:
 	add	x0, x0, :lo12:.LC124
 	bl	sftl_printk
 	b	.L1447
-.L1517:
+.L1518:
 	mov	w21, w1
 	b	.L1442
-.L1520:
+.L1521:
 	mov	w21, w22
 	b	.L1442
 .L1452:
@@ -9932,7 +9932,7 @@ rk_ftl_garbage_collect:
 	lsr	w20, w20, 2
 	csel	w20, w20, w1, cs
 	b	.L1451
-.L1522:
+.L1523:
 	mov	w20, 1
 	b	.L1451
 .L1458:
@@ -9948,10 +9948,10 @@ rk_ftl_garbage_collect:
 .L1455:
 	add	x0, x19, :lo12:.LANCHOR0
 	ldrh	w0, [x0, 3320]
-	cbz	w0, .L1523
+	cbz	w0, .L1524
 	add	w20, w20, 32
 	and	w20, w20, 65535
-.L1523:
+.L1524:
 	mov	w21, 65535
 .L1461:
 	add	x0, x19, :lo12:.LANCHOR0
@@ -10006,14 +10006,14 @@ rk_ftl_garbage_collect:
 	mov	w1, -1
 	strh	w1, [x0, 184]
 .L1477:
-	adrp	x24, .LANCHOR1
-	add	x24, x24, :lo12:.LANCHOR1
-	add	x24, x24, 672
-.L1511:
+	adrp	x25, .LANCHOR1
+	add	x25, x25, :lo12:.LANCHOR1
+	add	x25, x25, 672
+.L1512:
 	add	x22, x19, :lo12:.LANCHOR0
 	mov	w0, 65535
-	ldrh	w25, [x22, 184]
-	cmp	w25, w0
+	ldrh	w24, [x22, 184]
+	cmp	w24, w0
 	bne	.L1478
 	mov	w26, 2
 	str	wzr, [x22, 3244]
@@ -10023,7 +10023,7 @@ rk_ftl_garbage_collect:
 	bl	List_get_gc_head_node
 	and	w6, w0, 65535
 	strh	w6, [x22, 184]
-	cmp	w6, w25
+	cmp	w6, w24
 	bne	.L1480
 	strh	wzr, [x22, 3240]
 	mov	w0, 8
@@ -10031,16 +10031,16 @@ rk_ftl_garbage_collect:
 .L1450:
 	ldrh	w2, [x1, 136]
 	cmp	w2, w0
-	bne	.L1526
+	bne	.L1527
 	ldrh	w0, [x1, 234]
 	cmp	w0, w2
-	bne	.L1526
+	bne	.L1527
 	cmp	w21, w0
-	bne	.L1526
+	bne	.L1527
 	ldrh	w0, [x1, 184]
 	cmp	w0, w21
 	beq	.L1462
-.L1526:
+.L1527:
 	mov	w20, 1
 	b	.L1461
 .L1462:
@@ -10061,7 +10061,7 @@ rk_ftl_garbage_collect:
 	ldrh	w0, [x1, 2700]
 	add	w0, w0, w0, lsl 1
 	asr	w0, w0, 2
-.L1553:
+.L1554:
 	strh	w0, [x1, 3232]
 	bl	FtlReadRefresh
 	mov	w0, 0
@@ -10076,11 +10076,11 @@ rk_ftl_garbage_collect:
 	b	.L1436
 .L1465:
 	mov	w0, 18
-	b	.L1553
+	b	.L1554
 .L1463:
 	add	x20, x19, :lo12:.LANCHOR0
 	ldrh	w0, [x20, 3968]
-	cbnz	w0, .L1526
+	cbnz	w0, .L1527
 	ldrh	w5, [x20, 2700]
 	add	w0, w5, w5, lsl 1
 	asr	w0, w0, 2
@@ -10105,7 +10105,7 @@ rk_ftl_garbage_collect:
 	ldrh	w0, [x20, 3968]
 	b	.L1436
 .L1468:
-	cbnz	w1, .L1526
+	cbnz	w1, .L1527
 	add	x19, x19, :lo12:.LANCHOR0
 	mov	w0, -1
 	bl	decrement_vpc_count
@@ -10161,7 +10161,7 @@ rk_ftl_garbage_collect:
 	ldrh	w1, [x2, x1]
 	cmp	w0, w1
 	bgt	.L1485
-	cmp	w21, w25
+	cmp	w21, w24
 	bne	.L1485
 	ldrh	w0, [x22, 3240]
 	cmp	w0, 3
@@ -10169,7 +10169,7 @@ rk_ftl_garbage_collect:
 	mov	w0, -1
 	strh	wzr, [x22, 3240]
 	strh	w0, [x22, 184]
-.L1554:
+.L1555:
 	ldrh	w0, [x22, 3968]
 	b	.L1436
 .L1485:
@@ -10188,7 +10188,7 @@ rk_ftl_garbage_collect:
 	bne	.L1487
 	adrp	x0, .LC8
 	mov	w2, 717
-	mov	x1, x24
+	mov	x1, x25
 	add	x0, x0, :lo12:.LC8
 	bl	sftl_printk
 .L1487:
@@ -10199,7 +10199,7 @@ rk_ftl_garbage_collect:
 	bne	.L1488
 	adrp	x0, .LC8
 	mov	w2, 718
-	mov	x1, x24
+	mov	x1, x25
 	add	x0, x0, :lo12:.LC8
 	bl	sftl_printk
 .L1488:
@@ -10210,13 +10210,13 @@ rk_ftl_garbage_collect:
 	bne	.L1489
 	adrp	x0, .LC8
 	mov	w2, 719
-	mov	x1, x24
+	mov	x1, x25
 	add	x0, x0, :lo12:.LC8
 	bl	sftl_printk
 .L1489:
 	add	x22, x19, :lo12:.LANCHOR0
-	add	x25, x22, 184
-	mov	x0, x25
+	add	x24, x22, 184
+	mov	x0, x24
 	bl	make_superblock
 	ldrh	w1, [x22, 184]
 	ldr	x0, [x22, 80]
@@ -10255,7 +10255,7 @@ rk_ftl_garbage_collect:
 	cmp	w20, w27, uxth
 	bls	.L1500
 	add	x0, x19, :lo12:.LANCHOR0
-	mov	w25, 0
+	mov	w24, 0
 	add	x3, x0, 200
 	mov	w1, 0
 	mov	w6, 65535
@@ -10268,11 +10268,11 @@ rk_ftl_garbage_collect:
 	cmp	w2, w6
 	beq	.L1493
 	ldr	x5, [x0, 3280]
-	ubfiz	x8, x25, 5, 16
-	add	w25, w25, 1
+	ubfiz	x8, x24, 5, 16
+	add	w24, w24, 1
 	orr	w2, w4, w2, lsl 10
 	add	x5, x5, x8
-	and	w25, w25, 65535
+	and	w24, w24, 65535
 	str	w2, [x5, 4]
 .L1493:
 	add	w1, w1, 1
@@ -10282,12 +10282,12 @@ rk_ftl_garbage_collect:
 	cmp	w1, w7
 	bne	.L1494
 	add	x22, x19, :lo12:.LANCHOR0
-	mov	w1, w25
+	mov	w1, w24
 	mov	x28, 0
 	ldrb	w2, [x22, 192]
 	ldr	x0, [x22, 3280]
 	bl	FlashReadPages
-	ubfiz	x0, x25, 5, 16
+	ubfiz	x0, x24, 5, 16
 	str	x0, [x29, 104]
 .L1495:
 	ldr	x0, [x29, 104]
@@ -10301,17 +10301,17 @@ rk_ftl_garbage_collect:
 	ldr	w0, [x0, x28]
 	cmn	w0, #1
 	beq	.L1496
-	ldr	x25, [x1, 16]
+	ldr	x24, [x1, 16]
 	mov	w0, 61589
-	ldrh	w1, [x25]
+	ldrh	w1, [x24]
 	cmp	w1, w0
 	bne	.L1496
-	ldr	w4, [x25, 8]
+	ldr	w4, [x24, 8]
 	cmn	w4, #1
 	bne	.L1497
 	str	w4, [x29, 96]
 	mov	w2, 753
-	mov	x1, x24
+	mov	x1, x25
 	adrp	x0, .LC8
 	add	x0, x0, :lo12:.LC8
 	bl	sftl_printk
@@ -10350,11 +10350,11 @@ rk_ftl_garbage_collect:
 	str	x1, [x0, 16]
 	ldr	w0, [x29, 120]
 	mov	w1, 1
-	str	w0, [x25, 12]
+	str	w0, [x24, 12]
 	ldrh	w0, [x22, 136]
-	strh	w0, [x25, 2]
+	strh	w0, [x24, 2]
 	ldr	w0, [x22, 2672]
-	str	w0, [x25, 4]
+	str	w0, [x24, 4]
 	ldr	w0, [x22, 3248]
 	add	w0, w0, 1
 	str	w0, [x22, 3248]
@@ -10393,45 +10393,34 @@ rk_ftl_garbage_collect:
 	bl	Ftl_gc_temp_data_write_back
 	cbz	w0, .L1503
 	str	wzr, [x22, 3424]
-	b	.L1554
+	b	.L1555
 .L1503:
-	add	x20, x19, :lo12:.LANCHOR0
-	ldrh	w0, [x20, 3970]
-	cbnz	w0, .L1504
-	ldrh	w1, [x20, 184]
-	ldr	x3, [x20, 80]
-	ubfiz	x2, x1, 1, 16
-	ldrh	w4, [x3, x2]
-	cbz	w4, .L1504
-	ldrh	w5, [x20, 3972]
+	add	x0, x19, :lo12:.LANCHOR0
+	ldrh	w1, [x0, 3970]
+	cbnz	w1, .L1504
+	ldrh	w2, [x0, 184]
+	ldr	x1, [x0, 80]
+	ldrh	w1, [x1, x2, lsl 1]
+	cbz	w1, .L1504
+	mov	x20, x0
 	mov	w22, 0
-	ldrh	w2, [x20, 186]
-	mov	w3, 0
-	adrp	x0, .LC125
-	add	x0, x0, :lo12:.LC125
-	bl	sftl_printk
 .L1505:
 	ldr	w0, [x20, 2632]
 	cmp	w22, w0
-	bcs	.L1507
+	bcs	.L1510
 	mov	w2, 0
 	add	x1, x29, 124
 	mov	w0, w22
 	bl	log2phys
-	ldr	w4, [x29, 124]
-	cmn	w4, #1
+	ldr	w0, [x29, 124]
+	cmn	w0, #1
 	beq	.L1506
-	lsr	w0, w4, 10
+	lsr	w0, w0, 10
 	bl	P2V_block_in_plane
 	ldrh	w1, [x20, 184]
 	cmp	w1, w0, uxth
 	bne	.L1506
-	adrp	x0, .LC126
-	mov	w2, w4
-	mov	w1, w22
-	add	x0, x0, :lo12:.LC126
-	bl	sftl_printk
-.L1507:
+.L1510:
 	add	x0, x19, :lo12:.LANCHOR0
 	ldr	w1, [x0, 2632]
 	cmp	w22, w1
@@ -10452,18 +10441,18 @@ rk_ftl_garbage_collect:
 	ldrh	w1, [x0, 236]
 	str	wzr, [x0, 3424]
 	cmp	w1, 2
-	bhi	.L1510
+	bhi	.L1511
 	ldrh	w20, [x0, 314]
-	b	.L1511
+	b	.L1512
 .L1506:
 	add	w22, w22, 1
 	b	.L1505
-.L1510:
+.L1511:
 	ldrh	w0, [x0, 3968]
 	cmp	w0, 0
 	csinc	w0, w0, w1, ne
 	b	.L1436
-.L1514:
+.L1515:
 	mov	w0, 0
 	b	.L1436
 	.size	rk_ftl_garbage_collect, .-rk_ftl_garbage_collect
@@ -10483,13 +10472,13 @@ FtlRead:
 	mov	w25, w2
 	stp	x21, x22, [sp, 32]
 	stp	x27, x28, [sp, 80]
-	bne	.L1556
+	bne	.L1557
 	mov	x2, x3
 	mov	w1, w25
 	add	w0, w19, 256
 	bl	FtlVendorPartRead
 	mov	w21, w0
-.L1555:
+.L1556:
 	mov	w0, w21
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
@@ -10498,7 +10487,7 @@ FtlRead:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 160
 	ret
-.L1556:
+.L1557:
 	add	w0, w1, w2
 	str	w0, [x29, 128]
 	adrp	x0, .LANCHOR0
@@ -10507,11 +10496,11 @@ FtlRead:
 	str	x0, [x29, 96]
 	ldr	w1, [x3, 352]
 	cmp	w2, w1
-	bhi	.L1577
+	bhi	.L1578
 	adrp	x0, .LANCHOR2
 	ldr	w21, [x0, #:lo12:.LANCHOR2]
 	cmn	w21, #1
-	beq	.L1555
+	beq	.L1556
 	ldrh	w0, [x3, 270]
 	sub	w24, w2, #1
 	mov	x26, x3
@@ -10530,42 +10519,42 @@ FtlRead:
 	add	w22, w22, 1
 	add	w0, w0, w22
 	str	w0, [x3, 2636]
-.L1558:
-	cbnz	w22, .L1575
+.L1559:
+	cbnz	w22, .L1576
 	ldr	x0, [x29, 96]
 	add	x0, x0, :lo12:.LANCHOR0
 	ldrh	w1, [x0, 3320]
-	cbnz	w1, .L1576
+	cbnz	w1, .L1577
 	ldrh	w0, [x0, 236]
 	cmp	w0, 31
-	bhi	.L1555
-.L1576:
+	bhi	.L1556
+.L1577:
 	mov	w1, 1
 	mov	w0, 0
 	bl	rk_ftl_garbage_collect
-	b	.L1555
-.L1575:
+	b	.L1556
+.L1576:
 	add	x1, x29, 156
 	mov	w2, 0
 	mov	w0, w20
 	bl	log2phys
 	ldr	w1, [x29, 156]
 	cmn	w1, #1
-	bne	.L1559
+	bne	.L1560
 	mov	w5, 0
-.L1560:
+.L1561:
 	ldrh	w0, [x26, 270]
 	cmp	w5, w0
-	bcc	.L1562
-.L1563:
+	bcc	.L1563
+.L1564:
 	add	w20, w20, 1
 	subs	w22, w22, #1
-	beq	.L1567
+	beq	.L1568
 	ldrh	w0, [x26, 244]
 	cmp	w28, w0, lsl 2
-	bne	.L1558
-.L1567:
-	cbz	w28, .L1558
+	bne	.L1559
+.L1568:
+	cbz	w28, .L1559
 	ldr	x0, [x26, 3440]
 	mov	w1, w28
 	mov	w2, 0
@@ -10582,63 +10571,63 @@ FtlRead:
 	ubfiz	x0, x28, 5, 32
 	mov	x28, 0
 	str	x0, [x29, 104]
-.L1574:
+.L1575:
 	ldr	x0, [x26, 3440]
 	add	x0, x0, x28
 	ldr	w1, [x0, 24]
 	cmp	w27, w1
-	bne	.L1569
+	bne	.L1570
 	ldr	x1, [x0, 8]
 	ldr	x0, [x26, 3488]
 	cmp	x1, x0
-	bne	.L1570
+	bne	.L1571
 	ldr	x0, [x29, 120]
 	ldr	w2, [x29, 116]
 	add	x1, x1, x0
 	mov	x0, x23
-.L1587:
+.L1588:
 	bl	ftl_memcpy
-.L1570:
+.L1571:
 	ldr	x0, [x26, 3440]
 	add	x0, x0, x28
 	ldr	x1, [x0, 16]
 	ldr	w2, [x0, 24]
 	ldr	w1, [x1, 8]
 	cmp	w2, w1
-	beq	.L1571
+	beq	.L1572
 	ldr	w1, [x26, 2792]
 	add	w1, w1, 1
 	str	w1, [x26, 2792]
-.L1571:
+.L1572:
 	ldr	w2, [x0]
 	cmn	w2, #1
-	bne	.L1572
+	bne	.L1573
 	ldr	w1, [x26, 2792]
 	mov	w21, w2
 	add	w1, w1, 1
 	str	w1, [x26, 2792]
-.L1572:
+.L1573:
 	ldr	w1, [x0]
 	cmp	w1, 256
-	bne	.L1573
+	bne	.L1574
 	ldr	w0, [x0, 4]
 	lsr	w0, w0, 10
 	bl	P2V_block_in_plane
 	bl	FtlGcRefreshBlock
-.L1573:
+.L1574:
 	ldr	x0, [x29, 104]
 	add	x28, x28, 32
 	cmp	x0, x28
-	bne	.L1574
+	bne	.L1575
 	mov	w28, 0
-	b	.L1558
-.L1562:
+	b	.L1559
+.L1563:
 	madd	w0, w20, w0, w5
 	cmp	w19, w0
-	bhi	.L1561
+	bhi	.L1562
 	ldr	w1, [x29, 128]
 	cmp	w1, w0
-	bls	.L1561
+	bls	.L1562
 	sub	w0, w0, w19
 	str	w5, [x29, 120]
 	lsl	w0, w0, 9
@@ -10647,17 +10636,17 @@ FtlRead:
 	add	x0, x23, x0
 	bl	ftl_memset
 	ldr	w5, [x29, 120]
-.L1561:
+.L1562:
 	add	w5, w5, 1
-	b	.L1560
-.L1559:
+	b	.L1561
+.L1560:
 	ldr	x0, [x26, 3440]
 	ubfiz	x2, x28, 5, 32
 	cmp	w20, w27
 	add	x0, x0, x2
 	str	w1, [x0, 4]
 	ldrh	w0, [x26, 270]
-	bne	.L1564
+	bne	.L1565
 	ldr	x1, [x26, 3440]
 	ldr	x5, [x26, 3488]
 	add	x1, x1, x2
@@ -10670,9 +10659,9 @@ FtlRead:
 	csel	w3, w25, w5, ls
 	str	w3, [x29, 136]
 	cmp	w3, w0
-	bne	.L1565
+	bne	.L1566
 	str	x23, [x1, 8]
-.L1565:
+.L1566:
 	ldr	x0, [x26, 3440]
 	ldr	x1, [x26, 3536]
 	add	x2, x0, x2
@@ -10683,10 +10672,10 @@ FtlRead:
 	and	x0, x0, 4294967292
 	add	x0, x1, x0
 	str	x0, [x2, 16]
-	b	.L1563
-.L1564:
+	b	.L1564
+.L1565:
 	cmp	w20, w24
-	bne	.L1566
+	bne	.L1567
 	ldr	x5, [x26, 3440]
 	ldr	x1, [x26, 3496]
 	add	x5, x5, x2
@@ -10696,13 +10685,13 @@ FtlRead:
 	sub	w3, w3, w1
 	str	w3, [x29, 132]
 	cmp	w0, w3
-	bne	.L1565
+	bne	.L1566
 	sub	w1, w1, w19
 	lsl	w1, w1, 9
 	add	x1, x23, x1
 	str	x1, [x5, 8]
-	b	.L1565
-.L1566:
+	b	.L1566
+.L1567:
 	ldr	x1, [x26, 3440]
 	mul	w0, w0, w20
 	add	x1, x1, x2
@@ -10710,24 +10699,24 @@ FtlRead:
 	lsl	w0, w0, 9
 	add	x0, x23, x0
 	str	x0, [x1, 8]
-	b	.L1565
-.L1569:
+	b	.L1566
+.L1570:
 	cmp	w24, w1
-	bne	.L1570
+	bne	.L1571
 	ldr	x1, [x0, 8]
 	ldr	x0, [x26, 3496]
 	cmp	x1, x0
-	bne	.L1570
+	bne	.L1571
 	ldrh	w0, [x26, 270]
 	ldr	w2, [x29, 112]
 	mul	w0, w0, w24
 	sub	w0, w0, w19
 	lsl	w0, w0, 9
 	add	x0, x23, x0
-	b	.L1587
-.L1577:
+	b	.L1588
+.L1578:
 	mov	w21, -1
-	b	.L1555
+	b	.L1556
 	.size	FtlRead, .-FtlRead
 	.align	2
 	.global	sftl_read
@@ -10759,12 +10748,12 @@ FtlWrite:
 	stp	x21, x22, [sp, 32]
 	stp	x27, x28, [sp, 80]
 	str	w2, [x29, 172]
-	bne	.L1591
+	bne	.L1592
 	add	w0, w1, 256
 	ldr	w1, [x29, 172]
 	mov	x2, x3
 	bl	FtlVendorPartWrite
-.L1590:
+.L1591:
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
 	ldp	x23, x24, [sp, 48]
@@ -10772,7 +10761,7 @@ FtlWrite:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 224
 	ret
-.L1591:
+.L1592:
 	ldr	w0, [x29, 172]
 	adrp	x19, .LANCHOR0
 	add	x1, x19, :lo12:.LANCHOR0
@@ -10781,13 +10770,13 @@ FtlWrite:
 	ldr	w0, [x1, 352]
 	ldr	w2, [x29, 148]
 	cmp	w2, w0
-	bhi	.L1627
+	bhi	.L1628
 	adrp	x2, .LANCHOR2
 	str	x2, [x29, 136]
 	add	x3, x2, :lo12:.LANCHOR2
 	ldr	w0, [x2, #:lo12:.LANCHOR2]
 	cmn	w0, #1
-	beq	.L1590
+	beq	.L1591
 	mov	w0, 2048
 	ldr	w2, [x29, 148]
 	str	w0, [x1, 3976]
@@ -10808,55 +10797,55 @@ FtlWrite:
 	add	w0, w0, w24
 	str	w0, [x1, 2644]
 	ldr	w0, [x3, 8]
-	cbz	w0, .L1593
+	cbz	w0, .L1594
 	ldrh	w0, [x20, 4]
 	add	x1, x1, 88
 	cmp	w0, 0
 	csel	x20, x1, x20, eq
-.L1593:
+.L1594:
 	adrp	x0, .LANCHOR1
 	mov	w21, w25
 	add	x0, x0, :lo12:.LANCHOR1
 	add	x0, x0, 696
 	str	x0, [x29, 160]
-.L1594:
-	cbnz	w24, .L1622
+.L1595:
+	cbnz	w24, .L1623
 	ldr	w1, [x29, 132]
 	add	x19, x19, :lo12:.LANCHOR0
 	mov	w0, 0
 	bl	rk_ftl_garbage_collect
 	ldrh	w0, [x19, 236]
 	cmp	w0, 5
-	bls	.L1623
-.L1625:
+	bls	.L1624
+.L1626:
 	mov	w0, 0
-	b	.L1590
-.L1622:
+	b	.L1591
+.L1623:
 	add	x0, x19, :lo12:.LANCHOR0
 	ldrb	w1, [x20, 6]
 	ldrh	w0, [x0, 244]
 	cmp	w1, w0
-	bcc	.L1595
+	bcc	.L1596
 	ldr	x1, [x29, 160]
 	adrp	x0, .LC8
 	mov	w2, 1038
 	add	x0, x0, :lo12:.LC8
 	bl	sftl_printk
-.L1595:
+.L1596:
 	ldrh	w0, [x20, 4]
-	cbnz	w0, .L1596
+	cbnz	w0, .L1597
 	add	x0, x19, :lo12:.LANCHOR0
 	add	x1, x0, 32
 	cmp	x20, x1
-	bne	.L1597
+	bne	.L1598
 	add	x0, x0, 88
 	ldrh	w1, [x0, 4]
-	cbnz	w1, .L1598
+	cbnz	w1, .L1599
 	bl	allocate_new_data_superblock
 	ldr	x0, [x29, 136]
 	add	x0, x0, :lo12:.LANCHOR2
 	str	wzr, [x0, 8]
-.L1598:
+.L1599:
 	add	x20, x19, :lo12:.LANCHOR0
 	add	x22, x20, 32
 	add	x20, x20, 88
@@ -10867,12 +10856,12 @@ FtlWrite:
 	ldr	w0, [x0, 8]
 	cmp	w0, 0
 	csel	x20, x20, x22, ne
-.L1599:
+.L1600:
 	ldrh	w0, [x20, 4]
-	cbnz	w0, .L1596
+	cbnz	w0, .L1597
 	mov	x0, x20
 	bl	allocate_new_data_superblock
-.L1596:
+.L1597:
 	ldrh	w0, [x20, 4]
 	ldrb	w1, [x20, 7]
 	cmp	w0, w24
@@ -10885,21 +10874,21 @@ FtlWrite:
 	ldrb	w1, [x20, 6]
 	ldrh	w0, [x0, 244]
 	cmp	w1, w0
-	bcc	.L1600
+	bcc	.L1601
 	ldr	x1, [x29, 160]
 	adrp	x0, .LC8
 	mov	w2, 1071
 	add	x0, x0, :lo12:.LC8
 	bl	sftl_printk
-.L1600:
-	mov	x28, 0
 .L1601:
+	mov	x28, 0
+.L1602:
 	ldr	w0, [x29, 128]
 	mov	w22, w28
 	cmp	w28, w0
-	bcc	.L1620
+	bcc	.L1621
 	mov	x22, x0
-.L1602:
+.L1603:
 	add	x0, x19, :lo12:.LANCHOR0
 	mov	x3, x20
 	mov	w2, 0
@@ -10907,30 +10896,30 @@ FtlWrite:
 	ldr	x0, [x0, 3456]
 	bl	FtlProgPages
 	cmp	w24, w22
-	bcs	.L1621
+	bcs	.L1622
 	ldr	x1, [x29, 160]
 	adrp	x0, .LC8
 	mov	w2, 1149
 	add	x0, x0, :lo12:.LC8
 	bl	sftl_printk
-.L1621:
+.L1622:
 	sub	w24, w24, w22
-	b	.L1594
-.L1597:
+	b	.L1595
+.L1598:
 	ldr	x0, [x29, 136]
 	add	x0, x0, :lo12:.LANCHOR2
 	str	wzr, [x0, 8]
 	ldrh	w0, [x1, 4]
-	cbnz	w0, .L1632
+	cbnz	w0, .L1633
 	mov	x0, x20
 	bl	allocate_new_data_superblock
-	b	.L1599
-.L1632:
+	b	.L1600
+.L1633:
 	mov	x20, x1
-	b	.L1596
-.L1620:
+	b	.L1597
+.L1621:
 	ldrh	w0, [x20, 4]
-	cbz	w0, .L1602
+	cbz	w0, .L1603
 	add	x1, x29, 188
 	mov	w2, 0
 	mov	w0, w21
@@ -10962,9 +10951,9 @@ FtlWrite:
 	cmp	w21, w25
 	ldr	x3, [x29, 152]
 	ccmp	w21, w0, 4, ne
-	bne	.L1603
-	cmp	w21, w25
 	bne	.L1604
+	cmp	w21, w25
+	bne	.L1605
 	ldrh	w2, [x3, 270]
 	udiv	w0, w23, w2
 	msub	w0, w0, w2, w23
@@ -10974,29 +10963,29 @@ FtlWrite:
 	cmp	w2, w0
 	csel	w0, w2, w0, ls
 	str	w0, [x29, 152]
-.L1605:
+.L1606:
 	add	x0, x19, :lo12:.LANCHOR0
 	ldr	w2, [x29, 152]
 	ldrh	w1, [x0, 270]
 	cmp	w2, w1
-	bne	.L1606
+	bne	.L1607
 	ldr	x0, [x0, 3456]
 	cmp	w21, w25
 	add	x4, x0, x27
-	bne	.L1607
+	bne	.L1608
 	str	x26, [x4, 8]
-.L1608:
+.L1609:
 	add	x0, x19, :lo12:.LANCHOR0
 	ldrb	w1, [x20, 6]
 	ldrh	w0, [x0, 244]
 	cmp	w1, w0
-	bcc	.L1617
+	bcc	.L1618
 	ldr	x1, [x29, 160]
 	adrp	x0, .LC8
 	mov	w2, 1140
 	add	x0, x0, :lo12:.LC8
 	bl	sftl_printk
-.L1617:
+.L1618:
 	ldp	x1, x2, [x29, 112]
 	mov	w0, -3947
 	add	x28, x28, 1
@@ -11013,35 +11002,35 @@ FtlWrite:
 	str	w0, [x22, 12]
 	ldrh	w0, [x20]
 	strh	w0, [x22, 2]
-	b	.L1601
-.L1604:
+	b	.L1602
+.L1605:
 	ldr	w0, [x29, 148]
 	ldrh	w2, [x3, 270]
 	str	wzr, [x29, 168]
 	msub	w2, w21, w2, w0
 	and	w0, w2, 65535
 	str	w0, [x29, 152]
-	b	.L1605
-.L1607:
+	b	.L1606
+.L1608:
 	ldr	w0, [x29, 152]
-.L1639:
+.L1640:
 	mul	w0, w0, w21
 	sub	w0, w0, w23
 	lsl	w0, w0, 9
 	add	x0, x26, x0
 	str	x0, [x4, 8]
-	b	.L1608
-.L1606:
+	b	.L1609
+.L1607:
 	ldr	x1, [x0, 3456]
 	cmp	w21, w25
 	add	x1, x1, x27
-	bne	.L1609
+	bne	.L1610
 	ldr	x0, [x0, 3488]
-.L1638:
+.L1639:
 	str	x0, [x1, 8]
 	ldr	w0, [x29, 188]
 	cmn	w0, #1
-	beq	.L1611
+	beq	.L1612
 	add	x5, x19, :lo12:.LANCHOR0
 	str	w0, [x29, 196]
 	str	w21, [x29, 216]
@@ -11057,21 +11046,21 @@ FtlWrite:
 	ldr	w3, [x29, 192]
 	ldr	x5, [x29, 104]
 	cmn	w3, #1
-	bne	.L1612
+	bne	.L1613
 	ldr	w0, [x5, 2792]
 	mov	w2, w21
 	add	w0, w0, 1
 	str	w0, [x5, 2792]
-	adrp	x0, .LC127
-	add	x0, x0, :lo12:.LC127
+	adrp	x0, .LC125
+	add	x0, x0, :lo12:.LC125
 	ldr	w1, [x22, 8]
 	bl	sftl_printk
-.L1615:
+.L1616:
 	ldr	w0, [x29, 152]
 	cmp	w21, w25
 	lsl	w2, w0, 9
 	add	x0, x19, :lo12:.LANCHOR0
-	bne	.L1616
+	bne	.L1617
 	ldr	x0, [x0, 3456]
 	mov	x1, x26
 	add	x4, x0, x27
@@ -11079,35 +11068,35 @@ FtlWrite:
 	ldr	x3, [x4, 8]
 	lsl	w0, w0, 9
 	add	x0, x3, x0
-.L1640:
+.L1641:
 	bl	ftl_memcpy
-	b	.L1608
-.L1609:
+	b	.L1609
+.L1610:
 	ldr	x0, [x0, 3496]
-	b	.L1638
-.L1612:
+	b	.L1639
+.L1613:
 	ldr	w0, [x22, 8]
 	cmp	w21, w0
-	beq	.L1614
+	beq	.L1615
 	ldr	w0, [x5, 2792]
 	mov	w2, w21
 	add	w0, w0, 1
 	str	w0, [x5, 2792]
-	adrp	x0, .LC128
-	add	x0, x0, :lo12:.LC128
+	adrp	x0, .LC126
+	add	x0, x0, :lo12:.LC126
 	ldr	w1, [x22, 8]
 	bl	sftl_printk
-.L1614:
+.L1615:
 	ldr	w0, [x22, 8]
 	cmp	w21, w0
-	beq	.L1615
+	beq	.L1616
 	ldr	x1, [x29, 160]
 	mov	w2, 1125
 	adrp	x0, .LC8
 	add	x0, x0, :lo12:.LC8
 	bl	sftl_printk
-	b	.L1615
-.L1611:
+	b	.L1616
+.L1612:
 	add	x1, x19, :lo12:.LANCHOR0
 	ldr	x0, [x1, 3456]
 	ldrh	w2, [x1, 322]
@@ -11115,8 +11104,8 @@ FtlWrite:
 	add	x0, x0, x27
 	ldr	x0, [x0, 8]
 	bl	ftl_memset
-	b	.L1615
-.L1616:
+	b	.L1616
+.L1617:
 	ldrh	w1, [x0, 270]
 	ldr	x0, [x0, 3456]
 	add	x4, x0, x27
@@ -11125,27 +11114,27 @@ FtlWrite:
 	ldr	x0, [x4, 8]
 	lsl	w1, w1, 9
 	add	x1, x26, x1
-	b	.L1640
-.L1603:
+	b	.L1641
+.L1604:
 	ldr	x0, [x3, 3456]
 	add	x4, x0, x27
 	ldrh	w0, [x3, 270]
-	b	.L1639
-.L1623:
+	b	.L1640
+.L1624:
 	mov	w20, 256
 	mov	w21, 65535
 	mov	w22, 128
-.L1626:
+.L1627:
 	ldrh	w0, [x19, 184]
 	cmp	w0, w21
-	bne	.L1624
+	bne	.L1625
 	ldrh	w0, [x19, 234]
 	cmp	w0, w21
-	bne	.L1624
+	bne	.L1625
 	mov	w0, 0
 	bl	List_get_gc_head_node
 	bl	FtlGcRefreshBlock
-.L1624:
+.L1625:
 	mov	w1, 1
 	strh	w22, [x19, 3234]
 	mov	w0, w1
@@ -11156,13 +11145,13 @@ FtlWrite:
 	bl	rk_ftl_garbage_collect
 	ldrh	w0, [x19, 236]
 	cmp	w0, 2
-	bhi	.L1625
+	bhi	.L1626
 	subs	w20, w20, #1
-	bne	.L1626
-	b	.L1625
-.L1627:
+	bne	.L1627
+	b	.L1626
+.L1628:
 	mov	w0, -1
-	b	.L1590
+	b	.L1591
 	.size	FtlWrite, .-FtlWrite
 	.align	2
 	.global	sftl_gc
@@ -11201,17 +11190,17 @@ FtlLoadSysInfo:
 	ldrh	w0, [x21, 2704]
 	mov	w1, 65535
 	cmp	w0, w1
-	bne	.L1644
-.L1655:
+	bne	.L1645
+.L1656:
 	mov	w0, -1
-.L1643:
+.L1644:
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
 	ldp	x23, x24, [sp, 48]
 	ldr	x25, [sp, 64]
 	ldp	x29, x30, [sp], 80
 	ret
-.L1644:
+.L1645:
 	add	x23, x21, 2704
 	mov	w1, 1
 	bl	FtlGetLastWrittenPage
@@ -11222,8 +11211,8 @@ FtlLoadSysInfo:
 	strh	w0, [x23, 2]
 	ldrsh	w23, [x21, 2704]
 	add	x24, x1, 712
-.L1646:
-	tbz	w19, #31, .L1652
+.L1647:
+	tbz	w19, #31, .L1653
 	adrp	x1, .LANCHOR1
 	add	x1, x1, :lo12:.LANCHOR1
 	mov	w2, 1465
@@ -11231,8 +11220,8 @@ FtlLoadSysInfo:
 	adrp	x0, .LC8
 	add	x0, x0, :lo12:.LC8
 	bl	sftl_printk
-	b	.L1651
-.L1652:
+	b	.L1652
+.L1653:
 	orr	w0, w19, w23, lsl 10
 	str	w0, [x20, 4]
 	ldr	x0, [x21, 3464]
@@ -11243,59 +11232,59 @@ FtlLoadSysInfo:
 	bl	FlashReadPages
 	ldr	x0, [x20, 16]
 	ldr	w7, [x0, 12]
-	cbz	w7, .L1647
+	cbz	w7, .L1648
 	ldr	w0, [x20]
 	cmn	w0, #1
-	beq	.L1647
+	beq	.L1648
 	ldrh	w1, [x21, 322]
 	ldr	x0, [x20, 8]
 	bl	js_hash
 	cmp	w7, w0
-	beq	.L1647
+	beq	.L1648
 	ldrh	w4, [x21, 2708]
 	mov	w6, w0
 	mov	w5, w7
-	adrp	x0, .LC129
+	adrp	x0, .LC127
 	mov	w3, w19
 	mov	w2, w23
 	mov	x1, x24
-	add	x0, x0, :lo12:.LC129
+	add	x0, x0, :lo12:.LC127
 	bl	sftl_printk
-	cbnz	w19, .L1648
+	cbnz	w19, .L1649
 	ldrh	w0, [x21, 2708]
 	cmp	w23, w0
-	beq	.L1648
+	beq	.L1649
 	ldrh	w19, [x21, 316]
 	sxth	w23, w0
-.L1650:
+.L1651:
 	sub	w19, w19, #1
 	sxth	w19, w19
-	b	.L1646
-.L1648:
+	b	.L1647
+.L1649:
 	mov	w0, -1
 	str	w0, [x20]
-.L1647:
+.L1648:
 	ldr	w0, [x20]
 	cmn	w0, #1
-	beq	.L1650
+	beq	.L1651
 	ldr	x0, [x21, 3464]
 	ldr	w1, [x0]
 	mov	w0, 19539
 	movk	w0, 0x4654, lsl 16
 	cmp	w1, w0
-	bne	.L1650
+	bne	.L1651
 	ldr	x0, [x21, 3528]
 	ldrh	w1, [x0]
 	mov	w0, 61604
 	cmp	w1, w0
-	bne	.L1650
-.L1651:
+	bne	.L1651
+.L1652:
 	add	x1, x22, :lo12:.LANCHOR0
 	ldrh	w0, [x1, 252]
 	ldrh	w1, [x1, 322]
 	add	x0, x0, 24
 	cmp	x1, x0, lsl 1
-	bcs	.L1654
+	bcs	.L1655
 	adrp	x1, .LANCHOR1
 	add	x1, x1, :lo12:.LANCHOR1
 	adrp	x0, .LC8
@@ -11303,7 +11292,7 @@ FtlLoadSysInfo:
 	add	x1, x1, 712
 	add	x0, x0, :lo12:.LC8
 	bl	sftl_printk
-.L1654:
+.L1655:
 	add	x19, x22, :lo12:.LANCHOR0
 	mov	w2, 48
 	add	x20, x19, 2520
@@ -11330,13 +11319,13 @@ FtlLoadSysInfo:
 	mov	w0, 19539
 	movk	w0, 0x4654, lsl 16
 	cmp	w1, w0
-	bne	.L1655
+	bne	.L1656
 	ldrh	w1, [x19, 2528]
 	ldrb	w2, [x19, 2530]
 	ldrh	w0, [x19, 266]
 	strh	w1, [x19, 2710]
 	cmp	w2, w0
-	bne	.L1655
+	bne	.L1656
 	ldrh	w0, [x19, 314]
 	ldrh	w2, [x19, 270]
 	ldrh	w3, [x19, 244]
@@ -11352,7 +11341,7 @@ FtlLoadSysInfo:
 	sub	w0, w0, w1
 	udiv	w0, w0, w3
 	strh	w0, [x19, 2700]
-	bls	.L1656
+	bls	.L1657
 	adrp	x1, .LANCHOR1
 	add	x1, x1, :lo12:.LANCHOR1
 	adrp	x0, .LC8
@@ -11360,7 +11349,7 @@ FtlLoadSysInfo:
 	add	x1, x1, 712
 	add	x0, x0, :lo12:.LC8
 	bl	sftl_printk
-.L1656:
+.L1657:
 	add	x0, x22, :lo12:.LANCHOR0
 	mov	w3, -1
 	ldrh	w2, [x0, 2536]
@@ -11406,49 +11395,49 @@ FtlLoadSysInfo:
 	ldr	w2, [x0, 2668]
 	str	wzr, [x0, 2648]
 	cmp	w1, w2
-	bls	.L1657
+	bls	.L1658
 	str	w1, [x0, 2668]
-.L1657:
+.L1658:
 	add	x0, x22, :lo12:.LANCHOR0
 	ldr	w1, [x0, 2556]
 	ldr	w2, [x0, 2672]
 	cmp	w1, w2
-	bls	.L1658
+	bls	.L1659
 	str	w1, [x0, 2672]
-.L1658:
+.L1659:
 	mov	w0, 65535
 	cmp	w4, w0
-	beq	.L1659
+	beq	.L1660
 	add	x0, x22, :lo12:.LANCHOR0
 	add	x0, x0, 32
 	bl	make_superblock
-.L1659:
+.L1660:
 	add	x1, x22, :lo12:.LANCHOR0
 	add	x0, x1, 88
 	ldrh	w2, [x1, 88]
 	mov	w1, 65535
 	cmp	w2, w1
-	beq	.L1660
+	beq	.L1661
 	bl	make_superblock
-.L1660:
+.L1661:
 	add	x1, x22, :lo12:.LANCHOR0
 	add	x0, x1, 136
 	ldrh	w2, [x1, 136]
 	mov	w1, 65535
 	cmp	w2, w1
-	beq	.L1661
+	beq	.L1662
 	bl	make_superblock
-.L1661:
+.L1662:
 	add	x22, x22, :lo12:.LANCHOR0
 	mov	w1, 65535
 	add	x0, x22, 184
 	ldrh	w2, [x22, 184]
 	cmp	w2, w1
-	beq	.L1662
+	beq	.L1663
 	bl	make_superblock
-.L1662:
+.L1663:
 	mov	w0, 0
-	b	.L1643
+	b	.L1644
 	.size	FtlLoadSysInfo, .-FtlLoadSysInfo
 	.align	2
 	.global	FtlMapTblRecovery
@@ -11493,14 +11482,14 @@ FtlMapTblRecovery:
 	add	x0, x0, :lo12:.LANCHOR1
 	add	x0, x0, 728
 	str	x0, [x29, 104]
-.L1675:
+.L1676:
 	ldr	w0, [x29, 136]
 	cmp	w20, w0
-	bge	.L1694
+	bge	.L1695
 	ldr	w0, [x29, 116]
 	sxtw	x28, w20
 	cmp	w20, w0
-	bne	.L1676
+	bne	.L1677
 	lsl	x0, x28, 1
 	mov	w26, 0
 	add	x1, x24, x0
@@ -11521,22 +11510,22 @@ FtlMapTblRecovery:
 	add	x28, x21, :lo12:.LANCHOR0
 	add	x27, x28, 3728
 	str	w0, [x19, 48]
-.L1677:
+.L1678:
 	ldr	w0, [x29, 120]
 	add	w0, w0, 1
 	cmp	w26, w0
-	blt	.L1680
-.L1694:
+	blt	.L1681
+.L1695:
 	add	x21, x21, :lo12:.LANCHOR0
 	mov	x0, x19
 	bl	ftl_free_no_use_map_blk
 	ldrh	w1, [x19, 2]
 	ldrh	w0, [x21, 316]
 	cmp	w1, w0
-	bne	.L1682
+	bne	.L1683
 	mov	x0, x19
 	bl	ftl_map_blk_alloc_new_blk
-.L1682:
+.L1683:
 	mov	x0, x19
 	bl	ftl_map_blk_gc
 	mov	x0, x19
@@ -11549,7 +11538,7 @@ FtlMapTblRecovery:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 144
 	ret
-.L1680:
+.L1681:
 	ldr	x0, [x29, 136]
 	mov	w2, 1
 	mov	w1, w2
@@ -11560,44 +11549,44 @@ FtlMapTblRecovery:
 	bl	FlashReadPages
 	ldr	x0, [x27, 16]
 	ldr	w8, [x0, 12]
-	cbz	w8, .L1678
+	cbz	w8, .L1679
 	ldr	w0, [x27]
 	cmn	w0, #1
-	beq	.L1678
+	beq	.L1679
 	ldrh	w1, [x28, 322]
 	ldr	x0, [x27, 8]
 	bl	js_hash
 	cmp	w8, w0
-	beq	.L1678
+	beq	.L1679
 	mov	w5, w0
 	mov	w4, w8
 	mov	w3, w26
 	mov	w2, w20
 	mov	x1, x24
-	adrp	x0, .LC130
-	add	x0, x0, :lo12:.LC130
+	adrp	x0, .LC128
+	add	x0, x0, :lo12:.LC128
 	bl	sftl_printk
 	mov	w0, -1
 	str	w0, [x27]
-.L1678:
+.L1679:
 	ldr	w0, [x27]
 	cmn	w0, #1
-	beq	.L1679
+	beq	.L1680
 	ldrh	w0, [x22, 8]
 	cmp	w25, w0
-	bls	.L1679
+	bls	.L1680
 	ldrh	w2, [x22]
 	ldrh	w1, [x19, 4]
 	cmp	w2, w1
-	bne	.L1679
+	bne	.L1680
 	ubfiz	x0, x0, 2, 16
 	ldr	w1, [x27, 4]
 	str	w1, [x23, x0]
-.L1679:
+.L1680:
 	add	w7, w26, 1
 	sxth	w26, w7
-	b	.L1677
-.L1676:
+	b	.L1678
+.L1677:
 	add	x26, x21, :lo12:.LANCHOR0
 	lsl	x2, x28, 1
 	add	x0, x26, 3728
@@ -11615,23 +11604,23 @@ FtlMapTblRecovery:
 	bl	FlashReadPages
 	ldr	w0, [x26, 3728]
 	cmn	w0, #1
-	beq	.L1696
+	beq	.L1697
 	ldrh	w1, [x22]
 	ldrh	w0, [x19, 4]
 	cmp	w1, w0
-	bne	.L1696
+	bne	.L1697
 	ldrh	w1, [x22, 8]
 	mov	w0, 64245
 	cmp	w1, w0
-	beq	.L1684
-.L1696:
+	beq	.L1685
+.L1697:
 	add	x26, x21, :lo12:.LANCHOR0
 	mov	w27, 0
 	add	x28, x26, 3728
-.L1685:
+.L1686:
 	ldrh	w0, [x26, 316]
 	cmp	w27, w0
-	bge	.L1692
+	bge	.L1693
 	ldr	x0, [x29, 120]
 	mov	w2, 1
 	mov	w1, w2
@@ -11642,68 +11631,68 @@ FtlMapTblRecovery:
 	bl	FlashReadPages
 	ldr	x0, [x28, 16]
 	ldr	w7, [x0, 12]
-	cbz	w7, .L1689
+	cbz	w7, .L1690
 	ldr	w0, [x28]
 	cmn	w0, #1
-	beq	.L1689
+	beq	.L1690
 	ldrh	w1, [x26, 322]
 	ldr	x0, [x28, 8]
 	bl	js_hash
 	cmp	w7, w0
-	beq	.L1689
+	beq	.L1690
 	ldr	x1, [x29, 104]
 	mov	w5, w0
 	mov	w4, w7
 	mov	w3, w27
 	mov	w2, w20
-	adrp	x0, .LC131
-	add	x0, x0, :lo12:.LC131
+	adrp	x0, .LC129
+	add	x0, x0, :lo12:.LC129
 	bl	sftl_printk
 	mov	w0, -1
 	str	w0, [x28]
-.L1689:
+.L1690:
 	ldr	w0, [x28]
 	cmn	w0, #1
-	beq	.L1690
+	beq	.L1691
 	ldrh	w0, [x22, 8]
 	cmp	w25, w0
-	bls	.L1690
+	bls	.L1691
 	ldrh	w2, [x22]
 	ldrh	w1, [x19, 4]
 	cmp	w2, w1
-	bne	.L1690
+	bne	.L1691
 	ubfiz	x0, x0, 2, 16
 	ldr	w1, [x28, 4]
 	str	w1, [x23, x0]
-.L1690:
+.L1691:
 	add	w6, w27, 1
 	sxth	w27, w6
-	b	.L1685
-.L1684:
+	b	.L1686
+.L1685:
 	mov	w0, 0
-.L1686:
+.L1687:
 	ldrh	w1, [x26, 316]
 	sub	w1, w1, #1
 	cmp	w0, w1
-	blt	.L1688
-.L1692:
+	blt	.L1689
+.L1693:
 	add	w20, w20, 1
 	sxth	w20, w20
-	b	.L1675
-.L1688:
+	b	.L1676
+.L1689:
 	ldr	x2, [x26, 3464]
 	sbfiz	x3, x0, 3, 32
 	ldrh	w1, [x2, x3]
 	cmp	w25, w1
-	bls	.L1687
+	bls	.L1688
 	add	x2, x2, x3
 	ubfiz	x1, x1, 2, 16
 	ldr	w2, [x2, 4]
 	str	w2, [x23, x1]
-.L1687:
+.L1688:
 	add	w0, w0, 1
 	sxth	w0, w0
-	b	.L1686
+	b	.L1687
 	.size	FtlMapTblRecovery, .-FtlMapTblRecovery
 	.align	2
 	.global	FtlLoadVonderInfo
@@ -11767,20 +11756,20 @@ FtlSysBlkInit:
 	ldrh	w1, [x21, 2704]
 	mov	w0, 65535
 	cmp	w1, w0
-	bne	.L1721
-.L1723:
+	bne	.L1722
+.L1724:
 	mov	w23, -1
-.L1720:
+.L1721:
 	mov	w0, w23
 	ldr	x23, [sp, 48]
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
 	ldp	x29, x30, [sp], 64
 	ret
-.L1721:
+.L1722:
 	bl	FtlLoadSysInfo
 	mov	w23, w0
-	cbnz	w0, .L1723
+	cbnz	w0, .L1724
 	bl	FtlLoadMapInfo
 	bl	FtlLoadVonderInfo
 	bl	Ftl_load_ext_data
@@ -11794,19 +11783,19 @@ FtlSysBlkInit:
 	mov	w0, 0
 	ldrh	w3, [x21, 350]
 	add	x1, x1, 4
-.L1724:
+.L1725:
 	cmp	w0, w3
-	bge	.L1729
+	bge	.L1730
 	ldr	w2, [x1], 16
-	tbz	w2, #31, .L1725
-.L1729:
+	tbz	w2, #31, .L1726
+.L1730:
 	add	x2, x20, :lo12:.LANCHOR0
 	cmp	w0, w3
 	ldrh	w1, [x2, 2548]
 	add	w1, w1, 1
 	strh	w1, [x2, 2548]
-	bge	.L1735
-.L1726:
+	bge	.L1736
+.L1727:
 	add	x19, x20, :lo12:.LANCHOR0
 	add	x22, x19, 32
 	add	x21, x19, 88
@@ -11842,25 +11831,25 @@ FtlSysBlkInit:
 	bl	l2p_flush
 	bl	FtlVpcTblFlush
 	bl	FtlVpcTblFlush
-	b	.L1730
-.L1725:
+	b	.L1731
+.L1726:
 	add	w0, w0, 1
-	b	.L1724
-.L1735:
+	b	.L1725
+.L1736:
 	ldrh	w0, [x2, 3760]
-	cbnz	w0, .L1726
-.L1730:
+	cbnz	w0, .L1727
+.L1731:
 	add	x19, x20, :lo12:.LANCHOR0
 	mov	w1, 65535
 	add	x21, x19, 32
 	ldrh	w0, [x19, 32]
 	cmp	w0, w1
-	beq	.L1731
+	beq	.L1732
 	ldrh	w1, [x19, 36]
-	cbnz	w1, .L1731
+	cbnz	w1, .L1732
 	ldrh	w1, [x19, 92]
 	add	x20, x19, 88
-	cbnz	w1, .L1731
+	cbnz	w1, .L1732
 	bl	FtlGcRefreshBlock
 	ldrh	w0, [x19, 88]
 	bl	FtlGcRefreshBlock
@@ -11869,9 +11858,9 @@ FtlSysBlkInit:
 	bl	allocate_new_data_superblock
 	mov	x0, x20
 	bl	allocate_new_data_superblock
-.L1731:
+.L1732:
 	bl	FtlVpcCheckAndModify
-	b	.L1720
+	b	.L1721
 	.size	FtlSysBlkInit, .-FtlSysBlkInit
 	.align	2
 	.global	ftl_low_format
@@ -11889,36 +11878,36 @@ ftl_low_format:
 	ldrh	w0, [x0, 248]
 	bl	FtlFreeSysBlkQueueInit
 	bl	FtlLoadBbt
-	cbz	w0, .L1738
+	cbz	w0, .L1739
 	bl	FtlMakeBbt
-.L1738:
+.L1739:
 	mov	w4, 23752
 	add	x1, x20, :lo12:.LANCHOR0
 	mov	w0, 0
 	movk	w4, 0xa0f, lsl 16
-.L1739:
+.L1740:
 	ldrh	w2, [x1, 270]
 	cmp	w0, w2, lsl 7
-	blt	.L1740
+	blt	.L1741
 	ldrh	w21, [x1, 252]
 	add	x22, x20, :lo12:.LANCHOR0
 	mov	w19, 0
-.L1741:
+.L1742:
 	ldrh	w0, [x22, 254]
 	cmp	w0, w21
-	bhi	.L1742
+	bhi	.L1743
 	ldrh	w0, [x22, 244]
 	sub	w1, w19, #3
 	cmp	w1, w0, lsl 1
-	bge	.L1743
-.L1747:
+	bge	.L1744
+.L1748:
 	add	x19, x20, :lo12:.LANCHOR0
 	mov	w21, 0
 	mov	w22, 0
-.L1744:
+.L1745:
 	ldrh	w0, [x19, 252]
 	cmp	w0, w22
-	bhi	.L1748
+	bhi	.L1749
 	ldrh	w2, [x19, 244]
 	ldr	w1, [x19, 256]
 	ldrh	w0, [x19, 254]
@@ -11931,28 +11920,28 @@ ftl_low_format:
 	mov	w0, 24
 	mul	w0, w2, w0
 	cmp	w21, w0
-	ble	.L1749
+	ble	.L1750
 	sub	w1, w1, w21
 	udiv	w1, w1, w2
 	str	w1, [x19, 2632]
 	lsr	w1, w1, 5
 	add	w1, w1, 24
 	strh	w1, [x19, 2700]
-.L1749:
+.L1750:
 	add	x0, x20, :lo12:.LANCHOR0
 	ldrh	w1, [x0, 306]
-	cbz	w1, .L1751
+	cbz	w1, .L1752
 	ldrh	w5, [x0, 2700]
 	add	w5, w5, w1, lsr 1
 	strh	w5, [x0, 2700]
 	mul	w5, w1, w2
 	cmp	w21, w5
-	bge	.L1751
+	bge	.L1752
 	add	w1, w1, 32
 	str	w4, [x0, 2632]
 	add	w1, w3, w1
 	strh	w1, [x0, 2700]
-.L1751:
+.L1752:
 	add	x19, x20, :lo12:.LANCHOR0
 	mov	w22, -1
 	add	x21, x19, 32
@@ -11988,20 +11977,20 @@ ftl_low_format:
 	strh	wzr, [x19, 32]
 	str	wzr, [x19, 2628]
 	bl	ftl_memset
-.L1753:
+.L1754:
 	mov	x0, x21
 	bl	make_superblock
 	ldrb	w1, [x21, 7]
 	ldrh	w0, [x21]
-	cbnz	w1, .L1754
+	cbnz	w1, .L1755
 	ldr	x1, [x19, 80]
 	ubfiz	x0, x0, 1, 16
 	strh	w22, [x1, x0]
 	ldrh	w0, [x21]
 	add	w0, w0, 1
 	strh	w0, [x21]
-	b	.L1753
-.L1740:
+	b	.L1754
+.L1741:
 	ldr	x5, [x1, 3488]
 	ubfiz	x3, x0, 2, 16
 	mvn	w2, w0
@@ -12011,8 +12000,8 @@ ftl_low_format:
 	str	w2, [x5, x3]
 	ldr	x2, [x1, 3496]
 	str	w4, [x2, x3]
-	b	.L1739
-.L1742:
+	b	.L1740
+.L1743:
 	mov	w0, w21
 	mov	w1, 1
 	add	w21, w21, 1
@@ -12020,8 +12009,8 @@ ftl_low_format:
 	add	w19, w19, w0
 	and	w21, w21, 65535
 	and	w19, w19, 65535
-	b	.L1741
-.L1743:
+	b	.L1742
+.L1744:
 	udiv	w0, w19, w0
 	ldr	w19, [x22, 344]
 	add	x21, x20, :lo12:.LANCHOR0
@@ -12030,17 +12019,17 @@ ftl_low_format:
 	ldrh	w0, [x22, 248]
 	bl	FtlFreeSysBlkQueueInit
 	ldrh	w19, [x22, 252]
-.L1745:
+.L1746:
 	ldrh	w0, [x21, 254]
 	cmp	w0, w19
-	bls	.L1747
+	bls	.L1748
 	mov	w0, w19
 	add	w19, w19, 1
 	mov	w1, 1
 	and	w19, w19, 65535
 	bl	FtlLowFormatEraseBlock
-	b	.L1745
-.L1748:
+	b	.L1746
+.L1749:
 	mov	w0, w22
 	mov	w1, 0
 	add	w22, w22, 1
@@ -12048,8 +12037,8 @@ ftl_low_format:
 	add	w21, w21, w0
 	and	w22, w22, 65535
 	and	w21, w21, 65535
-	b	.L1744
-.L1754:
+	b	.L1745
+.L1755:
 	ldr	w1, [x19, 2668]
 	ubfiz	x0, x0, 1, 16
 	str	w1, [x21, 12]
@@ -12069,20 +12058,20 @@ ftl_low_format:
 	strb	w1, [x19, 96]
 	add	x19, x20, :lo12:.LANCHOR0
 	mov	x20, x0
-.L1755:
+.L1756:
 	mov	x0, x20
 	bl	make_superblock
 	ldrb	w1, [x20, 7]
 	ldrh	w0, [x20]
-	cbnz	w1, .L1756
+	cbnz	w1, .L1757
 	ldr	x1, [x19, 80]
 	ubfiz	x0, x0, 1, 16
 	strh	w21, [x1, x0]
 	ldrh	w0, [x20]
 	add	w0, w0, 1
 	strh	w0, [x20]
-	b	.L1755
-.L1756:
+	b	.L1756
+.L1757:
 	ldr	w1, [x19, 2668]
 	ubfiz	x0, x0, 1, 16
 	str	w1, [x20, 12]
@@ -12105,11 +12094,11 @@ ftl_low_format:
 	str	w0, [x19, 2668]
 	bl	FtlVpcTblFlush
 	bl	FtlSysBlkInit
-	cbnz	w0, .L1757
+	cbnz	w0, .L1758
 	adrp	x0, .LANCHOR2
 	mov	w1, 1
 	str	w1, [x0, #:lo12:.LANCHOR2]
-.L1757:
+.L1758:
 	mov	w0, 0
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
@@ -12140,22 +12129,22 @@ sftl_init:
 	ldrh	w0, [x19, 248]
 	bl	FtlFreeSysBlkQueueInit
 	bl	FtlLoadBbt
-	cbnz	w0, .L1766
+	cbnz	w0, .L1767
 	bl	FtlSysBlkInit
-	cbnz	w0, .L1766
+	cbnz	w0, .L1767
 	mov	w0, 1
 	str	w0, [x20, #:lo12:.LANCHOR2]
 	ldrh	w0, [x19, 236]
 	cmp	w0, 15
-	bhi	.L1766
+	bhi	.L1767
 	mov	w19, 8129
-.L1765:
+.L1766:
 	mov	w1, 1
 	mov	w0, 0
 	bl	rk_ftl_garbage_collect
 	subs	w19, w19, #1
-	bne	.L1765
-.L1766:
+	bne	.L1766
+.L1767:
 	mov	w0, 0
 	ldp	x19, x20, [sp, 16]
 	ldp	x29, x30, [sp], 32
@@ -12176,33 +12165,33 @@ FtlWriteToIDB:
 	stp	x19, x20, [sp, 16]
 	cmp	w25, 63
 	stp	x27, x28, [sp, 80]
-	bls	.L1770
+	bls	.L1771
 	mov	w19, w0
 	cmp	w0, 575
-	bls	.L1771
-.L1770:
+	bls	.L1772
+.L1771:
 	add	x0, x21, :lo12:.LANCHOR0
 	ldr	w1, [x0, 3984]
-	cbnz	w1, .L1772
-.L1838:
+	cbnz	w1, .L1773
+.L1839:
 	mov	w20, 0
-	b	.L1769
-.L1772:
+	b	.L1770
+.L1773:
 	ldr	x26, [x0, 3992]
 	mov	w1, 35899
 	movk	w1, 0xfcdc, lsl 16
 	ldr	w2, [x26]
 	cmp	w2, w1
-	bne	.L1774
+	bne	.L1775
 	ldrh	w1, [x0, 10]
 	mov	x0, 262140
 	mov	w20, 65535
 	add	x2, x26, x0
 	mov	w3, 4097
 	mov	w0, 0
-.L1778:
+.L1779:
 	ldr	w4, [x2]
-	cbnz	w4, .L1775
+	cbnz	w4, .L1776
 	ldr	w4, [x26, w0, uxtw 2]
 	add	w0, w0, 1
 	str	w4, [x2], -4
@@ -12210,13 +12199,13 @@ FtlWriteToIDB:
 	sub	w20, w20, #1
 	csel	w0, w0, wzr, cc
 	cmp	w20, 4096
-	bne	.L1778
+	bne	.L1779
 	mov	w20, 512
-	b	.L1777
-.L1775:
+	b	.L1778
+.L1776:
 	add	w20, w20, 127
 	lsr	w20, w20, 7
-.L1777:
+.L1778:
 	ubfiz	w0, w1, 2, 14
 	add	w22, w20, 4
 	add	x19, x21, :lo12:.LANCHOR0
@@ -12226,7 +12215,7 @@ FtlWriteToIDB:
 	lsl	w0, w20, 7
 	str	w0, [x29, 128]
 	add	w22, w22, 1
-.L1800:
+.L1801:
 	ldr	x0, [x19, 4000]
 	mov	w1, 0
 	mov	x2, 512
@@ -12234,26 +12223,26 @@ FtlWriteToIDB:
 	ldrh	w28, [x19, 10]
 	ldr	x1, [x19, 3400]
 	mul	w24, w28, w23
-	cbz	x1, .L1808
+	cbz	x1, .L1809
 	ldr	x0, [x19, 3408]
 	mov	w25, 6
 	cmp	x0, 0
 	mov	w0, 9
 	csel	w25, w25, w0, eq
-.L1779:
+.L1780:
 	ldr	x3, [x19, 3376]
 	mov	w1, w24
 	mov	w0, 0
 	blr	x3
 	cmp	w22, 1
-	beq	.L1780
+	beq	.L1781
 	ldr	x2, [x19, 3376]
 	add	w1, w28, w24
 	mov	w0, 0
 	blr	x2
-.L1780:
+.L1781:
 	cmp	w25, 9
-	bne	.L1810
+	bne	.L1811
 	ldr	x27, [x19, 4000]
 	mov	w2, 1024
 	mov	w1, 0
@@ -12276,29 +12265,29 @@ FtlWriteToIDB:
 	str	wzr, [x27, 12]
 	bl	js_hash
 	str	w0, [x27, 8]
-.L1781:
+.L1782:
 	mul	w0, w22, w28
 	mov	x6, x26
 	str	w0, [x29, 136]
 	mov	x28, 0
 	add	w0, w24, 1
 	str	w0, [x29, 132]
-.L1782:
+.L1783:
 	ldr	w0, [x29, 136]
 	mov	w1, w28
 	cmp	w28, w0
-	bcs	.L1789
+	bcs	.L1790
 	cmp	w25, 9
-	bne	.L1783
+	bne	.L1784
 	ldr	w0, [x29, 132]
 	add	w0, w0, w1
-.L1836:
+.L1837:
 	str	w0, [x29, 144]
 	mov	w0, 61424
 	str	w0, [x29, 148]
 	cmp	w1, 0
 	ccmp	w25, 9, 0, eq
-	bne	.L1785
+	bne	.L1786
 	ldr	x1, [x19, 3400]
 	add	x7, x19, 3368
 	str	x6, [x29, 104]
@@ -12322,8 +12311,8 @@ FtlWriteToIDB:
 	ldr	w1, [x29, 120]
 	ldr	x6, [x29, 104]
 	cmn	w1, #1
-	bne	.L1786
-.L1789:
+	bne	.L1787
+.L1790:
 	ldrb	w0, [x19, 14]
 	str	w0, [x29, 120]
 	ldrh	w0, [x19, 10]
@@ -12332,23 +12321,23 @@ FtlWriteToIDB:
 	str	w1, [x29, 136]
 	add	x1, x19, 3368
 	ldr	x2, [x1, 32]
-	cbnz	x2, .L1787
+	cbnz	x2, .L1788
 	mov	w1, 6
-.L1837:
+.L1838:
 	mul	w0, w22, w0
 	mov	x28, 0
 	mov	w27, 61424
 	str	w0, [x29, 112]
 	str	w1, [x29, 132]
-.L1791:
+.L1792:
 	ldr	w0, [x29, 112]
 	mov	w1, w28
 	cmp	w28, w0
-	bcs	.L1795
+	bcs	.L1796
 	ldr	w0, [x29, 132]
 	cmp	w28, 0
 	ccmp	w0, 9, 0, eq
-	bne	.L1792
+	bne	.L1793
 	ldr	x1, [x19, 3400]
 	mov	w0, 70
 	blr	x1
@@ -12371,13 +12360,13 @@ FtlWriteToIDB:
 	mov	w1, 18766
 	movk	w1, 0x464e, lsl 16
 	cmp	w0, w1
-	beq	.L1793
-.L1795:
+	beq	.L1794
+.L1796:
 	ldr	x0, [x19, 4000]
 	mov	x1, x26
 	mov	w24, 0
 	mov	x2, x0
-.L1794:
+.L1795:
 	mov	x25, x2
 	mov	x28, x1
 	add	x2, x2, 4
@@ -12385,7 +12374,7 @@ FtlWriteToIDB:
 	ldr	w4, [x25]
 	ldr	w3, [x28]
 	cmp	w4, w3
-	beq	.L1797
+	beq	.L1798
 	mov	x2, 512
 	mov	w1, 0
 	bl	memset
@@ -12393,30 +12382,30 @@ FtlWriteToIDB:
 	mov	w1, w23
 	ldr	w3, [x28]
 	mov	w4, w24
-	adrp	x0, .LC132
-	add	x0, x0, :lo12:.LC132
+	adrp	x0, .LC130
+	add	x0, x0, :lo12:.LC130
 	bl	sftl_printk
 	ldrh	w1, [x19, 10]
 	mov	w0, 0
 	ldr	x2, [x19, 3376]
 	mul	w1, w1, w23
 	blr	x2
-.L1798:
+.L1799:
 	add	w23, w23, w22
 	cmp	w23, 15
-	bls	.L1800
+	bls	.L1801
 	ldr	w0, [x29, 140]
-	cbnz	w0, .L1801
-.L1774:
+	cbnz	w0, .L1802
+.L1775:
 	mov	w20, -1
-.L1801:
+.L1802:
 	add	x21, x21, :lo12:.LANCHOR0
 	ldr	x0, [x21, 3992]
 	str	wzr, [x21, 3984]
 	bl	kfree
 	ldr	x0, [x21, 4000]
 	bl	kfree
-.L1769:
+.L1770:
 	mov	w0, w20
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
@@ -12425,17 +12414,17 @@ FtlWriteToIDB:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 208
 	ret
-.L1808:
+.L1809:
 	mov	w25, 6
-	b	.L1779
-.L1810:
+	b	.L1780
+.L1811:
 	mov	x27, 0
-	b	.L1781
-.L1783:
+	b	.L1782
+.L1784:
 	add	w0, w1, w24
 	lsl	w0, w0, 2
-	b	.L1836
-.L1785:
+	b	.L1837
+.L1786:
 	ldr	x7, [x19, 3384]
 	add	x3, x29, 144
 	mov	x2, x6
@@ -12444,20 +12433,20 @@ FtlWriteToIDB:
 	str	x6, [x29, 120]
 	blr	x7
 	cmn	w0, #1
-	beq	.L1789
+	beq	.L1790
 	ldr	x6, [x29, 120]
 	add	x6, x6, 2048
-.L1786:
-	add	x28, x28, 1
-	b	.L1782
 .L1787:
+	add	x28, x28, 1
+	b	.L1783
+.L1788:
 	ldr	x1, [x1, 40]
 	mov	w24, 6
 	cmp	x1, 0
 	mov	w1, 9
 	csel	w1, w24, w1, eq
-	b	.L1837
-.L1792:
+	b	.L1838
+.L1793:
 	ldr	x6, [x19, 3392]
 	add	x3, x29, 144
 	ldr	w0, [x29, 136]
@@ -12466,30 +12455,30 @@ FtlWriteToIDB:
 	mov	w0, 0
 	blr	x6
 	cmn	w0, #1
-	beq	.L1795
+	beq	.L1796
 	ldr	w0, [x29, 148]
 	cmp	w0, w27
-	bne	.L1795
+	bne	.L1796
 	add	x25, x25, 2048
-.L1793:
+.L1794:
 	add	x28, x28, 1
-	b	.L1791
-.L1797:
+	b	.L1792
+.L1798:
 	ldr	w3, [x29, 128]
 	add	w24, w24, 1
 	cmp	w24, w3
-	bne	.L1794
+	bne	.L1795
 	ldr	w0, [x29, 140]
 	add	w0, w0, 1
 	str	w0, [x29, 140]
 	cmp	w0, 5
-	bls	.L1798
-	b	.L1801
-.L1771:
+	bls	.L1799
+	b	.L1802
+.L1772:
 	mov	w22, w1
 	mov	x23, x2
 	cmp	w0, 64
-	bne	.L1802
+	bne	.L1803
 	add	x20, x21, :lo12:.LANCHOR0
 	mov	w0, 262144
 	bl	ftl_malloc
@@ -12499,56 +12488,56 @@ FtlWriteToIDB:
 	mov	x1, x0
 	ldr	x0, [x20, 3992]
 	str	x1, [x20, 4000]
-	cbz	x0, .L1803
-	cbz	x1, .L1803
+	cbz	x0, .L1804
+	cbz	x1, .L1804
 	mov	w1, 1
 	mov	w2, 262144
 	str	w1, [x20, 3984]
 	mov	w1, 0
 	bl	ftl_memset
-.L1802:
+.L1803:
 	add	x21, x21, :lo12:.LANCHOR0
 	ldr	w0, [x21, 3984]
-	cbz	w0, .L1838
+	cbz	w0, .L1839
 	cmp	w19, 63
 	ldr	x1, [x21, 3992]
-	bhi	.L1805
+	bhi	.L1806
 	mov	w0, 64
 	sub	w19, w0, w19
 	sub	w22, w22, w19
 	ubfiz	x19, x19, 9, 25
 	add	x23, x23, x19
 	mov	x20, x1
-.L1806:
+.L1807:
 	cmp	w25, 575
-	bls	.L1807
+	bls	.L1808
 	sub	w22, w22, w24
 	sub	w22, w22, #446
-.L1807:
+.L1808:
 	mov	w4, w22
 	mov	x3, x20
 	mov	w2, 262144
-	adrp	x0, .LC134
-	add	x0, x0, :lo12:.LC134
+	adrp	x0, .LC132
+	add	x0, x0, :lo12:.LC132
 	bl	sftl_printk
 	lsl	w2, w22, 9
 	mov	x1, x23
 	mov	x0, x20
 	bl	ftl_memcpy
-	b	.L1838
-.L1803:
+	b	.L1839
+.L1804:
 	adrp	x1, .LANCHOR1
 	add	x1, x1, :lo12:.LANCHOR1
 	add	x1, x1, 752
-	adrp	x0, .LC133
-	add	x0, x0, :lo12:.LC133
+	adrp	x0, .LC131
+	add	x0, x0, :lo12:.LC131
 	bl	sftl_printk
-	b	.L1802
-.L1805:
+	b	.L1803
+.L1806:
 	lsl	w20, w19, 7
 	sub	w20, w20, #8192
 	add	x20, x1, x20, lsl 2
-	b	.L1806
+	b	.L1807
 	.size	FtlWriteToIDB, .-FtlWriteToIDB
 	.align	2
 	.global	sftl_write
@@ -12579,12 +12568,12 @@ rk_sftl_vendor_dev_ops_register:
 	adrp	x2, .LANCHOR0
 	add	x2, x2, :lo12:.LANCHOR0
 	ldr	x3, [x2, 4008]
-	cbnz	x3, .L1843
+	cbnz	x3, .L1844
 	str	x0, [x2, 4008]
 	mov	w0, 0
 	str	x1, [x2, 4016]
 	ret
-.L1843:
+.L1844:
 	mov	w0, -1
 	ret
 	.size	rk_sftl_vendor_dev_ops_register, .-rk_sftl_vendor_dev_ops_register
@@ -12603,38 +12592,38 @@ rk_sftl_vendor_storage_init:
 	stp	x25, x26, [sp, 64]
 	bl	ftl_malloc
 	str	x0, [x22, 4024]
-	cbz	x0, .L1850
+	cbz	x0, .L1851
 	mov	w26, 22084
 	mov	w25, 0
 	mov	w24, 0
 	mov	w23, 0
 	movk	w26, 0x524b, lsl 16
-.L1848:
+.L1849:
 	ldr	x3, [x22, 4008]
 	mov	w1, 128
 	ldr	x2, [x22, 4024]
 	lsl	w0, w23, 7
 	blr	x3
 	mov	w21, w0
-	cbnz	w0, .L1846
+	cbnz	w0, .L1847
 	ldr	x19, [x22, 4024]
 	ldr	w0, [x19]
 	cmp	w0, w26
-	bne	.L1847
+	bne	.L1848
 	add	x0, x19, 61440
 	ldr	w1, [x19, 4]
 	ldr	w0, [x0, 4092]
 	cmp	w0, w1
-	bne	.L1847
+	bne	.L1848
 	cmp	w0, w24
-	bls	.L1847
+	bls	.L1848
 	mov	w25, w23
 	mov	w24, w0
-.L1847:
+.L1848:
 	add	w23, w23, 1
 	cmp	w23, 2
-	bne	.L1848
-	cbz	w24, .L1849
+	bne	.L1849
+	cbz	w24, .L1850
 	add	x0, x20, :lo12:.LANCHOR0
 	mov	x2, x19
 	mov	w1, 128
@@ -12642,15 +12631,15 @@ rk_sftl_vendor_storage_init:
 	lsl	w0, w25, 7
 	blr	x3
 	mov	w21, w0
-	cbz	w0, .L1844
-.L1846:
+	cbz	w0, .L1845
+.L1847:
 	add	x20, x20, :lo12:.LANCHOR0
 	mov	w21, -1
 	ldr	x0, [x20, 4024]
 	bl	kfree
 	str	xzr, [x20, 4024]
-	b	.L1844
-.L1849:
+	b	.L1845
+.L1850:
 	mov	w1, 0
 	mov	x2, 65536
 	mov	x0, x19
@@ -12663,7 +12652,7 @@ rk_sftl_vendor_storage_init:
 	str	w0, [x1, 4092]
 	mov	w0, -1032
 	strh	w0, [x19, 14]
-.L1844:
+.L1845:
 	mov	w0, w21
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
@@ -12671,9 +12660,9 @@ rk_sftl_vendor_storage_init:
 	ldp	x25, x26, [sp, 64]
 	ldp	x29, x30, [sp], 80
 	ret
-.L1850:
+.L1851:
 	mov	w21, -12
-	b	.L1844
+	b	.L1845
 	.size	rk_sftl_vendor_storage_init, .-rk_sftl_vendor_storage_init
 	.align	2
 	.global	rk_sftl_vendor_read
@@ -12681,20 +12670,20 @@ rk_sftl_vendor_storage_init:
 rk_sftl_vendor_read:
 	adrp	x3, .LANCHOR0+4024
 	ldr	x4, [x3, #:lo12:.LANCHOR0+4024]
-	cbz	x4, .L1858
+	cbz	x4, .L1859
 	ldrh	w6, [x4, 10]
 	add	x5, x4, 16
 	mov	w3, 0
-.L1855:
+.L1856:
 	cmp	w3, w6
-	bcc	.L1857
-.L1858:
+	bcc	.L1858
+.L1859:
 	mov	w0, -1
 	ret
-.L1857:
+.L1858:
 	ldrh	w7, [x5], 8
 	cmp	w7, w0
-	bne	.L1856
+	bne	.L1857
 	stp	x29, x30, [sp, -32]!
 	add	x3, x4, x3, uxtw 3
 	mov	x0, x1
@@ -12712,9 +12701,9 @@ rk_sftl_vendor_read:
 	ldr	x19, [sp, 16]
 	ldp	x29, x30, [sp], 32
 	ret
-.L1856:
+.L1857:
 	add	w3, w3, 1
-	b	.L1855
+	b	.L1856
 	.size	rk_sftl_vendor_read, .-rk_sftl_vendor_read
 	.align	2
 	.global	rk_sftl_vendor_write
@@ -12730,7 +12719,7 @@ rk_sftl_vendor_write:
 	stp	x25, x26, [sp, 64]
 	stp	x27, x28, [sp, 80]
 	ldr	x19, [x3, 4024]
-	cbz	x19, .L1878
+	cbz	x19, .L1879
 	add	w21, w2, 63
 	ldrh	w3, [x19, 10]
 	ldrh	w24, [x19, 8]
@@ -12739,12 +12728,12 @@ rk_sftl_vendor_write:
 	and	w21, w21, -64
 	add	x1, x19, 16
 	mov	w20, 0
-.L1865:
+.L1866:
 	cmp	w20, w3
-	bcc	.L1873
+	bcc	.L1874
 	ldrh	w1, [x19, 14]
 	cmp	w21, w1
-	bhi	.L1878
+	bhi	.L1879
 	add	x3, x19, x3, uxth 3
 	and	w21, w21, 65535
 	uxtw	x2, w28
@@ -12764,11 +12753,11 @@ rk_sftl_vendor_write:
 	ldrh	w0, [x19, 10]
 	add	w0, w0, 1
 	strh	w0, [x19, 10]
-	b	.L1880
-.L1873:
+	b	.L1881
+.L1874:
 	ldrh	w6, [x1], 8
 	cmp	w6, w0
-	bne	.L1866
+	bne	.L1867
 	uxtw	x27, w20
 	add	x5, x19, 1024
 	add	x22, x19, x27, lsl 3
@@ -12776,17 +12765,17 @@ rk_sftl_vendor_write:
 	add	w25, w25, 63
 	and	w25, w25, -64
 	cmp	w28, w25
-	bls	.L1867
+	bls	.L1868
 	ldrh	w0, [x19, 14]
 	cmp	w21, w0
-	bhi	.L1878
+	bhi	.L1879
 	add	x27, x27, 2
 	ldrh	w22, [x22, 18]
 	add	x27, x19, x27, lsl 3
 	sub	w26, w3, #1
-.L1868:
+.L1869:
 	cmp	w20, w26
-	bcc	.L1869
+	bcc	.L1870
 	add	x20, x19, x20, uxtw 3
 	and	w22, w22, 65535
 	add	x0, x5, x22, uxth
@@ -12803,7 +12792,7 @@ rk_sftl_vendor_write:
 	sub	w21, w0, w21
 	add	w25, w21, w25
 	strh	w25, [x19, 14]
-.L1880:
+.L1881:
 	ldr	w0, [x19, 4]
 	add	x1, x19, 61440
 	add	x23, x23, :lo12:.LANCHOR0
@@ -12822,7 +12811,7 @@ rk_sftl_vendor_write:
 	lsl	w0, w24, 7
 	blr	x3
 	mov	w0, 0
-.L1863:
+.L1864:
 	ldp	x19, x20, [sp, 16]
 	ldp	x21, x22, [sp, 32]
 	ldp	x23, x24, [sp, 48]
@@ -12830,7 +12819,7 @@ rk_sftl_vendor_write:
 	ldp	x27, x28, [sp, 80]
 	ldp	x29, x30, [sp], 128
 	ret
-.L1869:
+.L1870:
 	add	w20, w20, 1
 	str	x4, [x29, 104]
 	add	x0, x19, x20, uxtw 3
@@ -12854,21 +12843,21 @@ rk_sftl_vendor_write:
 	ldr	x4, [x29, 104]
 	add	w22, w22, w3
 	ldr	x5, [x29, 120]
-	b	.L1868
-.L1867:
+	b	.L1869
+.L1868:
 	ldrh	w0, [x22, 18]
 	uxtw	x2, w28
 	mov	x1, x4
 	add	x0, x5, x0
 	bl	memcpy
 	strh	w28, [x22, 20]
-	b	.L1880
-.L1866:
+	b	.L1881
+.L1867:
 	add	w20, w20, 1
-	b	.L1865
-.L1878:
+	b	.L1866
+.L1879:
 	mov	w0, -1
-	b	.L1863
+	b	.L1864
 	.size	rk_sftl_vendor_write, .-rk_sftl_vendor_write
 	.align	2
 	.global	rk_sftl_vendor_storage_ioctl
@@ -12882,19 +12871,19 @@ rk_sftl_vendor_storage_ioctl:
 	str	x21, [sp, 32]
 	mov	w21, w1
 	bl	ftl_malloc
-	cbz	x0, .L1898
+	cbz	x0, .L1899
 	mov	w1, 30209
 	mov	x19, x0
 	movk	w1, 0x4004, lsl 16
 	cmp	w21, w1
-	beq	.L1884
+	beq	.L1885
 	add	w1, w1, 1
 	cmp	w21, w1
-	beq	.L1885
-.L1908:
+	beq	.L1886
+.L1909:
 	mov	x20, -14
-	b	.L1883
-.L1884:
+	b	.L1884
+.L1885:
 #APP
 // 21 "./arch/arm64/include/asm/current.h" 1
 	mrs x21, sp_el0
@@ -12907,46 +12896,46 @@ rk_sftl_vendor_storage_ioctl:
 	adds x1, x1, 8; ccmp x1, x2, #2, cc; cset x3, ls
 // 0 "" 2
 #NO_APP
-	cbz	x3, .L1886
+	cbz	x3, .L1887
 	mov	x2, 8
 	mov	x1, x20
 	bl	__arch_copy_from_user
-	cbz	x0, .L1909
-.L1887:
+	cbz	x0, .L1910
+.L1888:
 	mov	x2, x20
 	mov	w1, 256
-.L1913:
-	adrp	x0, .LC135
-	add	x0, x0, :lo12:.LC135
+.L1914:
+	adrp	x0, .LC133
+	add	x0, x0, :lo12:.LC133
 	bl	sftl_printk
-	b	.L1908
-.L1886:
+	b	.L1909
+.L1887:
 	str	xzr, [x0]
-	b	.L1887
-.L1909:
+	b	.L1888
+.L1910:
 	ldr	w1, [x19]
 	mov	w0, 17745
 	movk	w0, 0x5652, lsl 16
 	cmp	w1, w0
-	beq	.L1889
-.L1890:
+	beq	.L1890
+.L1891:
 	mov	x20, -1
-.L1883:
+.L1884:
 	mov	x0, x19
 	bl	kfree
-.L1881:
+.L1882:
 	mov	x0, x20
 	ldr	x21, [sp, 32]
 	ldp	x19, x20, [sp, 16]
 	ldp	x29, x30, [sp], 48
 	ret
-.L1889:
+.L1890:
 	ldrh	w2, [x19, 6]
 	add	x1, x19, 8
 	ldrh	w0, [x19, 4]
 	bl	rk_sftl_vendor_read
 	cmn	w0, #1
-	beq	.L1890
+	beq	.L1891
 	strh	w0, [x19, 6]
 	and	x2, x0, 65535
 	add	x2, x2, 8
@@ -12957,14 +12946,14 @@ rk_sftl_vendor_storage_ioctl:
 	adds x0, x0, x2; ccmp x0, x1, #2, cc; cset x3, ls
 // 0 "" 2
 #NO_APP
-	cbz	x3, .L1908
+	cbz	x3, .L1909
 	mov	x0, x20
 	mov	x1, x19
 	mov	x20, 0
 	bl	__arch_copy_to_user
-	cbz	x0, .L1883
-	b	.L1908
-.L1885:
+	cbz	x0, .L1884
+	b	.L1909
+.L1886:
 #APP
 // 21 "./arch/arm64/include/asm/current.h" 1
 	mrs x21, sp_el0
@@ -12977,27 +12966,27 @@ rk_sftl_vendor_storage_ioctl:
 	adds x1, x1, 8; ccmp x1, x2, #2, cc; cset x3, ls
 // 0 "" 2
 #NO_APP
-	cbz	x3, .L1892
+	cbz	x3, .L1893
 	mov	x2, 8
 	mov	x1, x20
 	bl	__arch_copy_from_user
-	cbz	x0, .L1910
-.L1893:
+	cbz	x0, .L1911
+.L1894:
 	mov	x2, x20
 	mov	w1, 276
-	b	.L1913
-.L1892:
+	b	.L1914
+.L1893:
 	str	xzr, [x0]
-	b	.L1893
-.L1910:
+	b	.L1894
+.L1911:
 	ldr	w1, [x19]
 	mov	w0, 17745
 	movk	w0, 0x5652, lsl 16
 	cmp	w1, w0
-	bne	.L1890
+	bne	.L1891
 	ldrh	w2, [x19, 6]
 	cmp	w2, 4087
-	bhi	.L1890
+	bhi	.L1891
 	add	w2, w2, 8
 	mov	x0, x20
 	sxtw	x2, w2
@@ -13007,30 +12996,30 @@ rk_sftl_vendor_storage_ioctl:
 	adds x0, x0, x2; ccmp x0, x1, #2, cc; cset x3, ls
 // 0 "" 2
 #NO_APP
-	cbz	x3, .L1895
+	cbz	x3, .L1896
 	mov	x1, x20
 	mov	x0, x19
 	bl	__arch_copy_from_user
-	cbz	x0, .L1911
-.L1896:
+	cbz	x0, .L1912
+.L1897:
 	mov	x2, x20
 	mov	w1, 283
-	b	.L1913
-.L1895:
+	b	.L1914
+.L1896:
 	mov	w1, 0
 	mov	x0, x19
 	bl	memset
-	b	.L1896
-.L1911:
+	b	.L1897
+.L1912:
 	ldrh	w2, [x19, 6]
 	add	x1, x19, 8
 	ldrh	w0, [x19, 4]
 	bl	rk_sftl_vendor_write
 	sxtw	x20, w0
-	b	.L1883
-.L1898:
+	b	.L1884
+.L1899:
 	mov	x20, -1
-	b	.L1881
+	b	.L1882
 	.size	rk_sftl_vendor_storage_ioctl, .-rk_sftl_vendor_storage_ioctl
 	.align	2
 	.global	rk_sftl_vendor_register
@@ -13406,7 +13395,7 @@ power_up_flag:
 rkflash_vender_storage_dev:
 	.word	255
 	.zero	4
-	.xword	.LC136
+	.xword	.LC134
 	.xword	rk_sftl_vendor_storage_fops
 	.zero	56
 	.bss
@@ -14298,26 +14287,22 @@ gp_last_act_superblock:
 .LC124:
 	.string	"SWL %x, FSB = %x vpc= %x,ec=%x th=%x\n"
 .LC125:
-	.string	"g_gc_superblock_free %x %x %x %x %x\n"
-.LC126:
-	.string	"lpa=%x, ppa=%x\n"
-.LC127:
 	.string	"FtlWrite: ecc error:%x %x %x\n"
-.LC128:
+.LC126:
 	.string	"FtlWrite: lpa error:%x %x\n"
-.LC129:
+.LC127:
 	.string	"%s hash error this.id =%x page =%x pre_id =%x hash =%x hash_r =%x\n"
-.LC130:
+.LC128:
 	.string	"%s last blk_id =%x page =%x hash error hash =%x hash_r =%x\n"
-.LC131:
+.LC129:
 	.string	"%s scan blk_id =%x page =%x hash error hash =%x hash_r =%x\n"
-.LC132:
+.LC130:
 	.string	"write_idblock fail! %x %x %x %x\n"
-.LC133:
+.LC131:
 	.string	"%s idb buffer alloc fail\n"
-.LC134:
+.LC132:
 	.string	"%p %x %p %x\n"
-.LC135:
+.LC133:
 	.string	"copy_from_user error %d %p %p\n"
-.LC136:
+.LC134:
 	.string	"vendor_storage"
-- 
2.35.3

