From 0067ec165b9b074ea87a7dd40c1043f27720c16a Mon Sep 17 00:00:00 2001
From: zhoupeng <benjo.zhou@rock-chips.com>
Date: Wed, 13 Sep 2017 18:50:07 +0800
Subject: [PATCH] media: rk-isp10: optimize readability of code

rk-isp10: version 0.1.a
1. To optimize the readability of the code, based on v0.1.9
2. Optimize CIF_MI_CTRL_BURST_LEN param.
3. Add check for cam_itf.type(PLTFRM_CAM_ITF_BT656_8I) on
cif_isp10_s_fmt_mp.
4. get field_flag value from cif_isp10_isp_isr.

Change-Id: I334595c01e8b418b47e0a54e6fdfcf624445ff9f
Signed-off-by: zhoupeng <benjo.zhou@rock-chips.com>
---
 drivers/media/platform/rk-isp10/cif_isp10.c   | 62 ++++++++++++-------
 .../media/platform/rk-isp10/cif_isp10_regs.h  | 17 +++--
 .../platform/rk-isp10/cif_isp10_version.h     | 10 ++-
 .../linux/platform_data/rk_isp10_platform.h   |  2 +-
 4 files changed, 61 insertions(+), 30 deletions(-)

diff --git a/drivers/media/platform/rk-isp10/cif_isp10.c b/drivers/media/platform/rk-isp10/cif_isp10.c
index 1eb81eb96c16..d4b0a12a4d06 100644
--- a/drivers/media/platform/rk-isp10/cif_isp10.c
+++ b/drivers/media/platform/rk-isp10/cif_isp10.c
@@ -460,7 +460,7 @@ static const char *cif_isp10_interface_string(
 		return "DVP_BT601_16Bit";
 	case PLTFRM_CAM_ITF_BT656_16:
 		return "DVP_BT656_16Bit";
-	case PLTFRM_CAM_ITF_BT656_8_INTERLACE:
+	case PLTFRM_CAM_ITF_BT656_8I:
 		return "DVP_BT656_8Bit_interlace";
 	default:
 		return "UNKNOWN/UNSUPPORTED";
@@ -2184,8 +2184,8 @@ static int cif_isp10_config_mi_mp(
 
 	mi_ctrl = cif_ioread32(dev->config.base_addr + CIF_MI_CTRL) |
 		CIF_MI_CTRL_MP_WRITE_FMT(writeformat) |
-		CIF_MI_CTRL_BURST_LEN_LUM_64 |
-		CIF_MI_CTRL_BURST_LEN_CHROM_64 |
+		CIF_MI_CTRL_BURST_LEN_LUM_16 |
+		CIF_MI_CTRL_BURST_LEN_CHROM_16 |
 		CIF_MI_CTRL_INIT_BASE_EN |
 		CIF_MI_CTRL_INIT_OFFSET_EN |
 		CIF_MI_MP_AUTOUPDATE_ENABLE;
@@ -2250,11 +2250,24 @@ static int cif_isp10_config_mi_sp(
 		height = height / 2;
 		dev->config.mi_config.sp.vir_len_offset =
 			width;
+	}
+	if (llength != width) {
+		if (!(width % 128))
+			burst_len = CIF_MI_CTRL_BURST_LEN_LUM_16 |
+				CIF_MI_CTRL_BURST_LEN_CHROM_16;
+		else if (!(width % 64))
+			burst_len = CIF_MI_CTRL_BURST_LEN_LUM_8 |
+				CIF_MI_CTRL_BURST_LEN_CHROM_8;
+		else
+			burst_len = CIF_MI_CTRL_BURST_LEN_LUM_4 |
+				CIF_MI_CTRL_BURST_LEN_CHROM_4;
+
+		if (width % 32)
+			cif_isp10_pltfrm_pr_warn(dev->dev,
+				"The width should be aligned to 32\n");
+	} else {
 		burst_len = CIF_MI_CTRL_BURST_LEN_LUM_16 |
 			CIF_MI_CTRL_BURST_LEN_CHROM_16;
-	} else {
-		burst_len = CIF_MI_CTRL_BURST_LEN_LUM_64 |
-			CIF_MI_CTRL_BURST_LEN_CHROM_64;
 	}
 
 	if (!CIF_ISP10_PIX_FMT_IS_YUV(in_pix_fmt)) {
@@ -3829,7 +3842,8 @@ static int cif_isp10_update_mi_sp(
 		cif_isp10_mi_update_buff_addr(dev, CIF_ISP10_STREAM_SP);
 		dev->config.mi_config.sp.curr_buff_addr =
 			dev->config.mi_config.sp.next_buff_addr;
-	} else if (PLTFRM_CAM_ITF_INTERLACE(dev->config.cam_itf.type)) {
+	} else if (PLTFRM_CAM_ITF_INTERLACE(dev->config.cam_itf.type) &&
+		dev->config.mi_config.sp.field_flag == FIELD_FLAGS_ODD) {
 		cif_iowrite32_verify(dev->config.mi_config.sp.next_buff_addr +
 			vir_len_offset,
 			dev->config.base_addr +
@@ -3903,6 +3917,13 @@ static int cif_isp10_s_fmt_mp(
 
 	/* TBD: check whether format is a valid format for MP */
 
+	if (PLTFRM_CAM_ITF_INTERLACE(dev->config.cam_itf.type)) {
+		ret = -EINVAL;
+		cif_isp10_pltfrm_pr_err(dev->dev,
+			"MP doesn't support the interlace format!\n");
+		goto err;
+	}
+
 	if (CIF_ISP10_PIX_FMT_IS_JPEG(strm_fmt->frm_fmt.pix_fmt)) {
 		dev->config.jpeg_config.enable = true;
 	}	else if (CIF_ISP10_PIX_FMT_IS_RAW_BAYER
@@ -4155,12 +4176,6 @@ static int cif_isp10_mi_frame_end(
 	cif_isp10_pltfrm_pr_dbg(NULL, "%s\n",
 		cif_isp10_stream_id_string(stream_id));
 
-	/* BIT 2(current field information): 0 = odd, 1 = even */
-	if (PLTFRM_CAM_ITF_INTERLACE(dev->config.cam_itf.type))
-		dev->config.mi_config.sp.field_flag =
-			(cif_ioread32(dev->config.base_addr +
-				CIF_ISP_FLAGS_SHD) & 0x4) >> 2;
-
 	if (stream_id == CIF_ISP10_STREAM_MP) {
 		stream = &dev->mp_stream;
 		y_base_addr =
@@ -4230,7 +4245,8 @@ static int cif_isp10_mi_frame_end(
 		tmp_addr = sg_dma_address(sgt->sgl);
 #endif
 		if (tmp_addr != cif_ioread32(y_base_addr) &&
-			!PLTFRM_CAM_ITF_INTERLACE(dev->config.cam_itf.type)) {
+			(!PLTFRM_CAM_ITF_INTERLACE(dev->config.cam_itf.type) ||
+			dev->config.mi_config.sp.field_flag == FIELD_FLAGS_ODD)) {
 			cif_isp10_pltfrm_pr_warn(dev->dev,
 				"%s buffer queue is not advancing (0x%08x/0x%08x)\n",
 				cif_isp10_stream_id_string(stream_id),
@@ -4242,13 +4258,6 @@ static int cif_isp10_mi_frame_end(
 				cif_ioread32(y_base_addr));
 			stream->stall = true;
 		}
-
-		if (PLTFRM_CAM_ITF_INTERLACE(dev->config.cam_itf.type)) {
-			if (dev->config.mi_config.sp.field_flag)
-				stream->stall = true;
-			else
-				stream->stall = false;
-		}
 	}
 
 	if (!stream->stall) {
@@ -4259,7 +4268,9 @@ static int cif_isp10_mi_frame_end(
 		 * until new buffer queue;
 		 */
 		if ((stream->curr_buf) &&
-			(stream->next_buf)) {
+			(stream->next_buf) &&
+			(!PLTFRM_CAM_ITF_INTERLACE(dev->config.cam_itf.type) ||
+			dev->config.mi_config.sp.field_flag == FIELD_FLAGS_EVEN)) {
 			bool wake_now;
 
 			vb2_buf = &stream->curr_buf->vb.vb2_buf;
@@ -6476,6 +6487,13 @@ int cif_isp10_isp_isr(unsigned int isp_mis, void *cntxt)
 		dev->b_mi_frame_end = false;
 		cifisp_v_start(&dev->isp_dev, &tv);
 
+		/* BIT 2(current field information): 0 = odd, 1 = even */
+		if (PLTFRM_CAM_ITF_INTERLACE(dev->config.cam_itf.type))
+			dev->config.mi_config.sp.field_flag =
+				(cif_ioread32(dev->config.base_addr +
+				 CIF_ISP_FLAGS_SHD) & CIF_ISP_FLAGS_SHD_FIELD_INFO)
+				>> CIF_ISP_FLAGS_SHD_FIELD_BIT;
+
 		cif_iowrite32(CIF_ISP_V_START,
 		      dev->config.base_addr + CIF_ISP_ICR);
 		isp_mis_tmp = cif_ioread32(dev->config.base_addr + CIF_ISP_MIS);
diff --git a/drivers/media/platform/rk-isp10/cif_isp10_regs.h b/drivers/media/platform/rk-isp10/cif_isp10_regs.h
index f5ac74f4b9a2..5a291d1fd933 100644
--- a/drivers/media/platform/rk-isp10/cif_isp10_regs.h
+++ b/drivers/media/platform/rk-isp10/cif_isp10_regs.h
@@ -141,12 +141,12 @@
 #define CIF_MI_SP_AUTOUPDATE_DISABLE       (0 << 14)
 #define CIF_MI_LAST_PIXEL_SIG_ENABLE       BIT(15)
 #define CIF_MI_LAST_PIXEL_SIG_DISABLE      (0 << 15)
-#define CIF_MI_CTRL_BURST_LEN_LUM_16       (0 << 16)
-#define CIF_MI_CTRL_BURST_LEN_LUM_32       BIT(16)
-#define CIF_MI_CTRL_BURST_LEN_LUM_64       (2 << 16)
-#define CIF_MI_CTRL_BURST_LEN_CHROM_16     (0 << 18)
-#define CIF_MI_CTRL_BURST_LEN_CHROM_32     BIT(18)
-#define CIF_MI_CTRL_BURST_LEN_CHROM_64     (2 << 18)
+#define CIF_MI_CTRL_BURST_LEN_LUM_4       (0 << 16)
+#define CIF_MI_CTRL_BURST_LEN_LUM_8       BIT(16)
+#define CIF_MI_CTRL_BURST_LEN_LUM_16      (2 << 16)
+#define CIF_MI_CTRL_BURST_LEN_CHROM_4     (0 << 18)
+#define CIF_MI_CTRL_BURST_LEN_CHROM_8     BIT(18)
+#define CIF_MI_CTRL_BURST_LEN_CHROM_16    (2 << 18)
 #define CIF_MI_CTRL_INIT_BASE_EN           BIT(20)
 #define CIF_MI_CTRL_INIT_BASE_DIS          (0 << 20)
 #define CIF_MI_CTRL_INIT_OFFSET_EN         BIT(21)
@@ -475,6 +475,11 @@
 #define CIF_FLASH_CONFIG_SRC_VSYNC      (0 << 3)
 #define CIF_FLASH_CONFIG_SRC_FL_TRIG    BIT(3)
 #define CIF_FLASH_CONFIG_DELAY(a)      ((a) << 4)
+/* ISP_FLAGS_SHD */
+#define CIF_ISP_FLAGS_SHD_FIELD_INFO  BIT(2)
+#define CIF_ISP_FLAGS_SHD_FIELD_BIT	2
+#define FIELD_FLAGS_ODD		0
+#define FIELD_FLAGS_EVEN	1
 
 /* BAD PIXEL DETECTION */
 
diff --git a/drivers/media/platform/rk-isp10/cif_isp10_version.h b/drivers/media/platform/rk-isp10/cif_isp10_version.h
index c88a3e25cd06..d196f3fad19b 100644
--- a/drivers/media/platform/rk-isp10/cif_isp10_version.h
+++ b/drivers/media/platform/rk-isp10/cif_isp10_version.h
@@ -70,8 +70,16 @@
  *a frame image.
  *2. fix cif_isp10_img_src_v4l2_subdev_enum_strm_fmts defrect info get error.
  *3. fix cif_isp10_rk3399 cif_clk_pll info doesn't match with dts config.
+ *
+ *v0.1.0xa
+ *Based on version 0.1.9:
+ *1. To optimize the readability of the code.
+ *2. optimize CIF_MI_CTRL_BURST_LEN param.
+ *3. Add the check for cam_itf.type(PLTFRM_CAM_ITF_BT656_8I) on
+ * cif_isp10_s_fmt_mp.
+ *4. get field_flag value from cif_isp10_isp_isr.
  */
 
-#define CONFIG_CIFISP10_DRIVER_VERSION KERNEL_VERSION(0, 1, 9)
+#define CONFIG_CIFISP10_DRIVER_VERSION KERNEL_VERSION(0, 1, 0xa)
 
 #endif
diff --git a/include/linux/platform_data/rk_isp10_platform.h b/include/linux/platform_data/rk_isp10_platform.h
index 1aa8a629c326..515e11e920db 100644
--- a/include/linux/platform_data/rk_isp10_platform.h
+++ b/include/linux/platform_data/rk_isp10_platform.h
@@ -48,7 +48,7 @@ enum pltfrm_cam_itf_type {
 	PLTFRM_CAM_ITF_BT656_12 = 0x200000B2,
 	PLTFRM_CAM_ITF_BT601_16 = 0x200000F1,
 	PLTFRM_CAM_ITF_BT656_16 = 0x200000F2,
-	PLTFRM_CAM_ITF_BT656_8_INTERLACE = 0x20000172
+	PLTFRM_CAM_ITF_BT656_8I = 0x20000172
 };
 
 #define PLTFRM_CAM_ITF_MAIN_MASK   0xf0000000
-- 
2.35.3

