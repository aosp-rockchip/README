From 76951c36f0440866009db88fe56fe18292c319ac Mon Sep 17 00:00:00 2001
From: Tao Huang <huangtao@rock-chips.com>
Date: Mon, 15 Jun 2020 17:31:47 +0800
Subject: [PATCH] soc: rockchip: decompress: Wait decom init done when call
 rk_decom_start()

Change-Id: I8b13cf2895e06642a61137ea04b977f076736548
Signed-off-by: Tao Huang <huangtao@rock-chips.com>
---
 drivers/soc/rockchip/rockchip_decompress.c       | 15 ++++++++++++---
 include/linux/soc/rockchip/rockchip_decompress.h | 12 +++++++++---
 2 files changed, 21 insertions(+), 6 deletions(-)

diff --git a/drivers/soc/rockchip/rockchip_decompress.c b/drivers/soc/rockchip/rockchip_decompress.c
index 9f79f363c301..c885e7053276 100644
--- a/drivers/soc/rockchip/rockchip_decompress.c
+++ b/drivers/soc/rockchip/rockchip_decompress.c
@@ -101,11 +101,17 @@ void __init wait_initrd_hw_decom_done(void)
 	wait_event(initrd_decom_done, initrd_continue);
 }
 
-int rk_decom_start(u32 mode, phys_addr_t mem_start, phys_addr_t mem_dst, u32 dst_max_size)
+static DECLARE_WAIT_QUEUE_HEAD(decom_init_done);
+
+int rk_decom_start(u32 mode, phys_addr_t src, phys_addr_t dst, u32 dst_max_size)
 {
 	u32 irq_status;
 	u32 decom_enr;
 
+	pr_info("%s: mode %u src %pa dst %pa max_size %u\n",
+		__func__, mode, &src, &dst, dst_max_size);
+
+	wait_event_timeout(decom_init_done, g_decom, HZ);
 	if (!g_decom)
 		return -EINVAL;
 
@@ -146,8 +152,8 @@ int rk_decom_start(u32 mode, phys_addr_t mem_start, phys_addr_t mem_dst, u32 dst
 		return -EINVAL;
 	}
 
-	writel(mem_start, g_decom->regs + DECOM_RADDR);
-	writel(mem_dst, g_decom->regs + DECOM_WADDR);
+	writel(src, g_decom->regs + DECOM_RADDR);
+	writel(dst, g_decom->regs + DECOM_WADDR);
 
 	writel(dst_max_size, g_decom->regs + DECOM_LMTSL);
 	writel(0x0, g_decom->regs + DECOM_LMTSH);
@@ -155,6 +161,8 @@ int rk_decom_start(u32 mode, phys_addr_t mem_start, phys_addr_t mem_dst, u32 dst
 	writel(DECOM_INT_MASK, g_decom->regs + DECOM_IEN);
 	writel(DECOM_ENABLE, g_decom->regs + DECOM_ENR);
 
+	pr_info("%s: started\n", __func__);
+
 	return 0;
 }
 EXPORT_SYMBOL(rk_decom_start);
@@ -284,6 +292,7 @@ static int rockchip_decom_probe(struct platform_device *pdev)
 	}
 
 	g_decom = rk_dec;
+	wake_up(&decom_init_done);
 
 	return 0;
 
diff --git a/include/linux/soc/rockchip/rockchip_decompress.h b/include/linux/soc/rockchip/rockchip_decompress.h
index a6b29235d49a..dff419bd793b 100644
--- a/include/linux/soc/rockchip/rockchip_decompress.h
+++ b/include/linux/soc/rockchip/rockchip_decompress.h
@@ -1,6 +1,5 @@
 /* SPDX-License-Identifier: GPL-2.0+ */
-
-/* Copyright (c) 2020 Fuzhou Rockchip Electronics Co., Ltd */
+/* Copyright (c) 2020 Rockchip Electronics Co., Ltd */
 
 #ifndef _ROCKCHIP_DECOMPRESS
 #define _ROCKCHIP_DECOMPRESS
@@ -11,6 +10,13 @@ enum decom_mod {
 	ZLIB_MOD,
 };
 
-int rk_decom_start(u32 mode, phys_addr_t mem_start, phys_addr_t mem_dst, u32 limit_size);
+#ifdef CONFIG_ROCKCHIP_HW_DECOMPRESS
+int rk_decom_start(u32 mode, phys_addr_t src, phys_addr_t dst, u32 dst_max_size);
+#else
+static inline int rk_decom_start(u32 mode, phys_addr_t src, phys_addr_t dst, u32 dst_max_size)
+{
+	return -EINVAL;
+}
+#endif
 
 #endif
-- 
2.35.3

