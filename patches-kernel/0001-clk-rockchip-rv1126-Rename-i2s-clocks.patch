From 06488ce21788a62fb6a358689d7351679f24af89 Mon Sep 17 00:00:00 2001
From: Finley Xiao <finley.xiao@rock-chips.com>
Date: Thu, 26 Mar 2020 21:32:22 +0800
Subject: [PATCH] clk: rockchip: rv1126: Rename i2s clocks

Change-Id: I20693ef5b39f6f944a560d0526c6a4ff204dd506
Signed-off-by: Finley Xiao <finley.xiao@rock-chips.com>
---
 arch/arm/boot/dts/rv1126-iotest-v10.dts |  4 +-
 arch/arm/boot/dts/rv1126.dtsi           |  8 +--
 arch/arm/boot/dts/rv11xx-evb-v10.dtsi   |  6 +-
 drivers/clk/rockchip/clk-rv1126.c       | 78 ++++++++++++-------------
 include/dt-bindings/clock/rv1126-cru.h  | 60 +++++++++----------
 5 files changed, 78 insertions(+), 78 deletions(-)

diff --git a/arch/arm/boot/dts/rv1126-iotest-v10.dts b/arch/arm/boot/dts/rv1126-iotest-v10.dts
index 00c200d921e4..95d6ed33448c 100644
--- a/arch/arm/boot/dts/rv1126-iotest-v10.dts
+++ b/arch/arm/boot/dts/rv1126-iotest-v10.dts
@@ -279,7 +279,7 @@
 		rk809_codec: codec {
 			#sound-dai-cells = <0>;
 			compatible = "rockchip,rk809-codec", "rockchip,rk817-codec";
-			clocks = <&cru MCLK_I2S8CH_TX_OUT2IO>;
+			clocks = <&cru MCLK_I2S0_TX_OUT2IO>;
 			clock-names = "mclk";
 			pinctrl-names = "default";
 			pinctrl-0 = <&i2s0m0_mclk>;
@@ -338,4 +338,4 @@
 	status = "okay";
 	/delete-property/ phys;
 	dr_mode = "peripheral";
-};
\ No newline at end of file
+};
diff --git a/arch/arm/boot/dts/rv1126.dtsi b/arch/arm/boot/dts/rv1126.dtsi
index e5bce5326abe..70d9f0fe6d14 100644
--- a/arch/arm/boot/dts/rv1126.dtsi
+++ b/arch/arm/boot/dts/rv1126.dtsi
@@ -1059,11 +1059,11 @@
 		compatible = "rockchip,rv1126-i2s-tdm";
 		reg = <0xff800000 0x1000>;
 		interrupts = <GIC_SPI 46 IRQ_TYPE_LEVEL_HIGH>;
-		clocks = <&cru MCLK_I2S8CH_TX>, <&cru MCLK_I2S8CH_RX>, <&cru HCLK_I2S8CH>;
+		clocks = <&cru MCLK_I2S0_TX>, <&cru MCLK_I2S0_RX>, <&cru HCLK_I2S0>;
 		clock-names = "mclk_tx", "mclk_rx", "hclk";
 		dmas = <&dmac 20>, <&dmac 19>;
 		dma-names = "tx", "rx";
-		resets = <&cru SRST_I2S8CH_TX_M>, <&cru SRST_I2S8CH_RX_M>;
+		resets = <&cru SRST_I2S0_TX_M>, <&cru SRST_I2S0_RX_M>;
 		reset-names = "tx-m", "rx-m";
 		rockchip,cru = <&cru>;
 		rockchip,grf = <&grf>;
@@ -1084,7 +1084,7 @@
 		compatible = "rockchip,rv1126-i2s", "rockchip,rk3066-i2s";
 		reg = <0xff810000 0x1000>;
 		interrupts = <GIC_SPI 47 IRQ_TYPE_LEVEL_HIGH>;
-		clocks = <&cru MCLK_I2S2CH0>, <&cru HCLK_I2S2CH0>;
+		clocks = <&cru MCLK_I2S1>, <&cru HCLK_I2S1>;
 		clock-names = "i2s_clk", "i2s_hclk";
 		dmas = <&dmac 22>, <&dmac 21>;
 		dma-names = "tx", "rx";
@@ -1100,7 +1100,7 @@
 		compatible = "rockchip,rv1126-i2s", "rockchip,rk3066-i2s";
 		reg = <0xff820000 0x1000>;
 		interrupts = <GIC_SPI 48 IRQ_TYPE_LEVEL_HIGH>;
-		clocks = <&cru MCLK_I2S2CH1>, <&cru HCLK_I2S2CH1>;
+		clocks = <&cru MCLK_I2S2>, <&cru HCLK_I2S2>;
 		clock-names = "i2s_clk", "i2s_hclk";
 		dmas = <&dmac 24>, <&dmac 23>;
 		dma-names = "tx", "rx";
diff --git a/arch/arm/boot/dts/rv11xx-evb-v10.dtsi b/arch/arm/boot/dts/rv11xx-evb-v10.dtsi
index c8817563c3e2..2f4347beea45 100644
--- a/arch/arm/boot/dts/rv11xx-evb-v10.dtsi
+++ b/arch/arm/boot/dts/rv11xx-evb-v10.dtsi
@@ -735,11 +735,11 @@
 		rk809_codec: codec {
 			#sound-dai-cells = <0>;
 			compatible = "rockchip,rk809-codec", "rockchip,rk817-codec";
-			clocks = <&cru MCLK_I2S8CH_TX_OUT2IO>;
+			clocks = <&cru MCLK_I2S0_TX_OUT2IO>;
 			clock-names = "mclk";
 			pinctrl-names = "default";
-			assigned-clocks = <&cru MCLK_I2S8CH_TX_OUT2IO>;
-			assigned-clock-parents = <&cru MCLK_I2S8CH_TX>;
+			assigned-clocks = <&cru MCLK_I2S0_TX_OUT2IO>;
+			assigned-clock-parents = <&cru MCLK_I2S0_TX>;
 			pinctrl-0 = <&i2s0m0_mclk>;
 			hp-volume = <20>;
 			spk-volume = <3>;
diff --git a/drivers/clk/rockchip/clk-rv1126.c b/drivers/clk/rockchip/clk-rv1126.c
index 9f2eb6c15470..bbac451c1513 100644
--- a/drivers/clk/rockchip/clk-rv1126.c
+++ b/drivers/clk/rockchip/clk-rv1126.c
@@ -159,14 +159,14 @@ PNAME(mux_uart3_p)			= { "sclk_uart3_div", "sclk_uart3_frac", "xin24m" };
 PNAME(mux_uart4_p)			= { "sclk_uart4_div", "sclk_uart4_frac", "xin24m" };
 PNAME(mux_uart5_p)			= { "sclk_uart5_div", "sclk_uart5_frac", "xin24m" };
 PNAME(mux_cpll_gpll_p)			= { "cpll", "gpll" };
-PNAME(mux_i2s8ch_tx_p)			= { "mclk_i2s8ch_tx_div", "mclk_i2s8ch_tx_fracdiv", "i2s8ch_mclkin", "xin12m" };
-PNAME(mux_i2s8ch_rx_p)			= { "mclk_i2s8ch_rx_div", "mclk_i2s8ch_rx_fracdiv", "i2s8ch_mclkin", "xin12m" };
-PNAME(mux_i2s8ch_tx_out2io_p)		= { "mclk_i2s8ch_tx", "xin12m" };
-PNAME(mux_i2s8ch_rx_out2io_p)		= { "mclk_i2s8ch_rx", "xin12m" };
-PNAME(mux_i2s2ch0_p)			= { "mclk_i2s2ch0_div", "mclk_i2s2ch0_fracdiv", "i2s2ch0_mclkin", "xin12m" };
-PNAME(mux_i2s2ch0_out2io_p)		= { "mclk_i2s2ch0", "xin12m" };
-PNAME(mux_i2s2ch1_p)			= { "mclk_i2s2ch1_div", "mclk_i2s2ch1_fracdiv", "i2s2ch1_mclkin", "xin12m" };
-PNAME(mux_i2s2ch1_out2io_p)		= { "mclk_i2s2ch1", "xin12m" };
+PNAME(mux_i2s0_tx_p)			= { "mclk_i2s0_tx_div", "mclk_i2s0_tx_fracdiv", "i2s0_mclkin", "xin12m" };
+PNAME(mux_i2s0_rx_p)			= { "mclk_i2s0_rx_div", "mclk_i2s0_rx_fracdiv", "i2s0_mclkin", "xin12m" };
+PNAME(mux_i2s0_tx_out2io_p)		= { "mclk_i2s0_tx", "xin12m" };
+PNAME(mux_i2s0_rx_out2io_p)		= { "mclk_i2s0_rx", "xin12m" };
+PNAME(mux_i2s1_p)			= { "mclk_i2s1_div", "mclk_i2s1_fracdiv", "i2s1_mclkin", "xin12m" };
+PNAME(mux_i2s1_out2io_p)		= { "mclk_i2s1", "xin12m" };
+PNAME(mux_i2s2_p)			= { "mclk_i2s2_div", "mclk_i2s2_fracdiv", "i2s2_mclkin", "xin12m" };
+PNAME(mux_i2s2_out2io_p)		= { "mclk_i2s2", "xin12m" };
 PNAME(mux_gpll_cpll_xin24m_p)		= { "gpll", "cpll", "xin24m" };
 PNAME(mux_audpwm_p)			= { "sclk_audpwm_div", "sclk_audpwm_fracdiv", "xin24m" };
 PNAME(mux_cpll_hpll_gpll_p)		= { "cpll", "hpll", "gpll" };
@@ -245,20 +245,20 @@ static struct rockchip_clk_branch rv1126_uart5_fracmux __initdata =
 	MUX(SCLK_UART5_MUX, "sclk_uart5_mux", mux_uart5_p, CLK_SET_RATE_PARENT,
 			RV1126_CLKSEL_CON(18), 10, 2, MFLAGS);
 
-static struct rockchip_clk_branch rv1126_i2s8ch_tx_fracmux __initdata =
-	MUX(MCLK_I2S8CH_TX_MUX, "mclk_i2s8ch_tx_mux", mux_i2s8ch_tx_p, CLK_SET_RATE_PARENT,
+static struct rockchip_clk_branch rv1126_i2s0_tx_fracmux __initdata =
+	MUX(MCLK_I2S0_TX_MUX, "mclk_i2s0_tx_mux", mux_i2s0_tx_p, CLK_SET_RATE_PARENT,
 			RV1126_CLKSEL_CON(30), 0, 2, MFLAGS);
 
-static struct rockchip_clk_branch rv1126_i2s8ch_rx_fracmux __initdata =
-	MUX(MCLK_I2S8CH_RX_MUX, "mclk_i2s8ch_rx_mux", mux_i2s8ch_rx_p, CLK_SET_RATE_PARENT,
+static struct rockchip_clk_branch rv1126_i2s0_rx_fracmux __initdata =
+	MUX(MCLK_I2S0_RX_MUX, "mclk_i2s0_rx_mux", mux_i2s0_rx_p, CLK_SET_RATE_PARENT,
 			RV1126_CLKSEL_CON(30), 2, 2, MFLAGS);
 
-static struct rockchip_clk_branch rv1126_i2s2ch0_fracmux __initdata =
-	MUX(MCLK_I2S2CH0_MUX, "mclk_i2s2ch0_mux", mux_i2s2ch0_p, CLK_SET_RATE_PARENT,
+static struct rockchip_clk_branch rv1126_i2s1_fracmux __initdata =
+	MUX(MCLK_I2S1_MUX, "mclk_i2s1_mux", mux_i2s1_p, CLK_SET_RATE_PARENT,
 			RV1126_CLKSEL_CON(31), 8, 2, MFLAGS);
 
-static struct rockchip_clk_branch rv1126_i2s2ch1_fracmux __initdata =
-	MUX(MCLK_I2S2CH1_MUX, "mclk_i2s2ch1_mux", mux_i2s2ch1_p, CLK_SET_RATE_PARENT,
+static struct rockchip_clk_branch rv1126_i2s2_fracmux __initdata =
+	MUX(MCLK_I2S2_MUX, "mclk_i2s2_mux", mux_i2s2_p, CLK_SET_RATE_PARENT,
 			RV1126_CLKSEL_CON(33), 8, 2, MFLAGS);
 
 static struct rockchip_clk_branch rv1126_audpwm_fracmux __initdata =
@@ -737,59 +737,59 @@ static struct rockchip_clk_branch rv1126_clk_branches[] __initdata = {
 	GATE(0, "pclk_pdaudio_niu", "hclk_pdaudio", CLK_IGNORE_UNUSED,
 			RV1126_CLKGATE_CON(9), 3, GFLAGS),
 
-	GATE(HCLK_I2S8CH, "hclk_i2s8ch", "hclk_pdaudio", 0,
+	GATE(HCLK_I2S0, "hclk_i2s0", "hclk_pdaudio", 0,
 			RV1126_CLKGATE_CON(9), 4, GFLAGS),
-	COMPOSITE(MCLK_I2S8CH_TX_DIV, "mclk_i2s8ch_tx_div", mux_cpll_gpll_p, 0,
+	COMPOSITE(MCLK_I2S0_TX_DIV, "mclk_i2s0_tx_div", mux_cpll_gpll_p, 0,
 			RV1126_CLKSEL_CON(27), 7, 1, MFLAGS, 0, 7, DFLAGS,
 			RV1126_CLKGATE_CON(9), 5, GFLAGS),
-	COMPOSITE_FRACMUX(MCLK_I2S8CH_TX_FRACDIV, "mclk_i2s8ch_tx_fracdiv", "mclk_i2s8ch_tx_div", 0,
+	COMPOSITE_FRACMUX(MCLK_I2S0_TX_FRACDIV, "mclk_i2s0_tx_fracdiv", "mclk_i2s0_tx_div", 0,
 			RV1126_CLKSEL_CON(28), 0,
 			RV1126_CLKGATE_CON(9), 6, GFLAGS,
-			&rv1126_i2s8ch_tx_fracmux, RV1126_FRAC_MAX_PRATE),
-	GATE(MCLK_I2S8CH_TX, "mclk_i2s8ch_tx", "mclk_i2s8ch_tx_mux", 0,
+			&rv1126_i2s0_tx_fracmux, RV1126_FRAC_MAX_PRATE),
+	GATE(MCLK_I2S0_TX, "mclk_i2s0_tx", "mclk_i2s0_tx_mux", 0,
 			RV1126_CLKGATE_CON(9), 9, GFLAGS),
-	COMPOSITE(MCLK_I2S8CH_RX_DIV, "mclk_i2s8ch_rx_div", mux_cpll_gpll_p, 0,
+	COMPOSITE(MCLK_I2S0_RX_DIV, "mclk_i2s0_rx_div", mux_cpll_gpll_p, 0,
 			RV1126_CLKSEL_CON(27), 15, 1, MFLAGS, 8, 7, DFLAGS,
 			RV1126_CLKGATE_CON(9), 7, GFLAGS),
-	COMPOSITE_FRACMUX(MCLK_I2S8CH_RX_FRACDIV, "mclk_i2s8ch_rx_fracdiv", "mclk_i2s8ch_rx_div", 0,
+	COMPOSITE_FRACMUX(MCLK_I2S0_RX_FRACDIV, "mclk_i2s0_rx_fracdiv", "mclk_i2s0_rx_div", 0,
 			RV1126_CLKSEL_CON(29), 0,
 			RV1126_CLKGATE_CON(9), 8, GFLAGS,
-			&rv1126_i2s8ch_rx_fracmux, RV1126_FRAC_MAX_PRATE),
-	GATE(MCLK_I2S8CH_RX, "mclk_i2s8ch_rx", "mclk_i2s8ch_rx_mux", 0,
+			&rv1126_i2s0_rx_fracmux, RV1126_FRAC_MAX_PRATE),
+	GATE(MCLK_I2S0_RX, "mclk_i2s0_rx", "mclk_i2s0_rx_mux", 0,
 			RV1126_CLKGATE_CON(9), 10, GFLAGS),
-	COMPOSITE_NODIV(MCLK_I2S8CH_TX_OUT2IO, "mclk_i2s8ch_tx_out2io", mux_i2s8ch_tx_out2io_p, 0,
+	COMPOSITE_NODIV(MCLK_I2S0_TX_OUT2IO, "mclk_i2s0_tx_out2io", mux_i2s0_tx_out2io_p, 0,
 			RV1126_CLKSEL_CON(30), 6, 1, MFLAGS,
 			RV1126_CLKGATE_CON(9), 13, GFLAGS),
-	COMPOSITE_NODIV(MCLK_I2S8CH_RX_OUT2IO, "mclk_i2s8ch_rx_out2io", mux_i2s8ch_rx_out2io_p, 0,
+	COMPOSITE_NODIV(MCLK_I2S0_RX_OUT2IO, "mclk_i2s0_rx_out2io", mux_i2s0_rx_out2io_p, 0,
 			RV1126_CLKSEL_CON(30), 8, 1, MFLAGS,
 			RV1126_CLKGATE_CON(9), 14, GFLAGS),
 
-	GATE(HCLK_I2S2CH0, "hclk_i2s2ch0", "hclk_pdaudio", 0,
+	GATE(HCLK_I2S1, "hclk_i2s1", "hclk_pdaudio", 0,
 			RV1126_CLKGATE_CON(10), 0, GFLAGS),
-	COMPOSITE(MCLK_I2S2CH0_DIV, "mclk_i2s2ch0_div", mux_cpll_gpll_p, 0,
+	COMPOSITE(MCLK_I2S1_DIV, "mclk_i2s1_div", mux_cpll_gpll_p, 0,
 			RV1126_CLKSEL_CON(31), 7, 1, MFLAGS, 0, 7, DFLAGS,
 			RV1126_CLKGATE_CON(10), 1, GFLAGS),
-	COMPOSITE_FRACMUX(MCLK_I2S2CH0_FRACDIV, "mclk_i2s2ch0_fracdiv", "mclk_i2s2ch0_div", 0,
+	COMPOSITE_FRACMUX(MCLK_I2S1_FRACDIV, "mclk_i2s1_fracdiv", "mclk_i2s1_div", 0,
 			RV1126_CLKSEL_CON(32), 0,
 			RV1126_CLKGATE_CON(10), 2, GFLAGS,
-			&rv1126_i2s2ch0_fracmux, RV1126_FRAC_MAX_PRATE),
-	GATE(MCLK_I2S2CH0, "mclk_i2s2ch0", "mclk_i2s2ch0_mux", 0,
+			&rv1126_i2s1_fracmux, RV1126_FRAC_MAX_PRATE),
+	GATE(MCLK_I2S1, "mclk_i2s1", "mclk_i2s1_mux", 0,
 			RV1126_CLKGATE_CON(10), 3, GFLAGS),
-	COMPOSITE_NODIV(MCLK_I2S2CH0_OUT2IO, "mclk_i2s2ch0_out2io", mux_i2s2ch0_out2io_p, 0,
+	COMPOSITE_NODIV(MCLK_I2S1_OUT2IO, "mclk_i2s1_out2io", mux_i2s1_out2io_p, 0,
 			RV1126_CLKSEL_CON(31), 12, 1, MFLAGS,
 			RV1126_CLKGATE_CON(10), 4, GFLAGS),
-	GATE(HCLK_I2S2CH1, "hclk_i2s2ch1", "hclk_pdaudio", 0,
+	GATE(HCLK_I2S2, "hclk_i2s2", "hclk_pdaudio", 0,
 			RV1126_CLKGATE_CON(10), 5, GFLAGS),
-	COMPOSITE(MCLK_I2S2CH1_DIV, "mclk_i2s2ch1_div", mux_cpll_gpll_p, 0,
+	COMPOSITE(MCLK_I2S2_DIV, "mclk_i2s2_div", mux_cpll_gpll_p, 0,
 			RV1126_CLKSEL_CON(33), 7, 1, MFLAGS, 0, 7, DFLAGS,
 			RV1126_CLKGATE_CON(10), 6, GFLAGS),
-	COMPOSITE_FRACMUX(MCLK_I2S2CH1_FRACDIV, "mclk_i2s2ch1_fracdiv", "mclk_i2s2ch1_div", 0,
+	COMPOSITE_FRACMUX(MCLK_I2S2_FRACDIV, "mclk_i2s2_fracdiv", "mclk_i2s2_div", 0,
 			RV1126_CLKSEL_CON(34), 0,
 			RV1126_CLKGATE_CON(10), 7, GFLAGS,
-			&rv1126_i2s2ch1_fracmux, RV1126_FRAC_MAX_PRATE),
-	GATE(MCLK_I2S2CH1, "mclk_i2s2ch1", "mclk_i2s2ch1_mux", 0,
+			&rv1126_i2s2_fracmux, RV1126_FRAC_MAX_PRATE),
+	GATE(MCLK_I2S2, "mclk_i2s2", "mclk_i2s2_mux", 0,
 			RV1126_CLKGATE_CON(10), 8, GFLAGS),
-	COMPOSITE_NODIV(MCLK_I2S2CH1_OUT2IO, "mclk_i2s2ch1_out2io", mux_i2s2ch1_out2io_p, 0,
+	COMPOSITE_NODIV(MCLK_I2S2_OUT2IO, "mclk_i2s2_out2io", mux_i2s2_out2io_p, 0,
 			RV1126_CLKSEL_CON(33), 10, 1, MFLAGS,
 			RV1126_CLKGATE_CON(10), 9, GFLAGS),
 
diff --git a/include/dt-bindings/clock/rv1126-cru.h b/include/dt-bindings/clock/rv1126-cru.h
index 17ffe93ce12f..280df25f145c 100644
--- a/include/dt-bindings/clock/rv1126-cru.h
+++ b/include/dt-bindings/clock/rv1126-cru.h
@@ -121,26 +121,26 @@
 #define CLK_CPU_TSADCPHY	55
 #define CLK_CRYPTO_CORE		56
 #define CLK_CRYPTO_PKA		57
-#define MCLK_I2S8CH_TX_DIV	58
-#define MCLK_I2S8CH_TX_FRACDIV	59
-#define MCLK_I2S8CH_TX_MUX	60
-#define MCLK_I2S8CH_TX		61
-#define MCLK_I2S8CH_RX_DIV	62
-#define MCLK_I2S8CH_RX_FRACDIV	63
-#define MCLK_I2S8CH_RX_MUX	64
-#define MCLK_I2S8CH_RX		65
-#define MCLK_I2S8CH_TX_OUT2IO	66
-#define MCLK_I2S8CH_RX_OUT2IO	67
-#define MCLK_I2S2CH0_DIV	68
-#define MCLK_I2S2CH0_FRACDIV	69
-#define MCLK_I2S2CH0_MUX	70
-#define MCLK_I2S2CH0		71
-#define MCLK_I2S2CH0_OUT2IO	72
-#define MCLK_I2S2CH1_DIV	73
-#define MCLK_I2S2CH1_FRACDIV	74
-#define MCLK_I2S2CH1_MUX	75
-#define MCLK_I2S2CH1		76
-#define MCLK_I2S2CH1_OUT2IO	77
+#define MCLK_I2S0_TX_DIV	58
+#define MCLK_I2S0_TX_FRACDIV	59
+#define MCLK_I2S0_TX_MUX	60
+#define MCLK_I2S0_TX		61
+#define MCLK_I2S0_RX_DIV	62
+#define MCLK_I2S0_RX_FRACDIV	63
+#define MCLK_I2S0_RX_MUX	64
+#define MCLK_I2S0_RX		65
+#define MCLK_I2S0_TX_OUT2IO	66
+#define MCLK_I2S0_RX_OUT2IO	67
+#define MCLK_I2S1_DIV		68
+#define MCLK_I2S1_FRACDIV	69
+#define MCLK_I2S1_MUX		70
+#define MCLK_I2S1		71
+#define MCLK_I2S1_OUT2IO	72
+#define MCLK_I2S2_DIV		73
+#define MCLK_I2S2_FRACDIV	74
+#define MCLK_I2S2_MUX		75
+#define MCLK_I2S2		76
+#define MCLK_I2S2_OUT2IO	77
 #define MCLK_PDM		78
 #define SCLK_ADUPWM_DIV		79
 #define SCLK_AUDPWM_FRACDIV	80
@@ -266,9 +266,9 @@
 #define HCLK_PDCRYPTO		202
 #define HCLK_CRYPTO		203
 #define HCLK_PDAUDIO		204
-#define HCLK_I2S8CH		205
-#define HCLK_I2S2CH0		206
-#define HCLK_I2S2CH1		207
+#define HCLK_I2S0		205
+#define HCLK_I2S1		206
+#define HCLK_I2S2		207
 #define HCLK_PDM		208
 #define HCLK_AUDPWM		209
 #define HCLK_PDVEPU		210
@@ -488,13 +488,13 @@
 /* cru_softrst_con6 */
 #define SRST_PDAUDIO_NIU_H	96
 #define SRST_PDAUDIO_NIU_P	97
-#define SRST_I2S8CH_H		98
-#define SRST_I2S8CH_TX_M	99
-#define SRST_I2S8CH_RX_M	100
-#define SRST_I2S2CH0_H		101
-#define SRST_I2S2CH0_M		102
-#define SRST_I2S2CH1_H		103
-#define SRST_I2S2CH1_M		104
+#define SRST_I2S0_H		98
+#define SRST_I2S0_TX_M		99
+#define SRST_I2S0_RX_M		100
+#define SRST_I2S1_H		101
+#define SRST_I2S1_M		102
+#define SRST_I2S2_H		103
+#define SRST_I2S2_M		104
 #define SRST_PDM_H		105
 #define SRST_PDM_M		106
 #define SRST_AUDPWM_H		107
-- 
2.35.3

