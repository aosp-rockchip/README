From 784baba614dd57bef7761a34509e1d4a595c3a83 Mon Sep 17 00:00:00 2001
From: Hu Kejun <william.hu@rock-chips.com>
Date: Wed, 31 Oct 2018 19:40:40 +0800
Subject: [PATCH] media: rockchip: isp1: add ioctl for hdr

Change-Id: I6aa26828a1da063be9f24cd02c5fefd84988d04a
Signed-off-by: Hu Kejun <william.hu@rock-chips.com>
---
 drivers/media/platform/rockchip/isp1/dev.h    |  1 +
 .../media/platform/rockchip/isp1/isp_params.c | 72 +++++++++++++++++++
 .../media/platform/rockchip/isp1/isp_params.h |  3 +
 drivers/media/platform/rockchip/isp1/rkisp1.c |  7 ++
 4 files changed, 83 insertions(+)

diff --git a/drivers/media/platform/rockchip/isp1/dev.h b/drivers/media/platform/rockchip/isp1/dev.h
index be092acd70d2..27ae19211e01 100644
--- a/drivers/media/platform/rockchip/isp1/dev.h
+++ b/drivers/media/platform/rockchip/isp1/dev.h
@@ -137,6 +137,7 @@ struct rkisp1_device {
 	unsigned int emd_dt;
 	int vs_irq;
 	struct gpio_desc *vs_irq_gpio;
+	struct v4l2_subdev *hdr_sensor;
 };
 
 #endif
diff --git a/drivers/media/platform/rockchip/isp1/isp_params.c b/drivers/media/platform/rockchip/isp1/isp_params.c
index 42f55ed3a027..7ddc0c100588 100644
--- a/drivers/media/platform/rockchip/isp1/isp_params.c
+++ b/drivers/media/platform/rockchip/isp1/isp_params.c
@@ -36,6 +36,7 @@
 #include <media/v4l2-ioctl.h>
 #include <media/videobuf2-core.h>
 #include <media/videobuf2-vmalloc.h>	/* for ISP params */
+#include <linux/rk-preisp.h>
 #include "dev.h"
 #include "regs.h"
 
@@ -1586,6 +1587,66 @@ void __isp_isr_meas_config(struct rkisp1_isp_params_vdev *params_vdev,
 	}
 }
 
+static __maybe_unused
+void __preisp_isr_update_hdrae_para(struct rkisp1_isp_params_vdev *params_vdev,
+				    struct rkisp1_isp_params_cfg *new_params)
+{
+	struct preisp_hdrae_para_s *hdrae;
+	struct cifisp_lsc_config *lsc;
+	struct cifisp_awb_gain_config *awb_gain;
+	unsigned int module_en_update, module_cfg_update, module_ens;
+	int i, ret;
+
+	hdrae = &params_vdev->hdrae_para;
+	module_en_update = new_params->module_en_update;
+	module_cfg_update = new_params->module_cfg_update;
+	module_ens = new_params->module_ens;
+	lsc = &new_params->others.lsc_config;
+	awb_gain = &new_params->others.awb_gain_config;
+
+	if (!params_vdev->dev->hdr_sensor)
+		return;
+
+	if ((module_en_update & CIFISP_MODULE_AWB_GAIN) ||
+	    (module_cfg_update & CIFISP_MODULE_AWB_GAIN)) {
+		/* update awb gains */
+		if ((module_cfg_update & CIFISP_MODULE_AWB_GAIN)) {
+			hdrae->r_gain = awb_gain->gain_red;
+			hdrae->b_gain = awb_gain->gain_blue;
+			hdrae->gr_gain = awb_gain->gain_green_r;
+			hdrae->gb_gain = awb_gain->gain_green_b;
+		}
+
+		if (module_en_update & CIFISP_MODULE_AWB_GAIN) {
+			if (!(module_ens & CIFISP_MODULE_AWB_GAIN)) {
+				hdrae->r_gain = 0x0100;
+				hdrae->b_gain = 0x0100;
+				hdrae->gr_gain = 0x0100;
+				hdrae->gb_gain = 0x0100;
+			}
+		}
+	}
+
+	if ((module_en_update & CIFISP_MODULE_LSC) ||
+	    (module_cfg_update & CIFISP_MODULE_LSC)) {
+		/* update lsc config */
+		if ((module_cfg_update & CIFISP_MODULE_LSC))
+			memcpy(hdrae->lsc_table, lsc->gr_data_tbl,
+				PREISP_LSCTBL_SIZE);
+
+		if (module_en_update & CIFISP_MODULE_LSC) {
+			if (!(module_ens & CIFISP_MODULE_LSC))
+				for (i = 0; i < PREISP_LSCTBL_SIZE; i++)
+					hdrae->lsc_table[i] = 0x0400;
+		}
+	}
+
+	ret = v4l2_subdev_call(params_vdev->dev->hdr_sensor, core, ioctl,
+			       PREISP_CMD_SAVE_HDRAE_PARAM, hdrae);
+	if (ret)
+		params_vdev->dev->hdr_sensor = NULL;
+}
+
 void rkisp1_params_isr(struct rkisp1_isp_params_vdev *params_vdev, u32 isp_mis)
 {
 	struct rkisp1_isp_params_cfg *new_params;
@@ -1623,6 +1684,8 @@ void rkisp1_params_isr(struct rkisp1_isp_params_vdev *params_vdev, u32 isp_mis)
 		isp_ctrl |= CIF_ISP_CTRL_ISP_CFG_UPD;
 		rkisp1_iowrite32(params_vdev, isp_ctrl, CIF_ISP_CTRL);
 
+		__preisp_isr_update_hdrae_para(params_vdev, new_params);
+
 		cur_buf->vb.sequence = cur_frame_id;
 		vb2_buffer_done(&cur_buf->vb.vb2_buf, VB2_BUF_STATE_DONE);
 	}
@@ -1673,6 +1736,7 @@ void rkisp1_params_config_parameter(struct rkisp1_isp_params_vdev *params_vdev)
 {
 	struct rkisp1_isp_params_ops *ops = params_vdev->ops;
 	struct cifisp_hst_config hst = hst_params_default_config;
+	int i;
 
 	spin_lock(&params_vdev->config_lock);
 
@@ -1717,9 +1781,17 @@ void rkisp1_params_config_parameter(struct rkisp1_isp_params_vdev *params_vdev)
 				     CIF_ISP_LSC_CTRL_ENA);
 	}
 
+	params_vdev->hdrae_para.r_gain = 0x0100;
+	params_vdev->hdrae_para.b_gain = 0x0100;
+	params_vdev->hdrae_para.gr_gain = 0x0100;
+	params_vdev->hdrae_para.gb_gain = 0x0100;
+	for (i = 0; i < PREISP_LSCTBL_SIZE; i++)
+		params_vdev->hdrae_para.lsc_table[i] = 0x0400;
+
 	/* override the default things */
 	__isp_isr_other_config(params_vdev, &params_vdev->cur_params);
 	__isp_isr_meas_config(params_vdev, &params_vdev->cur_params);
+	__preisp_isr_update_hdrae_para(params_vdev, &params_vdev->cur_params);
 
 	spin_unlock(&params_vdev->config_lock);
 }
diff --git a/drivers/media/platform/rockchip/isp1/isp_params.h b/drivers/media/platform/rockchip/isp1/isp_params.h
index ca0f1fd544c9..0da78682e4f5 100644
--- a/drivers/media/platform/rockchip/isp1/isp_params.h
+++ b/drivers/media/platform/rockchip/isp1/isp_params.h
@@ -36,6 +36,7 @@
 #define _RKISP1_ISP_H
 
 #include <linux/rkisp1-config.h>
+#include <linux/rk-preisp.h>
 #include "common.h"
 
 struct rkisp1_isp_params_vdev;
@@ -115,6 +116,8 @@ struct rkisp1_isp_params_vdev {
 	enum rkisp1_fmt_raw_pat_type raw_type;
 	u32 in_mbus_code;
 
+	struct preisp_hdrae_para_s hdrae_para;
+
 	struct rkisp1_isp_params_ops *ops;
 	struct rkisp1_isp_params_config *config;
 };
diff --git a/drivers/media/platform/rockchip/isp1/rkisp1.c b/drivers/media/platform/rockchip/isp1/rkisp1.c
index c6e7bef81276..f556a5ff248b 100644
--- a/drivers/media/platform/rockchip/isp1/rkisp1.c
+++ b/drivers/media/platform/rockchip/isp1/rkisp1.c
@@ -39,6 +39,7 @@
 #include <linux/vmalloc.h>
 #include <linux/kfifo.h>
 #include <linux/interrupt.h>
+#include <linux/rk-preisp.h>
 #include <media/v4l2-event.h>
 #include <media/media-entity.h>
 
@@ -348,6 +349,7 @@ static int rkisp1_config_mipi(struct rkisp1_device *dev)
 
 	emd_vc = 0xFF;
 	emd_dt = 0;
+	dev->hdr_sensor = NULL;
 	get_remote_mipi_sensor(dev, &mipi_sensor);
 	if (mipi_sensor) {
 		ctrl = v4l2_ctrl_find(mipi_sensor->ctrl_handler,
@@ -359,6 +361,7 @@ static int rkisp1_config_mipi(struct rkisp1_device *dev)
 				      CIFISP_CID_EMB_DT);
 		if (ctrl)
 			emd_dt = v4l2_ctrl_g_ctrl(ctrl);
+		dev->hdr_sensor = mipi_sensor;
 	}
 
 	dev->emd_dt = emd_dt;
@@ -542,6 +545,9 @@ static int rkisp1_isp_stop(struct rkisp1_device *dev)
 		dev->emd_vc = 0xFF;
 	}
 
+	if (dev->hdr_sensor)
+		dev->hdr_sensor = NULL;
+
 	return 0;
 }
 
@@ -1335,6 +1341,7 @@ int rkisp1_register_isp_subdev(struct rkisp1_device *isp_dev,
 	}
 
 	rkisp1_isp_sd_init_default_fmt(isp_sdev);
+	isp_dev->hdr_sensor = NULL;
 
 	return 0;
 err_cleanup_media_entity:
-- 
2.35.3

