From 86b17a821c55260108c4129fe4ea0d210fb1302a Mon Sep 17 00:00:00 2001
From: Andy Yan <andy.yan@rock-chips.com>
Date: Wed, 22 Aug 2018 14:31:05 +0800
Subject: [PATCH] soc: rockchip: cpuinfo: init soc id for rk3308/rk3308b

RK3308B is a enhanced variant of RK3308 with more flexible
iomux and peripherals(for example, RK3308B has 12 pwms, but
RK3308 has 4).

The CHIP_ID is stored in GRF_CHIP_ID:

RK3308:  0xcea (3306 in decimal)
RK3308B: 0x3308

Change-Id: I8f675656c012bdedb43043f5dbeea8bd11ea4ded
Signed-off-by: Andy Yan <andy.yan@rock-chips.com>
---
 drivers/soc/rockchip/rockchip-cpuinfo.c | 19 +++++++++++++++++--
 include/linux/rockchip/cpu.h            | 17 +++++++++++++++++
 2 files changed, 34 insertions(+), 2 deletions(-)

diff --git a/drivers/soc/rockchip/rockchip-cpuinfo.c b/drivers/soc/rockchip/rockchip-cpuinfo.c
index a9ded8e8a263..faea58a09eed 100644
--- a/drivers/soc/rockchip/rockchip-cpuinfo.c
+++ b/drivers/soc/rockchip/rockchip-cpuinfo.c
@@ -88,7 +88,6 @@ static struct platform_driver rockchip_cpuinfo_driver = {
 	},
 };
 
-#ifdef CONFIG_ARM
 static void rk3288_init(void)
 {
 	void __iomem *base;
@@ -124,6 +123,21 @@ static void rk3126_init(void)
 	}
 }
 
+static void rk3308_init(void)
+{
+	void __iomem *base;
+
+	rockchip_soc_id = ROCKCHIP_SOC_RK3308;
+#define RK3308_GRF_PHYS		0xFF000000
+#define RK3308_GRF_CHIP_ID	0x800
+	base = ioremap(RK3308_GRF_PHYS, SZ_4K);
+	if (base) {
+		if (readl_relaxed(base + RK3308_GRF_CHIP_ID) == 0x3308)
+			rockchip_soc_id = ROCKCHIP_SOC_RK3308B;
+		iounmap(base);
+	}
+}
+
 static int __init rockchip_soc_id_init(void)
 {
 	if (cpu_is_rk3288()) {
@@ -133,12 +147,13 @@ static int __init rockchip_soc_id_init(void)
 			rockchip_soc_id = ROCKCHIP_SOC_RK3128;
 		else
 			rk3126_init();
+	} else if (cpu_is_rk3308()) {
+		rk3308_init();
 	}
 
 	return 0;
 }
 pure_initcall(rockchip_soc_id_init);
-#endif
 
 static int __init rockchip_cpuinfo_init(void)
 {
diff --git a/include/linux/rockchip/cpu.h b/include/linux/rockchip/cpu.h
index 7eb082722227..554299351875 100644
--- a/include/linux/rockchip/cpu.h
+++ b/include/linux/rockchip/cpu.h
@@ -54,6 +54,7 @@ static inline void rockchip_set_cpu_version(unsigned long ver)
 #define ROCKCHIP_CPU_MASK       0xffff0000
 #define ROCKCHIP_CPU_RK312X     0x31260000
 #define ROCKCHIP_CPU_RK3288     0x32880000
+#define ROCKCHIP_CPU_RK3308	0x33080000
 
 #ifdef CONFIG_CPU_RK312X
 static inline bool cpu_is_rk312x(void)
@@ -81,6 +82,18 @@ static inline bool cpu_is_rk3288(void)
 static inline bool cpu_is_rk3288(void) { return false; }
 #endif
 
+#ifdef CONFIG_CPU_RK3308
+static inline bool cpu_is_rk3308(void)
+{
+	if (rockchip_soc_id)
+		return (rockchip_soc_id & ROCKCHIP_CPU_MASK) == ROCKCHIP_CPU_RK3308;
+
+	return of_machine_is_compatible("rockchip,rk3308");
+}
+#else
+static inline bool cpu_is_rk3308(void) { return false; }
+#endif
+
 #define ROCKCHIP_SOC_MASK	(ROCKCHIP_CPU_MASK | 0xff)
 #define ROCKCHIP_SOC_RK3126     (ROCKCHIP_CPU_RK312X | 0x00)
 #define ROCKCHIP_SOC_RK3126B    (ROCKCHIP_CPU_RK312X | 0x10)
@@ -88,6 +101,8 @@ static inline bool cpu_is_rk3288(void) { return false; }
 #define ROCKCHIP_SOC_RK3128     (ROCKCHIP_CPU_RK312X | 0x01)
 #define ROCKCHIP_SOC_RK3288     (ROCKCHIP_CPU_RK3288 | 0x00)
 #define ROCKCHIP_SOC_RK3288W    (ROCKCHIP_CPU_RK3288 | 0x01)
+#define ROCKCHIP_SOC_RK3308	(ROCKCHIP_CPU_RK3308 | 0x00)
+#define ROCKCHIP_SOC_RK3308B	(ROCKCHIP_CPU_RK3308 | 0x01)
 
 #define ROCKCHIP_SOC(id, ID) \
 static inline bool soc_is_##id(void) \
@@ -103,5 +118,7 @@ ROCKCHIP_SOC(rk3126c, RK3126C)
 ROCKCHIP_SOC(rk3128, RK3128)
 ROCKCHIP_SOC(rk3288, RK3288)
 ROCKCHIP_SOC(rk3288w, RK3288W)
+ROCKCHIP_SOC(rk3308, RK3308)
+ROCKCHIP_SOC(rk3308b, RK3308B)
 
 #endif
-- 
2.35.3

