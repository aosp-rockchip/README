From 9913202a13c51b1f55f98d046087f731624a0231 Mon Sep 17 00:00:00 2001
From: Sandy Huang <hjc@rock-chips.com>
Date: Thu, 22 Aug 2019 10:38:59 +0800
Subject: [PATCH] drm/rockchip: VOP: update VOP irq control
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

VOP irq is share with VOP mmu, so the irq_desc is point to the same
address, this maybe case the following bug:
vop_bind()
	devm_request_irq() -> irq_desc->depth is 0
	disable_irq()      -> irq_desc->depth is 1
	encoder/connector/panel maybe bind failed, so next step is:
vop_unbind()
……
vop_bind() again
	devm_request_irq() -> because the irq_desc is share with VOP MMU,
			      the irq_desc isn't freed.so the depth is 1
	disable_irq()      -> irq_desc->depth is 2

next step when we want to enable_irq, the irq_desc->depth is 2, the GIC
will not enable VOP irq realy.

so we update the VOP irq control, delete the GIC VOP interrupt control.
after this the VOP interrupt only control by VOP interrupt register.

maybe we can enable_irq at vop_unbind when vop_bind failed to keep irq
balance, but the enable_irq() at vop_unbind() seem not friendly.

Change-Id: I30ee0b6973e8eebb9209b10d8bbbfb6cbcfb30e8
Signed-off-by: Sandy Huang <hjc@rock-chips.com>
---
 drivers/gpu/drm/rockchip/rockchip_drm_vop.c | 7 -------
 1 file changed, 7 deletions(-)

diff --git a/drivers/gpu/drm/rockchip/rockchip_drm_vop.c b/drivers/gpu/drm/rockchip/rockchip_drm_vop.c
index a1b0f72749c7..89dd8c2044e5 100644
--- a/drivers/gpu/drm/rockchip/rockchip_drm_vop.c
+++ b/drivers/gpu/drm/rockchip/rockchip_drm_vop.c
@@ -1485,8 +1485,6 @@ static void vop_crtc_atomic_disable(struct drm_crtc *crtc,
 
 	vop_dsp_hold_valid_irq_disable(vop);
 
-	disable_irq(vop->irq);
-
 	vop->is_enabled = false;
 	if (vop->is_iommu_enabled) {
 		/*
@@ -1889,8 +1887,6 @@ static void vop_crtc_disable(struct drm_crtc *crtc)
 
 	vop_dsp_hold_valid_irq_disable(vop);
 
-	disable_irq(vop->irq);
-
 	vop->is_enabled = false;
 
 	if (vop->is_iommu_enabled) {
@@ -2161,7 +2157,6 @@ static int vop_crtc_loader_protect(struct drm_crtc *crtc, bool on)
 
 		rockchip_set_system_status(sys_status);
 		vop_initial(crtc);
-		enable_irq(vop->irq);
 		drm_crtc_vblank_on(crtc);
 		vop->loader_protect = true;
 	} else {
@@ -2898,7 +2893,6 @@ static void vop_crtc_atomic_enable(struct drm_crtc *crtc,
 
 	vop_cfg_done(vop);
 
-	enable_irq(vop->irq);
 	drm_crtc_vblank_on(crtc);
 	vop_unlock(vop);
 }
@@ -4472,7 +4466,6 @@ static int vop_bind(struct device *dev, struct device *master, void *data)
 			       IRQF_SHARED, dev_name(dev), vop);
 	if (ret)
 		return ret;
-	disable_irq(vop->irq);
 	ret = vop_create_crtc(vop);
 	if (ret)
 		return ret;
-- 
2.35.3

