From ff5ab686615d431e8ef4e0df968944045ea737df Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E8=B5=B5=E5=AD=90=E5=88=9D?= <zzc@rock-chips.com>
Date: Tue, 12 Mar 2013 17:39:27 +0800
Subject: [PATCH] update bp driver

---
 drivers/misc/bp/chips/c66a.c    | 9 +++------
 drivers/misc/bp/chips/m51.c     | 7 ++-----
 drivers/misc/bp/chips/mi700.c   | 7 ++-----
 drivers/misc/bp/chips/mt6229.c  | 7 ++-----
 drivers/misc/bp/chips/mtk6250.c | 7 ++-----
 drivers/misc/bp/chips/mu509.c   | 7 ++-----
 drivers/misc/bp/chips/mw100.c   | 9 +++------
 drivers/misc/bp/chips/sc6610.c  | 3 ---
 8 files changed, 16 insertions(+), 40 deletions(-)

diff --git a/drivers/misc/bp/chips/c66a.c b/drivers/misc/bp/chips/c66a.c
index a5457516f6e8..2ec6c3656b21 100644
--- a/drivers/misc/bp/chips/c66a.c
+++ b/drivers/misc/bp/chips/c66a.c
@@ -74,12 +74,9 @@ static int bp_wake_ap(struct bp_private_data *bp)
 {
 	int result = 0;
 	
-	if(bp->suspend_status)
-	{
-		printk("<-----c66a bp_wake_ap-------->\n");
-		bp->suspend_status = 0;		
-		wake_lock_timeout(&bp->bp_wakelock, 10 * HZ);
-	}
+	printk("<-----c66a bp_wake_ap-------->\n");
+	bp->suspend_status = 0;		
+	wake_lock_timeout(&bp->bp_wakelock, 10 * HZ);
 	
 	return result;
 }
diff --git a/drivers/misc/bp/chips/m51.c b/drivers/misc/bp/chips/m51.c
index 8e32bf0c8441..e1542b0b0ee1 100755
--- a/drivers/misc/bp/chips/m51.c
+++ b/drivers/misc/bp/chips/m51.c
@@ -84,11 +84,8 @@ static int bp_wake_ap(struct bp_private_data *bp)
 {
 	int result = 0;
 	
-	if(bp->suspend_status)
-	{
-		bp->suspend_status = 0;		
-		wake_lock_timeout(&bp->bp_wakelock, 10 * HZ);
-	}
+	bp->suspend_status = 0;		
+	wake_lock_timeout(&bp->bp_wakelock, 10 * HZ);
 	
 	return result;
 }
diff --git a/drivers/misc/bp/chips/mi700.c b/drivers/misc/bp/chips/mi700.c
index 876a550d3a16..ff6b525117de 100755
--- a/drivers/misc/bp/chips/mi700.c
+++ b/drivers/misc/bp/chips/mi700.c
@@ -84,11 +84,8 @@ static int bp_wake_ap(struct bp_private_data *bp)
 {
 	int result = 0;
 	
-	if(bp->suspend_status)
-	{
-		bp->suspend_status = 0;
-		wake_lock_timeout(&bp->bp_wakelock, 10 * HZ);
-	}
+	bp->suspend_status = 0;
+	wake_lock_timeout(&bp->bp_wakelock, 10 * HZ);
 	
 	return result;
 }
diff --git a/drivers/misc/bp/chips/mt6229.c b/drivers/misc/bp/chips/mt6229.c
index 20abc1dfeac2..94648abd276e 100755
--- a/drivers/misc/bp/chips/mt6229.c
+++ b/drivers/misc/bp/chips/mt6229.c
@@ -128,11 +128,8 @@ static int bp_wake_ap(struct bp_private_data *bp)
 {
 	int result = 0;
 	
-	if(bp->suspend_status)
-	{
-		bp->suspend_status = 0;
-		wake_lock_timeout(&bp->bp_wakelock, 10 * HZ);
-	}
+	bp->suspend_status = 0;
+	wake_lock_timeout(&bp->bp_wakelock, 10 * HZ);
 	
 	return result;
 }
diff --git a/drivers/misc/bp/chips/mtk6250.c b/drivers/misc/bp/chips/mtk6250.c
index 6cee50d51456..c7b0460c24f9 100644
--- a/drivers/misc/bp/chips/mtk6250.c
+++ b/drivers/misc/bp/chips/mtk6250.c
@@ -83,11 +83,8 @@ static int bp_wake_ap(struct bp_private_data *bp)
 {
 	int result = 0;
 	
-	if(bp->suspend_status)
-	{
-		bp->suspend_status = 0;		
-		wake_lock_timeout(&bp->bp_wakelock, 10 * HZ);
-	}
+	bp->suspend_status = 0;		
+	wake_lock_timeout(&bp->bp_wakelock, 10 * HZ);
 	
 	return result;
 }
diff --git a/drivers/misc/bp/chips/mu509.c b/drivers/misc/bp/chips/mu509.c
index fdc667c7c2ef..c7e85fc95cc2 100755
--- a/drivers/misc/bp/chips/mu509.c
+++ b/drivers/misc/bp/chips/mu509.c
@@ -144,11 +144,8 @@ static int bp_wake_ap(struct bp_private_data *bp)
 {
 	int result = 0;
 	
-	if(bp->suspend_status)
-	{
-		bp->suspend_status = 0;
-		wake_lock_timeout(&bp->bp_wakelock, 10 * HZ);
-	}
+	bp->suspend_status = 0;
+	wake_lock_timeout(&bp->bp_wakelock, 10 * HZ);
 	
 	return result;
 }
diff --git a/drivers/misc/bp/chips/mw100.c b/drivers/misc/bp/chips/mw100.c
index 39bf35ad7d44..71cf5b45ef78 100755
--- a/drivers/misc/bp/chips/mw100.c
+++ b/drivers/misc/bp/chips/mw100.c
@@ -96,11 +96,8 @@ static int bp_wake_ap(struct bp_private_data *bp)
 {
 	int result = 0;
 	
-	if(bp->suspend_status)
-	{
-		bp->suspend_status = 0;		
-		wake_lock_timeout(&bp->bp_wakelock, 10 * HZ);
-	}
+	bp->suspend_status = 0;
+	wake_lock_timeout(&bp->bp_wakelock, 10 * HZ);
 	
 	return result;
 }
@@ -159,7 +156,7 @@ static int bp_suspend(struct bp_private_data *bp)
 }
 static int bp_resume(struct bp_private_data *bp)
 {
-	
+
 	bp->suspend_status = 0;	
 	gpio_set_value(bp->ops->ap_wakeup_bp, GPIO_HIGH);	
 	
diff --git a/drivers/misc/bp/chips/sc6610.c b/drivers/misc/bp/chips/sc6610.c
index 4bdcb2eed152..cd67c07ff9fc 100755
--- a/drivers/misc/bp/chips/sc6610.c
+++ b/drivers/misc/bp/chips/sc6610.c
@@ -74,12 +74,9 @@ static int bp_wake_ap(struct bp_private_data *bp)
 {
 	int result = 0;
 	
-	if(bp->suspend_status)
-	{
 		printk("<-----sc6610 bp_wake_ap-------->\n");
 		bp->suspend_status = 0;		
 		wake_lock_timeout(&bp->bp_wakelock, 10 * HZ);
-	}
 	
 	return result;
 }
-- 
2.35.3

