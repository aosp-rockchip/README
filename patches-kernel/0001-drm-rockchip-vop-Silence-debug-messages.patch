From 7492ded5dbb4f512b8ecc63ee11ecf57ae1e0b9d Mon Sep 17 00:00:00 2001
From: Wyon Bi <bivvy.bi@rock-chips.com>
Date: Tue, 18 Sep 2018 08:55:27 +0800
Subject: [PATCH] drm/rockchip: vop: Silence debug messages

[    0.543299] rockchip-vop ff460000.vop: invalid resource
[    0.543346] rockchip-vop ff460000.vop: failed to get vop cabc lut registers
[    0.543686] rockchip-vop ff460000.vop: unable to request PWM
[    0.543717] [drm] no mcu-timing node found in /vop@ff460000
[    0.543762] rockchip-drm display-subsystem: bound ff460000.vop (ops vop_component_ops)

This makes all of these messages dev_dbg. They are still useful to debug,
but we do not need them filling up the kernel logs in normal operation.

Change-Id: I134585323b477c23a8085042602f5df592e619cb
Signed-off-by: Wyon Bi <bivvy.bi@rock-chips.com>
---
 .../gpu/drm/rockchip/rockchip_drm_backlight.c |  2 +-
 drivers/gpu/drm/rockchip/rockchip_drm_vop.c   | 27 +++++++++----------
 2 files changed, 13 insertions(+), 16 deletions(-)

diff --git a/drivers/gpu/drm/rockchip/rockchip_drm_backlight.c b/drivers/gpu/drm/rockchip/rockchip_drm_backlight.c
index bafe6a3de747..2f0a98749683 100644
--- a/drivers/gpu/drm/rockchip/rockchip_drm_backlight.c
+++ b/drivers/gpu/drm/rockchip/rockchip_drm_backlight.c
@@ -250,7 +250,7 @@ int of_rockchip_drm_sub_backlight_register(struct device *dev,
 
 	pwm = devm_pwm_get(dev, NULL);
 	if (IS_ERR(pwm)) {
-		dev_err(dev, "unable to request PWM\n");
+		dev_dbg(dev, "unable to request PWM\n");
 		return PTR_ERR(pwm);
 	}
 
diff --git a/drivers/gpu/drm/rockchip/rockchip_drm_vop.c b/drivers/gpu/drm/rockchip/rockchip_drm_vop.c
index 6558929917b2..aa46167a3cbd 100644
--- a/drivers/gpu/drm/rockchip/rockchip_drm_vop.c
+++ b/drivers/gpu/drm/rockchip/rockchip_drm_vop.c
@@ -4484,34 +4484,31 @@ static int vop_bind(struct device *dev, struct device *master, void *data)
 		return -ENOMEM;
 
 	res = platform_get_resource_byname(pdev, IORESOURCE_MEM, "gamma_lut");
-	vop->lut_regs = devm_ioremap_resource(dev, res);
-	if (IS_ERR(vop->lut_regs)) {
-		dev_warn(vop->dev, "failed to get vop lut registers\n");
-		vop->lut_regs = NULL;
-	}
-	if (vop->lut_regs) {
+	if (res) {
 		vop->lut_len = resource_size(res) / sizeof(*vop->lut);
 		if (vop->lut_len != 256 && vop->lut_len != 1024) {
 			dev_err(vop->dev, "unsupport lut sizes %d\n",
 				vop->lut_len);
 			return -EINVAL;
 		}
-	}
 
-	res = platform_get_resource_byname(pdev, IORESOURCE_MEM, "cabc_lut");
-	vop->cabc_lut_regs = devm_ioremap_resource(dev, res);
-	if (IS_ERR(vop->cabc_lut_regs)) {
-		dev_warn(vop->dev, "failed to get vop cabc lut registers\n");
-		vop->cabc_lut_regs = NULL;
+		vop->lut_regs = devm_ioremap_resource(dev, res);
+		if (IS_ERR(vop->lut_regs))
+			return PTR_ERR(vop->lut_regs);
 	}
 
-	if (vop->cabc_lut_regs) {
+	res = platform_get_resource_byname(pdev, IORESOURCE_MEM, "cabc_lut");
+	if (res) {
 		vop->cabc_lut_len = resource_size(res) >> 2;
 		if (vop->cabc_lut_len != 128) {
 			dev_err(vop->dev, "unsupport cabc lut sizes %d\n",
 				vop->cabc_lut_len);
 			return -EINVAL;
 		}
+
+		vop->cabc_lut_regs = devm_ioremap_resource(dev, res);
+		if (IS_ERR(vop->cabc_lut_regs))
+			return PTR_ERR(vop->cabc_lut_regs);
 	}
 
 	vop->grf = syscon_regmap_lookup_by_phandle(dev->of_node,
@@ -4577,8 +4574,8 @@ static int vop_bind(struct device *dev, struct device *master, void *data)
 
 	mcu = of_get_child_by_name(dev->of_node, "mcu-timing");
 	if (!mcu) {
-		DRM_INFO("no mcu-timing node found in %s\n",
-			 dev->of_node->full_name);
+		dev_dbg(dev, "no mcu-timing node found in %s\n",
+			dev->of_node->full_name);
 	} else {
 		u32 val;
 
-- 
2.35.3

