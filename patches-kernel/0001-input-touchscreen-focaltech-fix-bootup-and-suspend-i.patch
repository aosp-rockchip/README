From 0c18a2d9d1d32c1847674851a9cec22b773cfb1b Mon Sep 17 00:00:00 2001
From: Jason Song <sxj@rock-chips.com>
Date: Mon, 14 Dec 2020 17:44:02 +0800
Subject: [PATCH] input: touchscreen: focaltech: fix bootup and suspend i2c
 transfer error

Lcd and touch use same power, so we must open uboot logo, turn on power
before touch init. When device enter suspend, power will be hold until
touch suspend.

Signed-off-by: Jason Song <sxj@rock-chips.com>
Change-Id: Ifae24073e982bec9d8cd1f1150c2e18c395930e4
---
 .../touchscreen/focaltech_touch/focaltech_config.h    |  4 ++--
 .../touchscreen/focaltech_touch/focaltech_core.c      | 11 +++++------
 2 files changed, 7 insertions(+), 8 deletions(-)

diff --git a/drivers/input/touchscreen/focaltech_touch/focaltech_config.h b/drivers/input/touchscreen/focaltech_touch/focaltech_config.h
index 35f847005f66..18cf1eafaa9a 100644
--- a/drivers/input/touchscreen/focaltech_touch/focaltech_config.h
+++ b/drivers/input/touchscreen/focaltech_touch/focaltech_config.h
@@ -120,7 +120,7 @@
  * show debug log info
  * enable it for debug, disable it for release
  */
-#define FTS_DEBUG_EN                            1
+#define FTS_DEBUG_EN                            0
 
 /*
  * Linux MultiTouch Protocol
@@ -185,7 +185,7 @@
  * enable it when customer need control TP power
  * default: disable
  */
-#define FTS_POWER_SOURCE_CUST_EN                0
+#define FTS_POWER_SOURCE_CUST_EN                1
 
 /****************************************************/
 
diff --git a/drivers/input/touchscreen/focaltech_touch/focaltech_core.c b/drivers/input/touchscreen/focaltech_touch/focaltech_core.c
index 304ec0ed3250..c8318c0ce8c0 100644
--- a/drivers/input/touchscreen/focaltech_touch/focaltech_core.c
+++ b/drivers/input/touchscreen/focaltech_touch/focaltech_core.c
@@ -189,11 +189,10 @@ static int fts_get_ic_information(struct fts_ts_data *ts_data)
             FTS_DEBUG("i2c read invalid, read:0x%02x%02x", chip_id[0], chip_id[1]);
         } else {
             ret = fts_get_chip_types(ts_data, chip_id[0], chip_id[1], VALID);
-            if (!ret)
-                break;
-            else
-                FTS_DEBUG("TP not ready, read:0x%02x%02x", chip_id[0], chip_id[1]);
-        }
+			if (!ret)
+				break;
+			FTS_DEBUG("TP not ready, read:0x%02x%02x", chip_id[0], chip_id[1]);
+		}
 
         cnt++;
         msleep(INTERVAL_READ_REG);
@@ -317,7 +316,7 @@ static int fts_power_source_init(struct fts_ts_data *data)
 
     FTS_FUNC_ENTER();
 
-    data->vdd = regulator_get(&data->client->dev, "vdd");
+	data->vdd = regulator_get(&data->client->dev, "power");
     if (IS_ERR(data->vdd)) {
         ret = PTR_ERR(data->vdd);
         FTS_ERROR("get vdd regulator failed,ret=%d", ret);
-- 
2.35.3

