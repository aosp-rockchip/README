From e9c13d866956e1de3b70ef4f3bdc2aaa2c954f5c Mon Sep 17 00:00:00 2001
From: Sandy Huang <hjc@rock-chips.com>
Date: Tue, 30 Jun 2020 14:48:08 +0800
Subject: [PATCH] drm/rockchip: remove unused logo_y_mirror

all bmp file have been set to no y mirror file.

Change-Id: I6b8b5362ff0f5bb6d2e9930e23987d133749357d
Signed-off-by: Sandy Huang <hjc@rock-chips.com>
---
 drivers/gpu/drm/rockchip/rockchip_drm_drv.c | 23 ---------------------
 drivers/gpu/drm/rockchip/rockchip_drm_drv.h |  1 -
 drivers/gpu/drm/rockchip/rockchip_drm_vop.c | 16 +-------------
 3 files changed, 1 insertion(+), 39 deletions(-)

diff --git a/drivers/gpu/drm/rockchip/rockchip_drm_drv.c b/drivers/gpu/drm/rockchip/rockchip_drm_drv.c
index e723ef9dabca..e962a89d3766 100644
--- a/drivers/gpu/drm/rockchip/rockchip_drm_drv.c
+++ b/drivers/gpu/drm/rockchip/rockchip_drm_drv.c
@@ -80,7 +80,6 @@ struct rockchip_drm_mode_set {
 	int bottom_margin;
 
 	bool mode_changed;
-	bool ymirror;
 	int ratio;
 };
 
@@ -386,9 +385,6 @@ of_parse_display_resource(struct drm_device *drm_dev, struct device_node *route)
 	if (!of_property_read_u32(route, "video,aspect_ratio", &val))
 		set->picture_aspect_ratio = val;
 
-	if (!of_property_read_u32(route, "logo,ymirror", &val))
-		set->ymirror = val;
-
 	if (!of_property_read_u32(route, "overscan,left_margin", &val))
 		set->left_margin = val;
 
@@ -697,7 +693,6 @@ static int update_state(struct drm_device *drm_dev,
 			struct rockchip_drm_mode_set *set,
 			unsigned int *plane_mask)
 {
-	struct rockchip_drm_private *priv = drm_dev->dev_private;
 	struct drm_crtc *crtc = set->crtc;
 	struct drm_connector *connector = set->connector;
 	struct drm_display_mode *mode = set->mode;
@@ -770,18 +765,6 @@ static int update_state(struct drm_device *drm_dev,
 	drm_framebuffer_put(set->fb);
 	ret = drm_atomic_set_crtc_for_plane(primary_state, crtc);
 
-	if (set->ymirror) {
-		/*
-		 * TODO:
-		 * some vop maybe not support ymirror, but force use it now.
-		 */
-		ret = drm_atomic_set_property(state,
-					      &primary_state->plane->base,
-					      priv->logo_ymirror_prop, true);
-		if (ret)
-			DRM_ERROR("Failed to initial logo_ymirror_prop\n");
-	}
-
 	return ret;
 }
 
@@ -1280,12 +1263,6 @@ static int rockchip_drm_create_properties(struct drm_device *dev)
 		return -ENOMEM;
 	private->alpha_scale_prop = prop;
 
-	prop = drm_property_create_range(dev, DRM_MODE_PROP_ATOMIC,
-					 "LOGO_YMIRROR", 0, 1);
-	if (!prop)
-		return -ENOMEM;
-	private->logo_ymirror_prop = prop;
-
 	prop = drm_property_create_range(dev, DRM_MODE_PROP_ATOMIC,
 					 "ASYNC_COMMIT", 0, 1);
 	if (!prop)
diff --git a/drivers/gpu/drm/rockchip/rockchip_drm_drv.h b/drivers/gpu/drm/rockchip/rockchip_drm_drv.h
index d8336fbc5977..6859e59bc8a2 100644
--- a/drivers/gpu/drm/rockchip/rockchip_drm_drv.h
+++ b/drivers/gpu/drm/rockchip/rockchip_drm_drv.h
@@ -143,7 +143,6 @@ struct rockchip_logo {
  */
 struct rockchip_drm_private {
 	struct rockchip_logo *logo;
-	struct drm_property *logo_ymirror_prop;
 	struct drm_property *eotf_prop;
 	struct drm_property *color_space_prop;
 	struct drm_property *global_alpha_prop;
diff --git a/drivers/gpu/drm/rockchip/rockchip_drm_vop.c b/drivers/gpu/drm/rockchip/rockchip_drm_vop.c
index d9ace9bab839..752962a9c32c 100644
--- a/drivers/gpu/drm/rockchip/rockchip_drm_vop.c
+++ b/drivers/gpu/drm/rockchip/rockchip_drm_vop.c
@@ -168,7 +168,6 @@ struct vop_plane_state {
 	struct drm_plane_state base;
 	int format;
 	int zpos;
-	unsigned int logo_ymirror;
 	struct drm_rect src;
 	struct drm_rect dest;
 	dma_addr_t yrgb_mst;
@@ -1617,8 +1616,7 @@ static int vop_plane_atomic_check(struct drm_plane *plane,
 
 	offset = (src->x1 >> 16) * fb->format->bpp[0] / 8;
 	vop_plane_state->offset = offset + fb->offsets[0];
-	if (state->rotation & DRM_MODE_REFLECT_Y ||
-	    (rockchip_fb_is_logo(fb) && vop_plane_state->logo_ymirror))
+	if (state->rotation & DRM_MODE_REFLECT_Y)
 		offset += ((src->y2 >> 16) - 1) * fb->pitches[0];
 	else
 		offset += (src->y1 >> 16) * fb->pitches[0];
@@ -2060,11 +2058,6 @@ static int vop_atomic_plane_set_property(struct drm_plane *plane,
 		plane_state->zpos = val;
 		return 0;
 	}
-	if (property == private->logo_ymirror_prop) {
-		WARN_ON(!rockchip_fb_is_logo(state->fb));
-		plane_state->logo_ymirror = val;
-		return 0;
-	}
 
 	if (property == private->eotf_prop) {
 		plane_state->eotf = val;
@@ -2111,11 +2104,6 @@ static int vop_atomic_plane_get_property(struct drm_plane *plane,
 		return 0;
 	}
 
-	if (property == private->logo_ymirror_prop) {
-		*val = plane_state->logo_ymirror;
-		return 0;
-	}
-
 	if (property == private->eotf_prop) {
 		*val = plane_state->eotf;
 		return 0;
@@ -4019,8 +4007,6 @@ static int vop_plane_init(struct vop *vop, struct vop_win *win,
 	drm_object_attach_property(&win->base.base,
 				   vop->plane_zpos_prop, win->win_id);
 
-	if (VOP_WIN_SUPPORT(vop, win, ymirror))
-		drm_object_attach_property(&win->base.base, private->logo_ymirror_prop, 0);
 	if (win->phy->scl)
 		feature |= BIT(ROCKCHIP_DRM_PLANE_FEATURE_SCALE);
 	if (VOP_WIN_SUPPORT(vop, win, src_alpha_ctl) ||
-- 
2.35.3

