From b66148ef0d46071b8078332c90637ec21aae5c3e Mon Sep 17 00:00:00 2001
From: Tony Xie <tony.xie@rock-chips.com>
Date: Mon, 23 Apr 2018 18:03:48 +0800
Subject: [PATCH] PM / devfreq: rockchip_bus: support soc bus devfreq.

Change-Id: Iba750d4522b99e88c16c8e4a77d3367fbb2a0d82
Signed-off-by: Tony Xie <tony.xie@rock-chips.com>
---
 drivers/devfreq/Kconfig               |  6 ++
 drivers/devfreq/Makefile              |  1 +
 drivers/devfreq/rockchip_bus.c        | 87 +++++++++++++++++++++++++++
 drivers/firmware/rockchip_sip.c       |  8 +++
 include/linux/rockchip/rockchip_sip.h |  6 ++
 5 files changed, 108 insertions(+)
 create mode 100644 drivers/devfreq/rockchip_bus.c

diff --git a/drivers/devfreq/Kconfig b/drivers/devfreq/Kconfig
index 82e6f96e92f3..2967a5c54a47 100644
--- a/drivers/devfreq/Kconfig
+++ b/drivers/devfreq/Kconfig
@@ -98,6 +98,12 @@ config ARM_TEGRA_DEVFREQ
          It reads ACTMON counters of memory controllers and adjusts the
          operating frequencies and voltages with OPP support.
 
+config ARM_ROCKCHIP_BUS_DEVFREQ
+	tristate "ARM ROCKCHIP BUS DEVFREQ Driver"
+	depends on ARCH_ROCKCHIP
+	help
+	  This adds the DEVFREQ driver for the ROCKCHIP BUS.
+
 config ARM_ROCKCHIP_DMC_DEVFREQ
 	tristate "ARM ROCKCHIP DMC DEVFREQ Driver"
 	depends on ARCH_ROCKCHIP
diff --git a/drivers/devfreq/Makefile b/drivers/devfreq/Makefile
index c3f4da8aa6af..3eb135e88348 100644
--- a/drivers/devfreq/Makefile
+++ b/drivers/devfreq/Makefile
@@ -8,6 +8,7 @@ obj-$(CONFIG_DEVFREQ_GOV_USERSPACE)	+= governor_userspace.o
 # DEVFREQ Drivers
 obj-$(CONFIG_ARM_EXYNOS4_BUS_DEVFREQ)	+= exynos/
 obj-$(CONFIG_ARM_EXYNOS5_BUS_DEVFREQ)	+= exynos/
+obj-$(CONFIG_ARM_ROCKCHIP_BUS_DEVFREQ)	+= rockchip_bus.o
 obj-$(CONFIG_ARM_ROCKCHIP_DMC_DEVFREQ)	+= rockchip_dmc.o
 obj-$(CONFIG_ARM_TEGRA_DEVFREQ)		+= tegra-devfreq.o
 
diff --git a/drivers/devfreq/rockchip_bus.c b/drivers/devfreq/rockchip_bus.c
new file mode 100644
index 000000000000..ba3dc426e08b
--- /dev/null
+++ b/drivers/devfreq/rockchip_bus.c
@@ -0,0 +1,87 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Copyright (c) 2018, Fuzhou Rockchip Electronics Co., Ltd.
+ * Author: Tony Xie <tony.xie@rock-chips.com>
+ */
+
+#include <linux/arm-smccc.h>
+#include <linux/delay.h>
+#include <linux/module.h>
+#include <linux/of.h>
+#include <linux/platform_device.h>
+#include <linux/rockchip/rockchip_sip.h>
+#include <linux/slab.h>
+#include <linux/string.h>
+
+static int rockchip_sip_soc_bus_div(u32 bus_id, u32 timer, u32 enable_msk)
+{
+	struct arm_smccc_res res;
+
+	res = sip_smc_soc_bus_div(bus_id, timer, enable_msk);
+
+	return res.a0;
+}
+
+static const struct of_device_id rockchip_busfreq_of_match[] = {
+	{ .compatible = "rockchip,px30-bus", },
+	{ },
+};
+
+MODULE_DEVICE_TABLE(of, rockchip_busfreq_of_match);
+
+static int rockchip_busfreq_probe(struct platform_device *pdev)
+{
+	struct device *dev = &pdev->dev;
+	struct device_node *np = dev->of_node;
+	struct device_node *child;
+	int ret, enable_msk, bus_id, sip_timer;
+
+	for_each_available_child_of_node(np, child) {
+		ret = of_property_read_u32_index(child, "bus-id", 0,
+						 &bus_id);
+		if (ret)
+			continue;
+
+		ret = of_property_read_u32_index(child, "timer-us", 0,
+						 &sip_timer);
+		if (ret) {
+			dev_info(dev, "get timer_us error\n");
+			continue;
+		}
+
+		if (!sip_timer) {
+			dev_info(dev, "timer_us invalid\n");
+			continue;
+		}
+
+		ret = of_property_read_u32_index(child, "enable-msk", 0,
+						 &enable_msk);
+		if (ret) {
+			dev_info(dev, "get enable_msk error\n");
+			continue;
+		}
+
+		ret = rockchip_sip_soc_bus_div(bus_id, sip_timer,
+					       enable_msk);
+		if (ret == -2) {
+			dev_info(dev, "smc sip not support! %x\n", ret);
+			break;
+		}
+	}
+
+	return 0;
+}
+
+static struct platform_driver rockchip_busfreq_driver = {
+	.probe	= rockchip_busfreq_probe,
+	.driver = {
+		.name	= "rockchip,soc_bus",
+		.of_match_table = rockchip_busfreq_of_match,
+	},
+};
+
+module_platform_driver(rockchip_busfreq_driver);
+
+MODULE_LICENSE("GPL v2");
+MODULE_AUTHOR("Tony Xie <tony.xie@rock-chips.com>");
+MODULE_DESCRIPTION("rockchip soc bus driver with devfreq framework");
diff --git a/drivers/firmware/rockchip_sip.c b/drivers/firmware/rockchip_sip.c
index 727a56dc8738..f7c716232fb9 100644
--- a/drivers/firmware/rockchip_sip.c
+++ b/drivers/firmware/rockchip_sip.c
@@ -136,6 +136,14 @@ struct arm_smccc_res sip_smc_vpu_reset(u32 arg0, u32 arg1, u32 arg2)
 }
 EXPORT_SYMBOL_GPL(sip_smc_vpu_reset);
 
+struct arm_smccc_res sip_smc_soc_bus_div(u32 arg0, u32 arg1, u32 arg2)
+{
+	struct arm_smccc_res res;
+
+	res = __invoke_sip_fn_smc(RK_SIP_SOC_BUS_DIV, arg0, arg1, arg2);
+	return res;
+}
+
 /************************** fiq debugger **************************************/
 #ifdef CONFIG_ARM64
 #define SIP_UARTDBG_FN		SIP_UARTDBG_CFG64
diff --git a/include/linux/rockchip/rockchip_sip.h b/include/linux/rockchip/rockchip_sip.h
index 6b6799c7dfb5..121843343539 100644
--- a/include/linux/rockchip/rockchip_sip.h
+++ b/include/linux/rockchip/rockchip_sip.h
@@ -31,6 +31,7 @@
 #define SIP_SIP_VERSION			0x8200000a
 #define SIP_REMOTECTL_CFG		0x8200000b
 #define PSCI_SIP_VPU_RESET		0x8200000c
+#define RK_SIP_SOC_BUS_DIV		0x8200000d
 
 /* Rockchip Sip version */
 #define SIP_IMPLEMENT_V1                (1)
@@ -116,6 +117,7 @@ int sip_smc_remotectl_config(u32 func, u32 data);
 
 int sip_smc_secure_reg_write(u32 addr_phy, u32 val);
 u32 sip_smc_secure_reg_read(u32 addr_phy);
+struct arm_smccc_res sip_smc_soc_bus_div(u32 arg0, u32 arg1, u32 arg2);
 
 /***************************fiq debugger **************************************/
 void sip_fiq_debugger_enable_fiq(bool enable, uint32_t tgt_cpu);
@@ -175,6 +177,10 @@ static inline int sip_smc_virtual_poweroff(void) { return 0; }
 static inline int sip_smc_remotectl_config(u32 func, u32 data) { return 0; }
 static inline u32 sip_smc_secure_reg_read(u32 addr_phy) { return 0; }
 static inline int sip_smc_secure_reg_write(u32 addr_phy, u32 val) { return 0; }
+static inline int sip_smc_soc_bus_div(u32 arg0, u32 arg1, u32 arg2)
+{
+	return 0;
+}
 
 /***************************fiq debugger **************************************/
 static inline void sip_fiq_debugger_enable_fiq
-- 
2.35.3

