From bacee356943f1aaebaaf7b79726af21899940889 Mon Sep 17 00:00:00 2001
From: Liang Chen <cl@rock-chips.com>
Date: Thu, 8 Aug 2019 14:49:53 +0800
Subject: [PATCH] nvmem: rockchip-efuse: clear efuse timing after read

Clear efuse timing after read to avoid efuse misoperation.

Change-Id: I459d01af9c9a84ab6c621e5e5cf3f01213b4f7f9
Signed-off-by: Liang Chen <cl@rock-chips.com>
---
 drivers/nvmem/rockchip-efuse.c | 30 ++++++++++++++++++++++--------
 1 file changed, 22 insertions(+), 8 deletions(-)

diff --git a/drivers/nvmem/rockchip-efuse.c b/drivers/nvmem/rockchip-efuse.c
index 3a59f10dff45..0ee93624843f 100644
--- a/drivers/nvmem/rockchip-efuse.c
+++ b/drivers/nvmem/rockchip-efuse.c
@@ -111,11 +111,6 @@ struct rockchip_efuse_chip {
 
 static void rk1808_efuse_timing_init(void __iomem *base)
 {
-	static bool init;
-
-	if (init)
-		return;
-
 	/* enable auto mode */
 	writel(readl(base + RK1808_MOD) & (~RK1808_USER_MODE),
 	       base + RK1808_MOD);
@@ -131,8 +126,25 @@ static void rk1808_efuse_timing_init(void __iomem *base)
 	writel((T_LOAD_R_S << 16) | T_LOAD_R_L, base + T_LOAD_R);
 	writel((T_ADDR_R_S << 16) | T_ADDR_R_L, base + T_ADDR_R);
 	writel((T_STROBE_R_S << 16) | T_STROBE_R_L, base + T_STROBE_R);
+}
+
+static void rk1808_efuse_timing_deinit(void __iomem *base)
+{
+	/* disable auto mode */
+	writel(readl(base + RK1808_MOD) | RK1808_USER_MODE,
+	       base + RK1808_MOD);
 
-	init = true;
+	/* clear efuse timing */
+	writel(0, base + T_CSB_P);
+	writel(0, base + T_PGENB_P);
+	writel(0, base + T_LOAD_P);
+	writel(0, base + T_ADDR_P);
+	writel(0, base + T_STROBE_P);
+	writel(0, base + T_CSB_R);
+	writel(0, base + T_PGENB_R);
+	writel(0, base + T_LOAD_R);
+	writel(0, base + T_ADDR_R);
+	writel(0, base + T_STROBE_R);
 }
 
 static int rockchip_rk1808_efuse_read(void *context, unsigned int offset,
@@ -157,8 +169,6 @@ static int rockchip_rk1808_efuse_read(void *context, unsigned int offset,
 		return ret;
 	}
 
-	rk1808_efuse_timing_init(efuse->base);
-
 	addr_start = rounddown(offset, RK1808_NBYTES) / RK1808_NBYTES;
 	addr_end = roundup(offset + bytes, RK1808_NBYTES) / RK1808_NBYTES;
 	addr_offset = offset % RK1808_NBYTES;
@@ -170,6 +180,8 @@ static int rockchip_rk1808_efuse_read(void *context, unsigned int offset,
 		goto nomem;
 	}
 
+	rk1808_efuse_timing_init(efuse->base);
+
 	while (addr_len--) {
 		writel(RK1808_AUTO_RD | RK1808_AUTO_ENB |
 		       ((addr_start++ & RK1808_A_MASK) << RK1808_A_SHIFT),
@@ -188,8 +200,10 @@ static int rockchip_rk1808_efuse_read(void *context, unsigned int offset,
 	}
 	memcpy(val, buf + addr_offset, bytes);
 err:
+	rk1808_efuse_timing_deinit(efuse->base);
 	kfree(buf);
 nomem:
+	rk1808_efuse_timing_deinit(efuse->base);
 	clk_disable_unprepare(efuse->clk);
 	clk_disable_unprepare(efuse->sclk);
 
-- 
2.35.3

