From 0b86943d0ed30018161959bed79c23c581b926c9 Mon Sep 17 00:00:00 2001
From: Algea Cao <algea.cao@rock-chips.com>
Date: Tue, 6 Feb 2018 09:19:33 +0800
Subject: [PATCH] mfd: rk1000: Support rk1000 uboot logo

Reading rk1000's register to see whether uboot logo was on.

Change-Id: Iee6d15213f16ccd59136a5cf4f4017f5cd40ab62
Signed-off-by: Algea Cao <algea.cao@rock-chips.com>
---
 drivers/mfd/rk1000-core.c | 34 +++++++++++++++-------------------
 1 file changed, 15 insertions(+), 19 deletions(-)

diff --git a/drivers/mfd/rk1000-core.c b/drivers/mfd/rk1000-core.c
index c003ab05a773..d35a040dc7d8 100644
--- a/drivers/mfd/rk1000-core.c
+++ b/drivers/mfd/rk1000-core.c
@@ -36,8 +36,6 @@ struct rk1000 {
 	struct clk *mclk;
 };
 
-static int cvbsmode = -1;
-
 static const struct mfd_cell rk1000_devs[] = {
 	{
 		.name = "rk1000-tve",
@@ -60,23 +58,11 @@ struct regmap_config rk1000_regmap_config = {
 	.volatile_table = &rk1000_ctl_reg_table,
 };
 
-static int __init bootloader_cvbs_setup(char *str)
-{
-	int ret = 0;
-
-	if (str)
-		ret = kstrtoint(str, 0, &cvbsmode);
-
-	return ret;
-}
-
-early_param("tve.format", bootloader_cvbs_setup);
-
 static int rk1000_probe(struct i2c_client *client,
 			const struct i2c_device_id *id)
 {
-	struct device_node *rk1000_np;
-	int ret;
+	bool uboot_logo;
+	int ret, val = 0;
 	struct rk1000 *rk1000 = devm_kzalloc(&client->dev, sizeof(*rk1000),
 					     GFP_KERNEL);
 	if (!rk1000)
@@ -84,13 +70,23 @@ static int rk1000_probe(struct i2c_client *client,
 
 	rk1000->client = client;
 	rk1000->dev = &client->dev;
-	rk1000_np = rk1000->dev->of_node;
 
 	rk1000->regmap = devm_regmap_init_i2c(client, &rk1000_regmap_config);
 	if (IS_ERR(rk1000->regmap))
 		return PTR_ERR(rk1000->regmap);
 
-	if (cvbsmode < 0) {
+	ret = regmap_read(rk1000->regmap, CTRL_TVE, &val);
+
+	/*
+	 * If rk1000's registers can be read and rk1000 cvbs output is
+	 * enabled, we think uboot logo is on.
+	 */
+	if (!ret && val & BIT(6))
+		uboot_logo = true;
+	else
+		uboot_logo = false;
+
+	if (!uboot_logo) {
 		/********Get reset pin***********/
 		rk1000->io_reset = devm_gpiod_get_optional(rk1000->dev, "reset",
 							   GPIOD_OUT_LOW);
@@ -121,7 +117,7 @@ static int rk1000_probe(struct i2c_client *client,
 	regmap_write(rk1000->regmap, CTRL_ADC, ADC_OFF);
 	regmap_write(rk1000->regmap, CTRL_CODEC, CODEC_OFF);
 	regmap_write(rk1000->regmap, CTRL_I2C, I2C_TIMEOUT_PERIOD);
-	if (cvbsmode < 0)
+	if (!uboot_logo)
 		regmap_write(rk1000->regmap, CTRL_TVE, TVE_OFF);
 
 	ret = mfd_add_devices(rk1000->dev, -1, rk1000_devs,
-- 
2.35.3

