From 525eeb8fe47a2b7be0adec72726ea780a396ae05 Mon Sep 17 00:00:00 2001
From: Wyon Bi <bivvy.bi@rock-chips.com>
Date: Wed, 18 Oct 2017 09:15:08 +0800
Subject: [PATCH] phy: rockchip: mipi-dphy: add support for rk3128

Change-Id: I29578e117d187add559890871af5fcf1c537a460
Signed-off-by: Wyon Bi <bivvy.bi@rock-chips.com>
---
 .../bindings/phy/phy-rockchip-inno-mipi-dphy.txt |  7 +++++--
 .../phy/rockchip/phy-rockchip-inno-mipi-dphy.c   | 16 ++++++++++++++++
 2 files changed, 21 insertions(+), 2 deletions(-)

diff --git a/Documentation/devicetree/bindings/phy/phy-rockchip-inno-mipi-dphy.txt b/Documentation/devicetree/bindings/phy/phy-rockchip-inno-mipi-dphy.txt
index b33e59780f99..6e2cfdaf4b7b 100644
--- a/Documentation/devicetree/bindings/phy/phy-rockchip-inno-mipi-dphy.txt
+++ b/Documentation/devicetree/bindings/phy/phy-rockchip-inno-mipi-dphy.txt
@@ -2,6 +2,7 @@ ROCKCHIP MIPI DPHY WITH INNO IP BLOCK
 
 Required properties:
  - compatible : must be one of:
+	"rockchip,rk3128-mipi-dphy";
 	"rockchip,rk3366-mipi-dphy";
 	"rockchip,rk3368-mipi-dphy";
  - reg : the address offset of register for mipi-dphy configuration.
@@ -14,11 +15,13 @@ Required properties:
  - clock-output-names: from common clock binding.
 	See ../clocks/clock-bindings.txt for details.
  - #clock-cells : from common clock binding; shall be set to 0.
-
-Optional properties
  - resets : phandle to the reset of MIPI DSI PHY APB clock.
  - reset-names : should be "apb".
 
+Optional properties
+ - clocks: phandle to the h2p clock.
+ - clock-names: should be "h2p".
+
 Example:
 
 For Rockchip RK3368
diff --git a/drivers/phy/rockchip/phy-rockchip-inno-mipi-dphy.c b/drivers/phy/rockchip/phy-rockchip-inno-mipi-dphy.c
index 7bac62a5e3d0..008170eba974 100644
--- a/drivers/phy/rockchip/phy-rockchip-inno-mipi-dphy.c
+++ b/drivers/phy/rockchip/phy-rockchip-inno-mipi-dphy.c
@@ -148,6 +148,7 @@ struct inno_mipi_dphy_timing {
 struct inno_mipi_dphy {
 	struct device *dev;
 	struct clk *ref_clk;
+	struct clk *h2p_clk;
 	struct regmap *regmap;
 	struct reset_control *rst;
 
@@ -470,6 +471,7 @@ static int inno_mipi_dphy_power_on(struct phy *phy)
 {
 	struct inno_mipi_dphy *inno = phy_get_drvdata(phy);
 
+	clk_prepare_enable(inno->h2p_clk);
 	pm_runtime_get_sync(inno->dev);
 	inno_mipi_dphy_pll_enable(inno);
 	inno_mipi_dphy_lane_enable(inno);
@@ -487,6 +489,7 @@ static int inno_mipi_dphy_power_off(struct phy *phy)
 	inno_mipi_dphy_lane_disable(inno);
 	inno_mipi_dphy_pll_disable(inno);
 	pm_runtime_put(inno->dev);
+	clk_disable_unprepare(inno->h2p_clk);
 
 	return 0;
 }
@@ -640,6 +643,18 @@ static int inno_mipi_dphy_probe(struct platform_device *pdev)
 		return PTR_ERR(inno->ref_clk);
 	}
 
+	/* Check if h2p_clk provided */
+	inno->h2p_clk = devm_clk_get(dev, "h2p");
+	if (IS_ERR(inno->h2p_clk)) {
+		if (PTR_ERR(inno->h2p_clk) != -ENOENT) {
+			dev_err(dev, "failed to get h2p clock\n");
+			return PTR_ERR(inno->h2p_clk);
+		}
+
+		/* Otherwise mark the h2p_clk pointer to NULL */
+		inno->h2p_clk = NULL;
+	}
+
 	inno->rst = devm_reset_control_get(dev, "apb");
 	if (IS_ERR(inno->rst)) {
 		dev_err(dev, "failed to get system reset control\n");
@@ -685,6 +700,7 @@ static int inno_mipi_dphy_remove(struct platform_device *pdev)
 }
 
 static const struct of_device_id inno_mipi_dphy_of_match[] = {
+	{ .compatible = "rockchip,rk3128-mipi-dphy", },
 	{ .compatible = "rockchip,rk3366-mipi-dphy", },
 	{ .compatible = "rockchip,rk3368-mipi-dphy", },
 	{ /* Sentinel */ }
-- 
2.35.3

