From d4d8a3a78926d891d15c35a001f56844dc0142ac Mon Sep 17 00:00:00 2001
From: Zheng Yang <zhengyang@rock-chips.com>
Date: Thu, 14 Sep 2017 15:36:54 +0800
Subject: [PATCH] drm/rockchip: hdmi: support set eotf and colorimetry

HDMI will set vop eotf and color space according to display mode.

Change-Id: I469d03dd1f14a2bcd75ed5c8e3227cd1d34eb354
Signed-off-by: Zheng Yang <zhengyang@rock-chips.com>
---
 drivers/gpu/drm/rockchip/dw_hdmi-rockchip.c | 55 ++++++++++++++++++++-
 1 file changed, 53 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/rockchip/dw_hdmi-rockchip.c b/drivers/gpu/drm/rockchip/dw_hdmi-rockchip.c
index 6827ea7185c1..d72e695cf58c 100644
--- a/drivers/gpu/drm/rockchip/dw_hdmi-rockchip.c
+++ b/drivers/gpu/drm/rockchip/dw_hdmi-rockchip.c
@@ -24,6 +24,8 @@
 #include <drm/drm_encoder_slave.h>
 #include <drm/bridge/dw_hdmi.h>
 
+#include <uapi/linux/videodev2.h>
+
 #include "rockchip_drm_drv.h"
 #include "rockchip_drm_vop.h"
 
@@ -89,6 +91,7 @@ struct rockchip_hdmi {
 
 	unsigned long bus_format;
 	unsigned long output_bus_format;
+	unsigned long enc_out_encoding;
 
 	struct drm_property *color_depth_property;
 	struct drm_property *hdmi_output_property;
@@ -619,10 +622,14 @@ dw_hdmi_rockchip_select_output(struct drm_connector_state *conn_state,
 			       struct drm_crtc_state *crtc_state,
 			       struct rockchip_hdmi *hdmi,
 			       unsigned int *color_format,
-			       unsigned int *color_depth)
+			       unsigned int *color_depth,
+			       unsigned long *enc_out_encoding,
+			       unsigned int *eotf)
 {
 	struct drm_display_info *info = &conn_state->connector->display_info;
 	struct drm_display_mode *mode = &crtc_state->mode;
+	struct hdr_static_metadata *hdr_metadata;
+	u32 vic = drm_match_cea_mode(mode);
 
 	*color_format = DRM_HDMI_OUTPUT_DEFAULT_RGB;
 
@@ -672,6 +679,30 @@ dw_hdmi_rockchip_select_output(struct drm_connector_state *conn_state,
 	*color_depth = dw_hdmi_rockchip_check_depth(info, mode,
 						    *color_format,
 						    hdmi->colordepth);
+	*eotf = TRADITIONAL_GAMMA_SDR;
+	if (conn_state->hdr_source_metadata_blob_ptr) {
+		hdr_metadata = (struct hdr_static_metadata *)
+			conn_state->hdr_source_metadata_blob_ptr->data;
+		if (hdr_metadata->eotf > TRADITIONAL_GAMMA_HDR &&
+		    hdr_metadata->eotf < FUTURE_EOTF)
+			*eotf = hdr_metadata->eotf;
+	}
+
+	if (*eotf > TRADITIONAL_GAMMA_HDR &&
+	    info->hdmi.hdr_panel_metadata.eotf & BIT(*eotf))
+		*enc_out_encoding = V4L2_YCBCR_ENC_BT2020;
+	else if ((vic == 6) || (vic == 7) || (vic == 21) || (vic == 22) ||
+		   (vic == 2) || (vic == 3) || (vic == 17) || (vic == 18))
+		*enc_out_encoding = V4L2_YCBCR_ENC_601;
+	else
+		*enc_out_encoding = V4L2_YCBCR_ENC_709;
+
+	if (*enc_out_encoding == V4L2_YCBCR_ENC_BT2020) {
+		/* According to ITU.BT2020, color depth is at lest 10bit */
+		*color_depth = 10;
+		if (info->color_formats & DRM_COLOR_FORMAT_YCRCB422)
+			*color_format = DRM_HDMI_OUTPUT_YCBCR422;
+	}
 }
 
 static int
@@ -684,7 +715,8 @@ dw_hdmi_rockchip_encoder_atomic_check(struct drm_encoder *encoder,
 	unsigned int colordepth, colorformat;
 
 	dw_hdmi_rockchip_select_output(conn_state, crtc_state, hdmi,
-				       &colorformat, &colordepth);
+				       &colorformat, &colordepth,
+				       &hdmi->enc_out_encoding, &s->eotf);
 
 	if (colorformat == DRM_HDMI_OUTPUT_YCBCR420) {
 		s->output_mode = ROCKCHIP_OUT_MODE_YUV420;
@@ -728,6 +760,15 @@ dw_hdmi_rockchip_encoder_atomic_check(struct drm_encoder *encoder,
 		hdmi->output_bus_format = s->bus_format;
 	}
 
+	if (hdmi->enc_out_encoding == V4L2_YCBCR_ENC_BT2020)
+		s->color_space = V4L2_COLORSPACE_BT2020;
+	else if (colorformat == DRM_HDMI_OUTPUT_DEFAULT_RGB)
+		s->color_space = V4L2_COLORSPACE_DEFAULT;
+	else if (hdmi->enc_out_encoding == V4L2_YCBCR_ENC_709)
+		s->color_space = V4L2_COLORSPACE_REC709;
+	else
+		s->color_space = V4L2_COLORSPACE_SMPTE170M;
+
 	return 0;
 }
 
@@ -747,6 +788,14 @@ dw_hdmi_rockchip_get_output_bus_format(void *data)
 	return hdmi->output_bus_format;
 }
 
+static unsigned long
+dw_hdmi_rockchip_get_enc_out_encoding(void *data)
+{
+	struct rockchip_hdmi *hdmi = (struct rockchip_hdmi *)data;
+
+	return hdmi->enc_out_encoding;
+}
+
 static const struct drm_prop_enum_list color_depth_enum_list[] = {
 	{ 0, "Automatic" }, /* Prefer highest color depth */
 	{ 8, "24bit" },
@@ -1072,6 +1121,8 @@ static int dw_hdmi_rockchip_bind(struct device *dev, struct device *master,
 		dw_hdmi_rockchip_get_input_bus_format;
 	plat_data->get_output_bus_format =
 		dw_hdmi_rockchip_get_output_bus_format;
+	plat_data->get_enc_out_encoding =
+		dw_hdmi_rockchip_get_enc_out_encoding;
 	plat_data->property_ops = &dw_hdmi_rockchip_property_ops;
 
 	if (hdmi->dev_type == RK3328_HDMI || hdmi->dev_type == RK3228_HDMI) {
-- 
2.35.3

