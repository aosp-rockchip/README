From 19bdaeace0f028f91346307633e16860153a575e Mon Sep 17 00:00:00 2001
From: Tao Huang <huangtao@rock-chips.com>
Date: Tue, 9 Jun 2020 14:10:42 +0800
Subject: [PATCH] clk: rockchip: rk618: Initialize in stack clk_init_data to 0

This allows adding fields to clk_init_data without having to explicitly
set those fields in all the drivers.

Fixes: 2071154513ec ("ANDROID: GKI: clk: Initialize in stack clk_init_data to 0 in all drivers")
Change-Id: Ibc59e5fa1e6a9b7aff8612b7501e8f0644cd96ca
Signed-off-by: Tao Huang <huangtao@rock-chips.com>
---
 drivers/clk/rockchip/rk618/clk-regmap-composite.c | 2 +-
 drivers/clk/rockchip/rk618/clk-regmap-divider.c   | 2 +-
 drivers/clk/rockchip/rk618/clk-regmap-gate.c      | 2 +-
 drivers/clk/rockchip/rk618/clk-regmap-mux.c       | 2 +-
 drivers/clk/rockchip/rk618/clk-regmap-pll.c       | 2 +-
 5 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/clk/rockchip/rk618/clk-regmap-composite.c b/drivers/clk/rockchip/rk618/clk-regmap-composite.c
index 6b1b1025e7ec..781b85cf5f59 100644
--- a/drivers/clk/rockchip/rk618/clk-regmap-composite.c
+++ b/drivers/clk/rockchip/rk618/clk-regmap-composite.c
@@ -217,7 +217,7 @@ devm_clk_regmap_register_composite(struct device *dev, const char *name,
 	const struct clk_ops *mux_ops = NULL, *div_ops = NULL, *gate_ops = NULL;
 	struct clk_hw *mux_hw = NULL, *div_hw = NULL, *gate_hw = NULL;
 	struct clk *clk;
-	struct clk_init_data init;
+	struct clk_init_data init = {};
 	struct clk_regmap_composite *composite;
 	struct clk_ops *clk_composite_ops;
 
diff --git a/drivers/clk/rockchip/rk618/clk-regmap-divider.c b/drivers/clk/rockchip/rk618/clk-regmap-divider.c
index 44d77e19aa47..cb59a3d9acd2 100644
--- a/drivers/clk/rockchip/rk618/clk-regmap-divider.c
+++ b/drivers/clk/rockchip/rk618/clk-regmap-divider.c
@@ -80,7 +80,7 @@ devm_clk_regmap_register_divider(struct device *dev, const char *name,
 				 unsigned long flags)
 {
 	struct clk_regmap_divider *divider;
-	struct clk_init_data init;
+	struct clk_init_data init = {};
 
 	divider = devm_kzalloc(dev, sizeof(*divider), GFP_KERNEL);
 	if (!divider)
diff --git a/drivers/clk/rockchip/rk618/clk-regmap-gate.c b/drivers/clk/rockchip/rk618/clk-regmap-gate.c
index 6258a7e18691..36549b912fa2 100644
--- a/drivers/clk/rockchip/rk618/clk-regmap-gate.c
+++ b/drivers/clk/rockchip/rk618/clk-regmap-gate.c
@@ -59,7 +59,7 @@ devm_clk_regmap_register_gate(struct device *dev, const char *name,
 			      unsigned long flags)
 {
 	struct clk_regmap_gate *gate;
-	struct clk_init_data init;
+	struct clk_init_data init = {};
 
 	gate = devm_kzalloc(dev, sizeof(*gate), GFP_KERNEL);
 	if (!gate)
diff --git a/drivers/clk/rockchip/rk618/clk-regmap-mux.c b/drivers/clk/rockchip/rk618/clk-regmap-mux.c
index 760ac07fd4bb..49d58b9c53ab 100644
--- a/drivers/clk/rockchip/rk618/clk-regmap-mux.c
+++ b/drivers/clk/rockchip/rk618/clk-regmap-mux.c
@@ -55,7 +55,7 @@ devm_clk_regmap_register_mux(struct device *dev, const char *name,
 			     unsigned long flags)
 {
 	struct clk_regmap_mux *mux;
-	struct clk_init_data init;
+	struct clk_init_data init = {};
 
 	mux = devm_kzalloc(dev, sizeof(*mux), GFP_KERNEL);
 	if (!mux)
diff --git a/drivers/clk/rockchip/rk618/clk-regmap-pll.c b/drivers/clk/rockchip/rk618/clk-regmap-pll.c
index 664d9e337219..a24f4e994a1b 100644
--- a/drivers/clk/rockchip/rk618/clk-regmap-pll.c
+++ b/drivers/clk/rockchip/rk618/clk-regmap-pll.c
@@ -343,7 +343,7 @@ devm_clk_regmap_register_pll(struct device *dev, const char *name,
 			     unsigned long flags)
 {
 	struct clk_regmap_pll *pll;
-	struct clk_init_data init;
+	struct clk_init_data init = {};
 
 	pll = devm_kzalloc(dev, sizeof(*pll), GFP_KERNEL);
 	if (!pll)
-- 
2.35.3

