From 955e0696def78ab517d03a0f8a0197cbfe6fcf60 Mon Sep 17 00:00:00 2001
From: ShenZhengyi <szy@rock-chips.com>
Date: Thu, 18 Jun 2015 17:01:22 +0800
Subject: [PATCH] tve:rk1000: Fix code style

Signed-off-by: ShenZhengyi <szy@rock-chips.com>
Signed-off-by: Zheng Yang <zhengyang@rock-chips.com>
---
 .../video/rockchip/tve/rk1000/rk1000_tve.c    | 22 +++++++++-------
 .../rockchip/tve/rk1000/rk1000_tve_cvbs.c     | 26 ++++++++-----------
 2 files changed, 23 insertions(+), 25 deletions(-)

diff --git a/drivers/video/rockchip/tve/rk1000/rk1000_tve.c b/drivers/video/rockchip/tve/rk1000/rk1000_tve.c
index 169c83dd4348..ea0e0af0bba3 100755
--- a/drivers/video/rockchip/tve/rk1000/rk1000_tve.c
+++ b/drivers/video/rockchip/tve/rk1000/rk1000_tve.c
@@ -54,12 +54,14 @@ int rk1000_control_write_block(u8 reg, u8 *buf, u8 len)
 	return ret;
 }
 
-static int __init bootloader_rk1000_setup(char *str){	
-	static int ret;	
-	if (str) {		
-		printk("cvbs init tve.format is %s\n", str);		
-		ret = sscanf(str, "%d", &cvbsformat);	
-	}	
+static int __init bootloader_rk1000_setup(char *str)
+{
+	static int ret;
+
+	if (str) {
+		pr_info("cvbs init tve.format is %s\n", str);
+		ret = sscanf(str, "%d", &cvbsformat);
+	}
 	return 0;
 }
 early_param("tve.format", bootloader_rk1000_setup);
@@ -201,7 +203,7 @@ static int rk1000_tve_initial(void)
 	screen.mode.vsync_len = 6;
 	rk_fb_switch_screen(&screen, 2 , rk1000_tve.video_source);
 	/* Power down RK1000 output DAC. */
-	if(cvbsformat <0)
+	if (cvbsformat < 0)
 		return rk1000_i2c_send(I2C_ADDR_TVE, 0x03, 0x07);
 	else
 		return 0;
@@ -310,9 +312,9 @@ static int rk1000_tve_probe(struct i2c_client *client,
 	pr_err("video src is lcdc%d, prop is %d\n", rk1000_tve.video_source,
 	       rk1000_tve.property);
 #endif
-	if (cvbsformat >= 0)		
-		rk1000_tve.mode = cvbsformat + 1;	
-	else		
+	if (cvbsformat >= 0)
+		rk1000_tve.mode = cvbsformat + 1;
+	else
 		rk1000_tve.mode = RK1000_TVOUT_DEAULT;
 
 	rc = rk1000_tve_initial();
diff --git a/drivers/video/rockchip/tve/rk1000/rk1000_tve_cvbs.c b/drivers/video/rockchip/tve/rk1000/rk1000_tve_cvbs.c
index af16805aa3f1..4804d9ea0b7e 100755
--- a/drivers/video/rockchip/tve/rk1000/rk1000_tve_cvbs.c
+++ b/drivers/video/rockchip/tve/rk1000/rk1000_tve_cvbs.c
@@ -21,10 +21,9 @@ int rk1000_tv_ntsc_init(void)
 	int i;
 	int ret;
 
-	if(cvbsformat>=0){
+	if (cvbsformat >= 0)
 		return 0;
-	}
-	
+
 	for (i = 0; i < sizeof(tv_encoder_regs); i++) {
 		ret = rk1000_tv_write_block(i, tv_encoder_regs + i, 1);
 		if (ret < 0) {
@@ -53,10 +52,9 @@ int rk1000_tv_pal_init(void)
 	int i;
 	int ret;
 
-	if(cvbsformat>=0){
+	if (cvbsformat >= 0)
 		return 0;
-	}
-	
+
 	for (i = 0; i < sizeof(tv_encoder_regs); i++) {
 		ret = rk1000_tv_write_block(i, tv_encoder_regs+i, 1);
 		if (ret < 0) {
@@ -89,12 +87,11 @@ static int rk1000_cvbs_set_enable(struct rk_display_device *device, int enable)
 			cvbs_monspecs.enable = 0;
 			rk1000_tv_standby(RK1000_TVOUT_CVBS);
 		} else if (enable == 1) {
-
-		  if(cvbsformat>=0){
-		  		rk1000_switch_fb(cvbs_monspecs.mode,
-					 cvbs_monspecs.mode_set);
-				cvbsformat=-1;
-		  	}else{	
+			if (cvbsformat >= 0) {
+				rk1000_switch_fb(cvbs_monspecs.mode,
+						 cvbs_monspecs.mode_set);
+				cvbsformat = -1;
+			} else{
 				val = 0x07;
 				rk1000_tv_write_block(0x03, &val, 1);
 				rk1000_switch_fb(cvbs_monspecs.mode,
@@ -103,7 +100,7 @@ static int rk1000_cvbs_set_enable(struct rk_display_device *device, int enable)
 					msleep(600);
 				val = 0x03;
 				rk1000_tv_write_block(0x03, &val, 1);
-		  	}		
+			}
 			cvbs_monspecs.enable = 1;
 			changeflag = 0;
 		}
@@ -204,8 +201,7 @@ int rk1000_register_display_cvbs(struct device *parent)
 	cvbs_monspecs.ddev = rk_display_device_register(&display_rk1000_cvbs,
 							parent, NULL);
 	rk1000_tve.cvbs = &cvbs_monspecs;
-	if (rk1000_tve.mode < TVOUT_YPBPR_720X480P_60){
+	if (rk1000_tve.mode < TVOUT_YPBPR_720X480P_60)
 		rk_display_device_enable(cvbs_monspecs.ddev);
-	}
 	return 0;
 }
-- 
2.35.3

