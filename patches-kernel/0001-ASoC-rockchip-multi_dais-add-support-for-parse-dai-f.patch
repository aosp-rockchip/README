From 738f93c0ab18a26b54f4ec6648d9513b86cfc04c Mon Sep 17 00:00:00 2001
From: Sugar Zhang <sugar.zhang@rock-chips.com>
Date: Sat, 2 Jun 2018 14:17:52 +0800
Subject: [PATCH] ASoC: rockchip: multi_dais: add support for parse dai format

Change-Id: Ib877400965bbe07de527a0ac95cc8193c61dbd87
Signed-off-by: Sugar Zhang <sugar.zhang@rock-chips.com>
---
 sound/soc/rockchip/rockchip_multi_dais.c | 93 +++++++++++++++++++++++-
 sound/soc/rockchip/rockchip_multi_dais.h |  2 +
 2 files changed, 93 insertions(+), 2 deletions(-)

diff --git a/sound/soc/rockchip/rockchip_multi_dais.c b/sound/soc/rockchip/rockchip_multi_dais.c
index f0de141ad3a4..028e29333a6b 100644
--- a/sound/soc/rockchip/rockchip_multi_dais.c
+++ b/sound/soc/rockchip/rockchip_multi_dais.c
@@ -15,7 +15,11 @@
 
 #include "rockchip_multi_dais.h"
 
-#define DAIS_DRV_NAME "rockchip-mdais"
+#define BITCLOCK_INV_STR	"bitclock-inversion"
+#define FRAME_INV_STR		"frame-inversion"
+#define BITCLOCK_MASTER_STR	"bitclock-master"
+#define FRAME_MASTER_STR	"frame-master"
+#define DAIS_DRV_NAME		"rockchip-mdais"
 
 static inline struct rk_mdais_dev *to_info(struct snd_soc_dai *dai)
 {
@@ -111,11 +115,17 @@ static int rockchip_mdais_set_fmt(struct snd_soc_dai *cpu_dai,
 {
 	struct rk_mdais_dev *mdais = to_info(cpu_dai);
 	struct snd_soc_dai *child;
+	unsigned int dai_fmt;
 	int ret, i = 0;
 
 	for (i = 0; i < mdais->num_dais; i++) {
 		child = mdais->dais[i].dai;
-		ret = snd_soc_dai_set_fmt(child, fmt);
+		dai_fmt = fmt;
+		if (mdais->dais[i].fmt_msk) {
+			dai_fmt &= ~(mdais->dais[i].fmt_msk);
+			dai_fmt |= mdais->dais[i].fmt;
+		}
+		ret = snd_soc_dai_set_fmt(child, dai_fmt);
 		if (ret && ret != -ENOTSUPP)
 			return ret;
 	}
@@ -226,6 +236,83 @@ static int mdais_runtime_resume(struct device *dev)
 	return 0;
 }
 
+static int mdais_read_prop_array(struct device_node *node,
+				 const char *propname,
+				 unsigned int *array, int num)
+{
+	int ret = 0;
+
+	memset(array, 0, sizeof(*array) * num);
+	if (of_property_read_bool(node, propname)) {
+		ret = of_property_read_u32_array(node, propname, array, num);
+		if (ret)
+			ret = -EINVAL;
+	} else {
+		ret = -EINVAL;
+	}
+
+	return ret;
+}
+
+static void mdais_parse_daifmt(struct device_node *node, struct rk_dai *dais,
+			       int num_dai)
+{
+	unsigned int cinv[MAX_DAIS], finv[MAX_DAIS];
+	unsigned int cmst[MAX_DAIS], fmst[MAX_DAIS];
+	unsigned int format = 0, format_mask = 0;
+	int i = 0, ret = 0;
+
+	ret = mdais_read_prop_array(node, BITCLOCK_INV_STR, cinv, num_dai);
+	if (!ret)
+		format_mask |= SND_SOC_DAIFMT_INV_MASK;
+	ret = mdais_read_prop_array(node, FRAME_INV_STR, finv, num_dai);
+	if (!ret)
+		format_mask |= SND_SOC_DAIFMT_INV_MASK;
+	ret = mdais_read_prop_array(node, BITCLOCK_MASTER_STR, cmst, num_dai);
+	if (!ret)
+		format_mask |= SND_SOC_DAIFMT_MASTER_MASK;
+	ret = mdais_read_prop_array(node, FRAME_MASTER_STR, fmst, num_dai);
+	if (!ret)
+		format_mask |= SND_SOC_DAIFMT_MASTER_MASK;
+
+	for (i = 0; i < num_dai; i++) {
+		format = 0;
+
+		switch ((cinv[i] << 4) + finv[i]) {
+		case 0x11:
+			format |= SND_SOC_DAIFMT_IB_IF;
+			break;
+		case 0x10:
+			format |= SND_SOC_DAIFMT_IB_NF;
+			break;
+		case 0x01:
+			format |= SND_SOC_DAIFMT_NB_IF;
+			break;
+		default:
+			/* SND_SOC_DAIFMT_NB_NF is default */
+			break;
+		}
+
+		switch ((cmst[i] << 4) + fmst[i]) {
+		case 0x11:
+			format |= SND_SOC_DAIFMT_CBM_CFM;
+			break;
+		case 0x10:
+			format |= SND_SOC_DAIFMT_CBM_CFS;
+			break;
+		case 0x01:
+			format |= SND_SOC_DAIFMT_CBS_CFM;
+			break;
+		default:
+			format |= SND_SOC_DAIFMT_CBS_CFS;
+			break;
+		}
+
+		dais[i].fmt = format;
+		dais[i].fmt_msk = format_mask;
+	}
+}
+
 static int rockchip_mdais_probe(struct platform_device *pdev)
 {
 	struct device_node *np = pdev->dev.of_node;
@@ -291,6 +378,8 @@ static int rockchip_mdais_probe(struct platform_device *pdev)
 			return -EPROBE_DEFER;
 	}
 
+	mdais_parse_daifmt(np, dais, count);
+
 	mdais->dais = dais;
 	mdais->dev = &pdev->dev;
 	dev_set_drvdata(&pdev->dev, mdais);
diff --git a/sound/soc/rockchip/rockchip_multi_dais.h b/sound/soc/rockchip/rockchip_multi_dais.h
index 4074b1a36a41..5d9a076afb78 100644
--- a/sound/soc/rockchip/rockchip_multi_dais.h
+++ b/sound/soc/rockchip/rockchip_multi_dais.h
@@ -15,6 +15,8 @@ struct rk_dai {
 	struct device *dev;
 	struct device_node *of_node;
 	struct snd_soc_dai *dai;
+	unsigned int fmt;
+	unsigned int fmt_msk;
 };
 
 struct rk_mdais_dev {
-- 
2.35.3

