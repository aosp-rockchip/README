From 74a83a1195b7c662d0daaa6426c3e063b8ada5f0 Mon Sep 17 00:00:00 2001
From: Cai YiWei <cyw@rock-chips.com>
Date: Mon, 25 Feb 2019 14:49:19 +0800
Subject: [PATCH] media: rockchip: isp1: raw patch with default sensor fmt&size

Change-Id: I057ee38a9369e8e3f26e5899113f9f88585b1e7a
Signed-off-by: Cai YiWei <cyw@rock-chips.com>
---
 .../media/platform/rockchip/isp1/capture.c    | 22 +++++----
 drivers/media/platform/rockchip/isp1/dev.c    | 10 ++++
 drivers/media/platform/rockchip/isp1/rkisp1.c | 48 +++++++++++++++++++
 drivers/media/platform/rockchip/isp1/rkisp1.h |  2 +
 4 files changed, 73 insertions(+), 9 deletions(-)

diff --git a/drivers/media/platform/rockchip/isp1/capture.c b/drivers/media/platform/rockchip/isp1/capture.c
index 75e220f4ae87..8fd81fc6c6d9 100644
--- a/drivers/media/platform/rockchip/isp1/capture.c
+++ b/drivers/media/platform/rockchip/isp1/capture.c
@@ -916,6 +916,7 @@ static int raw_config_mi(struct rkisp1_stream *stream)
 	struct rkisp1_device *dev = stream->ispdev;
 	struct v4l2_mbus_framefmt *in_frm =
 		&dev->active_sensor->fmt.format;
+	u32 in_size;
 
 	v4l2_dbg(1, rkisp1_debug, &dev->v4l2_dev,
 		"stream:%d input %dx%d\n",
@@ -932,13 +933,20 @@ static int raw_config_mi(struct rkisp1_stream *stream)
 		return 0;
 
 	/* raw output size equal to sensor input size */
+	if (stream->id == RKISP1_STREAM_RAW) {
+		in_size = stream->out_fmt.plane_fmt[0].sizeimage;
+	} else {
+		struct rkisp1_stream *raw = &dev->stream[RKISP1_STREAM_RAW];
+
+		in_size = raw->out_fmt.plane_fmt[0].sizeimage;
+	}
 	dmatx0_set_pic_size(base, in_frm->width, in_frm->height);
 	dmatx0_set_pic_off(base, 0);
 	dmatx0_ctrl(base,
 		CIF_ISP_CSI0_DMATX0_VC(1) |
 		CIF_ISP_CSI0_DMATX0_SIMG_SWP |
 		CIF_ISP_CSI0_DMATX0_SIMG_MODE);
-	mi_raw0_set_size(base, in_frm->height * in_frm->width * 2);
+	mi_raw0_set_size(base, in_size);
 	mi_raw0_set_offs(base, 0);
 	mi_raw0_set_length(base, 0);
 	mi_raw0_set_irq_offs(base, 0);
@@ -1358,8 +1366,6 @@ static int rkisp1_create_dummy_buf(struct rkisp1_stream *stream)
 {
 	struct rkisp1_dummy_buffer *dummy_buf = &stream->dummy_buf;
 	struct rkisp1_device *dev = stream->ispdev;
-	struct v4l2_mbus_framefmt *in_frm = NULL;
-	u32 in_size;
 
 	/* get a maximum size */
 	dummy_buf->size = max3(stream->out_fmt.plane_fmt[0].bytesperline *
@@ -1369,8 +1375,10 @@ static int rkisp1_create_dummy_buf(struct rkisp1_stream *stream)
 	if (dev->active_sensor->mbus.type == V4L2_MBUS_CSI2 &&
 		(dev->isp_ver == ISP_V12 ||
 		dev->isp_ver == ISP_V13)) {
-		in_frm = &dev->active_sensor->fmt.format;
-		in_size = in_frm->height * in_frm->width * 2;
+		u32 in_size;
+		struct rkisp1_stream *raw = &dev->stream[RKISP1_STREAM_RAW];
+
+		in_size = raw->out_fmt.plane_fmt[0].sizeimage;
 		dummy_buf->size = max(dummy_buf->size, in_size);
 	}
 
@@ -1757,10 +1765,6 @@ void rkisp1_stream_init(struct rkisp1_device *dev, u32 id)
 
 	stream->streaming = false;
 	stream->interlaced = false;
-	rkisp1_set_stream_def_fmt(dev, id,
-				  RKISP1_DEFAULT_WIDTH,
-				  RKISP1_DEFAULT_HEIGHT,
-				  V4L2_PIX_FMT_YUYV);
 
 	stream->burst =
 		CIF_MI_CTRL_BURST_LEN_LUM_16 |
diff --git a/drivers/media/platform/rockchip/isp1/dev.c b/drivers/media/platform/rockchip/isp1/dev.c
index 9cad39e7d744..7f132e71ecf2 100644
--- a/drivers/media/platform/rockchip/isp1/dev.c
+++ b/drivers/media/platform/rockchip/isp1/dev.c
@@ -388,6 +388,7 @@ static int _set_pipeline_default_fmt(struct rkisp1_device *dev)
 	struct v4l2_subdev_selection sel;
 	struct v4l2_subdev_pad_config cfg;
 	u32 width, height;
+	u32 ori_width, ori_height, ori_code;
 
 	if (dev->num_sensors) {
 		sensor = dev->sensors[0].sd;
@@ -404,6 +405,10 @@ static int _set_pipeline_default_fmt(struct rkisp1_device *dev)
 			return -ENXIO;
 		}
 
+		ori_width = fmt.format.width;
+		ori_height = fmt.format.height;
+		ori_code = fmt.format.code;
+
 		if (dev->isp_ver == ISP_V12) {
 			fmt.format.width  = clamp_t(u32, fmt.format.width,
 						CIF_ISP_INPUT_W_MIN,
@@ -460,6 +465,11 @@ static int _set_pipeline_default_fmt(struct rkisp1_device *dev)
 		if (dev->isp_ver != ISP_V10_1)
 			rkisp1_set_stream_def_fmt(dev, RKISP1_STREAM_SP,
 						  width, height, V4L2_PIX_FMT_YUYV);
+		if (dev->isp_ver == ISP_V12 ||
+			dev->isp_ver == ISP_V13)
+			rkisp1_set_stream_def_fmt(dev, RKISP1_STREAM_RAW,
+						  ori_width, ori_height,
+						  rkisp1_mbus_pixelcode_to_v4l2(ori_code));
 	}
 
 	return 0;
diff --git a/drivers/media/platform/rockchip/isp1/rkisp1.c b/drivers/media/platform/rockchip/isp1/rkisp1.c
index cb8de6b96446..54ce2fe6ab41 100644
--- a/drivers/media/platform/rockchip/isp1/rkisp1.c
+++ b/drivers/media/platform/rockchip/isp1/rkisp1.c
@@ -167,6 +167,54 @@ int rkisp1_update_sensor_info(struct rkisp1_device *dev)
 	return ret;
 }
 
+u32 rkisp1_mbus_pixelcode_to_v4l2(u32 pixelcode)
+{
+	u32 pixelformat;
+
+	switch (pixelcode) {
+	case MEDIA_BUS_FMT_SBGGR8_1X8:
+		pixelformat = V4L2_PIX_FMT_SBGGR8;
+		break;
+	case MEDIA_BUS_FMT_SGBRG8_1X8:
+		pixelformat = V4L2_PIX_FMT_SGBRG8;
+		break;
+	case MEDIA_BUS_FMT_SGRBG8_1X8:
+		pixelformat = V4L2_PIX_FMT_SGRBG8;
+		break;
+	case MEDIA_BUS_FMT_SRGGB8_1X8:
+		pixelformat = V4L2_PIX_FMT_SRGGB8;
+		break;
+	case MEDIA_BUS_FMT_SBGGR10_1X10:
+		pixelformat = V4L2_PIX_FMT_SBGGR10;
+		break;
+	case MEDIA_BUS_FMT_SGBRG10_1X10:
+		pixelformat = V4L2_PIX_FMT_SGBRG10;
+		break;
+	case MEDIA_BUS_FMT_SGRBG10_1X10:
+		pixelformat = V4L2_PIX_FMT_SGRBG10;
+		break;
+	case MEDIA_BUS_FMT_SRGGB10_1X10:
+		pixelformat = V4L2_PIX_FMT_SRGGB10;
+		break;
+	case MEDIA_BUS_FMT_SBGGR12_1X12:
+		pixelformat = V4L2_PIX_FMT_SBGGR12;
+		break;
+	case MEDIA_BUS_FMT_SGBRG12_1X12:
+		pixelformat = V4L2_PIX_FMT_SGBRG12;
+		break;
+	case MEDIA_BUS_FMT_SGRBG12_1X12:
+		pixelformat = V4L2_PIX_FMT_SGRBG12;
+		break;
+	case MEDIA_BUS_FMT_SRGGB12_1X12:
+		pixelformat = V4L2_PIX_FMT_SRGGB12;
+		break;
+	default:
+		pixelformat = V4L2_PIX_FMT_SRGGB10;
+	}
+
+	return pixelformat;
+}
+
 /****************  register operations ****************/
 
 /*
diff --git a/drivers/media/platform/rockchip/isp1/rkisp1.h b/drivers/media/platform/rockchip/isp1/rkisp1.h
index 7dcc5a0983d0..afafc2c0f78f 100644
--- a/drivers/media/platform/rockchip/isp1/rkisp1.h
+++ b/drivers/media/platform/rockchip/isp1/rkisp1.h
@@ -140,6 +140,8 @@ irqreturn_t rkisp1_vs_isr_handler(int irq, void *ctx);
 
 int rkisp1_update_sensor_info(struct rkisp1_device *dev);
 
+u32 rkisp1_mbus_pixelcode_to_v4l2(u32 pixelcode);
+
 static inline
 struct ispsd_out_fmt *rkisp1_get_ispsd_out_fmt(struct rkisp1_isp_subdev *isp_sdev)
 {
-- 
2.35.3

