From ca8d82cb938b15cb927111d0266ea531c34fd0c9 Mon Sep 17 00:00:00 2001
From: Zefa Chen <zefa.chen@rock-chips.com>
Date: Thu, 17 Dec 2020 16:56:36 +0800
Subject: [PATCH] media: i2c: sc4238 support 2688x1520@30fps 10bit linear mode

Signed-off-by: Zefa Chen <zefa.chen@rock-chips.com>
Change-Id: I42a2a9e93a1ea3cd3c94bd67d90c4ea9e315ba7b
---
 drivers/media/i2c/sc4238.c | 304 ++++++++++++++++++++++++++++++++++++-
 1 file changed, 299 insertions(+), 5 deletions(-)

diff --git a/drivers/media/i2c/sc4238.c b/drivers/media/i2c/sc4238.c
index ad502bf0e8ed..e2167c77daa7 100644
--- a/drivers/media/i2c/sc4238.c
+++ b/drivers/media/i2c/sc4238.c
@@ -7,6 +7,7 @@
  * V0.0X01.0X00 first version.
  * V0.0X01.0X01 add quick stream on/off
  * V0.0X01.0X02 support digital gain
+ * V0.0X01.0X03 support 2688x1520@30fps 10bit linear mode
  */
 //#define DEBUG
 #include <linux/clk.h>
@@ -29,7 +30,7 @@
 #include <linux/rk-preisp.h>
 #include "../platform/rockchip/isp/rkisp_tb_helper.h"
 
-#define DRIVER_VERSION			KERNEL_VERSION(0, 0x01, 0x02)
+#define DRIVER_VERSION			KERNEL_VERSION(0, 0x01, 0x03)
 
 #ifndef V4L2_CID_DIGITAL_GAIN
 #define V4L2_CID_DIGITAL_GAIN		V4L2_CID_GAIN
@@ -190,6 +191,282 @@ static const struct regval sc4238_global_regs[] = {
 	{REG_NULL, 0x00},
 };
 
+/*
+ * Xclk 24Mhz
+ * max_framerate 30fps
+ * mipi_datarate per lane 337.5Mbps
+ */
+static const struct regval sc4238_linear10bit_2688x1520_regs[] = {
+	{0x0103, 0x01},
+	{0x0100, 0x00},
+	{0x36e9, 0x80},
+	{0x36f9, 0x80},
+	{0x3018, 0x72},
+	{0x301f, 0x9a},
+	{0x3031, 0x0a},
+	{0x3037, 0x20},
+	{0x3038, 0x22},
+	{0x3106, 0x81},
+	{0x3200, 0x00},
+	{0x3201, 0x00},
+	{0x3202, 0x00},
+	{0x3203, 0x00},
+	{0x3204, 0x0a},
+	{0x3205, 0x87},
+	{0x3206, 0x05},
+	{0x3207, 0xf7},
+	{0x3208, 0x0a},
+	{0x3209, 0x80},
+	{0x320a, 0x05},
+	{0x320b, 0xf0},
+	{0x320c, 0x05},
+	{0x320d, 0xa0},
+	{0x320e, 0x06},
+	{0x320f, 0x1a},
+	{0x3211, 0x04},
+	{0x3213, 0x04},
+	{0x3251, 0x88},
+	{0x3253, 0x0a},
+	{0x325f, 0x0c},
+	{0x3273, 0x01},
+	{0x3301, 0x30},
+	{0x3304, 0x30},
+	{0x3306, 0x70},
+	{0x3308, 0x10},
+	{0x3309, 0x50},
+	{0x330b, 0xf0},
+	{0x330e, 0x14},
+	{0x3314, 0x94},
+	{0x331e, 0x29},
+	{0x331f, 0x49},
+	{0x3320, 0x09},
+	{0x334c, 0x10},
+	{0x3352, 0x02},
+	{0x3356, 0x1f},
+	{0x335e, 0x02},
+	{0x335f, 0x04},
+	{0x3363, 0x00},
+	{0x3364, 0x1e},
+	{0x3366, 0x92},
+	{0x336d, 0x03},
+	{0x337a, 0x08},
+	{0x337b, 0x10},
+	{0x337c, 0x06},
+	{0x337d, 0x0a},
+	{0x337f, 0x2d},
+	{0x3390, 0x08},
+	{0x3391, 0x18},
+	{0x3392, 0x38},
+	{0x3393, 0x30},
+	{0x3394, 0x30},
+	{0x3395, 0x30},
+	{0x3399, 0xff},
+	{0x33a2, 0x08},
+	{0x33a3, 0x0c},
+	{0x33e0, 0xa0},
+	{0x33e1, 0x08},
+	{0x33e2, 0x00},
+	{0x33e3, 0x10},
+	{0x33e4, 0x10},
+	{0x33e5, 0x00},
+	{0x33e6, 0x10},
+	{0x33e7, 0x10},
+	{0x33e8, 0x00},
+	{0x33e9, 0x10},
+	{0x33ea, 0x16},
+	{0x33eb, 0x00},
+	{0x33ec, 0x10},
+	{0x33ed, 0x18},
+	{0x33ee, 0xa0},
+	{0x33ef, 0x08},
+	{0x33f4, 0x00},
+	{0x33f5, 0x10},
+	{0x33f6, 0x10},
+	{0x33f7, 0x00},
+	{0x33f8, 0x10},
+	{0x33f9, 0x10},
+	{0x33fa, 0x00},
+	{0x33fb, 0x10},
+	{0x33fc, 0x16},
+	{0x33fd, 0x00},
+	{0x33fe, 0x10},
+	{0x33ff, 0x18},
+	{0x360f, 0x05},
+	{0x3622, 0xee},
+	{0x3625, 0x0a},
+	{0x3630, 0xa8},
+	{0x3631, 0x80},
+	{0x3633, 0x44},
+	{0x3634, 0x34},
+	{0x3635, 0x60},
+	{0x3636, 0x20},
+	{0x3637, 0x11},
+	{0x3638, 0x2a},
+	{0x363a, 0x1f},
+	{0x363b, 0x03},
+	{0x366e, 0x04},
+	{0x3670, 0x4a},
+	{0x3671, 0xee},
+	{0x3672, 0x0e},
+	{0x3673, 0x0e},
+	{0x3674, 0x70},
+	{0x3675, 0x40},
+	{0x3676, 0x45},
+	{0x367a, 0x08},
+	{0x367b, 0x38},
+	{0x367c, 0x08},
+	{0x367d, 0x38},
+	{0x3690, 0x43},
+	{0x3691, 0x63},
+	{0x3692, 0x63},
+	{0x3699, 0x80},
+	{0x369a, 0x9f},
+	{0x369b, 0x9f},
+	{0x369c, 0x08},
+	{0x369d, 0x38},
+	{0x36a2, 0x08},
+	{0x36a3, 0x38},
+	{0x36ea, 0x31},
+	{0x36eb, 0x14},
+	{0x36ec, 0x0c},
+	{0x36ed, 0x24},
+	{0x36fa, 0x31},
+	{0x36fb, 0x09},
+	{0x36fc, 0x00},
+	{0x36fd, 0x24},
+	{0x3902, 0xc5},
+	{0x3905, 0xd8},
+	{0x3908, 0x11},
+	{0x391b, 0x80},
+	{0x391c, 0x0f},
+	{0x391d, 0x24},
+	{0x3933, 0x28},
+	{0x3934, 0x20},
+	{0x3940, 0x6c},
+	{0x3942, 0x08},
+	{0x3943, 0x28},
+	{0x3980, 0x00},
+	{0x3981, 0x00},
+	{0x3982, 0x00},
+	{0x3983, 0x00},
+	{0x3984, 0x00},
+	{0x3985, 0x00},
+	{0x3986, 0x00},
+	{0x3987, 0x00},
+	{0x3988, 0x00},
+	{0x3989, 0x00},
+	{0x398a, 0x00},
+	{0x398b, 0x04},
+	{0x398c, 0x00},
+	{0x398d, 0x04},
+	{0x398e, 0x00},
+	{0x398f, 0x08},
+	{0x3990, 0x00},
+	{0x3991, 0x10},
+	{0x3992, 0x03},
+	{0x3993, 0xd8},
+	{0x3994, 0x03},
+	{0x3995, 0xe0},
+	{0x3996, 0x03},
+	{0x3997, 0xf0},
+	{0x3998, 0x03},
+	{0x3999, 0xf8},
+	{0x399a, 0x00},
+	{0x399b, 0x00},
+	{0x399c, 0x00},
+	{0x399d, 0x08},
+	{0x399e, 0x00},
+	{0x399f, 0x10},
+	{0x39a0, 0x00},
+	{0x39a1, 0x18},
+	{0x39a2, 0x00},
+	{0x39a3, 0x28},
+	{0x39af, 0x58},
+	{0x39b5, 0x30},
+	{0x39b6, 0x00},
+	{0x39b7, 0x34},
+	{0x39b8, 0x00},
+	{0x39b9, 0x00},
+	{0x39ba, 0x34},
+	{0x39bb, 0x00},
+	{0x39bc, 0x00},
+	{0x39bd, 0x00},
+	{0x39be, 0x00},
+	{0x39bf, 0x00},
+	{0x39c0, 0x00},
+	{0x39c1, 0x00},
+	{0x39c5, 0x21},
+	{0x39c8, 0x00},
+	{0x39db, 0x20},
+	{0x39dc, 0x00},
+	{0x39de, 0x20},
+	{0x39df, 0x00},
+	{0x39e0, 0x00},
+	{0x39e1, 0x00},
+	{0x39e2, 0x00},
+	{0x39e3, 0x00},
+	{0x3e00, 0x00},
+	{0x3e01, 0xc2},
+	{0x3e02, 0xa0},
+	{0x3e03, 0x0b},
+	{0x3e06, 0x00},
+	{0x3e07, 0x80},
+	{0x3e08, 0x03},
+	{0x3e09, 0x40},
+	{0x3e14, 0xb1},
+	{0x3e25, 0x03},
+	{0x3e26, 0x40},
+	{0x4501, 0xb4},
+	{0x4509, 0x20},
+	{0x4800, 0x64},
+	{0x4818, 0x00},
+	{0x4819, 0x30},
+	{0x481a, 0x00},
+	{0x481b, 0x0b},
+	{0x481c, 0x00},
+	{0x481d, 0xc8},
+	{0x4821, 0x02},
+	{0x4822, 0x00},
+	{0x4823, 0x03},
+	{0x4828, 0x00},
+	{0x4829, 0x02},
+	{0x4837, 0x3b},
+	{0x5784, 0x10},
+	{0x5785, 0x08},
+	{0x5787, 0x06},
+	{0x5788, 0x06},
+	{0x5789, 0x00},
+	{0x578a, 0x06},
+	{0x578b, 0x06},
+	{0x578c, 0x00},
+	{0x5790, 0x10},
+	{0x5791, 0x10},
+	{0x5792, 0x00},
+	{0x5793, 0x10},
+	{0x5794, 0x10},
+	{0x5795, 0x00},
+	{0x57c4, 0x10},
+	{0x57c5, 0x08},
+	{0x57c7, 0x06},
+	{0x57c8, 0x06},
+	{0x57c9, 0x00},
+	{0x57ca, 0x06},
+	{0x57cb, 0x06},
+	{0x57cc, 0x00},
+	{0x57d0, 0x10},
+	{0x57d1, 0x10},
+	{0x57d2, 0x00},
+	{0x57d3, 0x10},
+	{0x57d4, 0x10},
+	{0x57d5, 0x00},
+	{0x5988, 0x86},
+	{0x598e, 0x05},
+	{0x598f, 0x6c},
+	{0x36e9, 0x51},
+	{0x36f9, 0x51},
+	{REG_NULL, 0x00},
+};
+
 /*
  * Xclk 24Mhz
  * max_framerate 30fps
@@ -1072,6 +1349,23 @@ static const struct regval sc4238_linear12bit_2560x1440_regs[] = {
  * }
  */
 static const struct sc4238_mode supported_modes[] = {
+	{
+		.bus_fmt = MEDIA_BUS_FMT_SBGGR10_1X10,
+		.width = 2688,
+		.height = 1520,
+		.max_fps = {
+			.numerator = 10000,
+			.denominator = 300000,
+		},
+		.exp_def = 0x0600,
+		.hts_def = 0x05A0 * 2,
+		.vts_def = 0x061A,
+		.reg_list = sc4238_linear10bit_2688x1520_regs,
+		.hdr_mode = NO_HDR,
+		.vc[PAD0] = V4L2_MBUS_CSI2_CHANNEL_0,
+		.link_freq = 0, /* an index in link_freq[] */
+		.pixel_rate = PIXEL_RATE_WITH_200M,
+	},
 	{
 		.bus_fmt = MEDIA_BUS_FMT_SBGGR10_1X10,
 		.width = 2688,
@@ -1091,7 +1385,7 @@ static const struct sc4238_mode supported_modes[] = {
 		.vc[PAD1] = V4L2_MBUS_CSI2_CHANNEL_0,//L->csi wr0
 		.vc[PAD2] = V4L2_MBUS_CSI2_CHANNEL_1,
 		.vc[PAD3] = V4L2_MBUS_CSI2_CHANNEL_1,//M->csi wr2
-		.link_freq = 0, /* an index in link_freq[] */
+		.link_freq = 1, /* an index in link_freq[] */
 		.pixel_rate = PIXEL_RATE_WITH_360M,
 	},
 	{
@@ -1108,7 +1402,7 @@ static const struct sc4238_mode supported_modes[] = {
 		.reg_list = sc4238_linear12bit_2688x1520_regs,
 		.hdr_mode = NO_HDR,
 		.vc[PAD0] = V4L2_MBUS_CSI2_CHANNEL_0,
-		.link_freq = 1, /* an index in link_freq[] */
+		.link_freq = 0, /* an index in link_freq[] */
 		.pixel_rate = PIXEL_RATE_WITH_200M,
 	},
 	{
@@ -1125,14 +1419,14 @@ static const struct sc4238_mode supported_modes[] = {
 		.reg_list = sc4238_linear12bit_2560x1440_regs,
 		.hdr_mode = NO_HDR,
 		.vc[PAD0] = V4L2_MBUS_CSI2_CHANNEL_0,
-		.link_freq = 1, /* an index in link_freq[] */
+		.link_freq = 0, /* an index in link_freq[] */
 		.pixel_rate = PIXEL_RATE_WITH_200M,
 	},
 };
 
 static const s64 link_freq_menu_items[] = {
-	MIPI_FREQ_360M,
 	MIPI_FREQ_200M,
+	MIPI_FREQ_360M,
 };
 
 static const char * const sc4238_test_pattern_menu[] = {
-- 
2.35.3

