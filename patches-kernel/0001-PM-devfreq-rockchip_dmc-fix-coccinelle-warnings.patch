From d53614fe83ef94efd0bcaf08cefbb8c311e97464 Mon Sep 17 00:00:00 2001
From: "Huang, Tao" <huangtao@rock-chips.com>
Date: Fri, 14 Jul 2017 09:38:44 +0800
Subject: [PATCH] PM / devfreq: rockchip_dmc: fix coccinelle warnings

drivers/devfreq/rockchip_dmc.c:665:2-3: Unneeded semicolon
drivers/devfreq/rockchip_dmc.c:676:2-3: Unneeded semicolon
drivers/devfreq/rockchip_dmc.c:686:2-3: Unneeded semicolon
drivers/devfreq/rockchip_dmc.c:697:2-3: Unneeded semicolon
drivers/devfreq/rockchip_dmc.c:707:2-3: Unneeded semicolon
drivers/devfreq/rockchip_dmc.c:766:2-3: Unneeded semicolon
drivers/devfreq/rockchip_dmc.c:776:2-3: Unneeded semicolon
drivers/devfreq/rockchip_dmc.c:1397:2-3: Unneeded semicolon
drivers/devfreq/rockchip_dmc.c:1022:3-4: Unneeded semicolon
drivers/devfreq/rockchip_dmc.c:662:5-11: inconsistent IS_ERR and PTR_ERR on line 664.
drivers/devfreq/rockchip_dmc.c:683:5-11: inconsistent IS_ERR and PTR_ERR on line 685.
drivers/devfreq/rockchip_dmc.c:704:5-11: inconsistent IS_ERR and PTR_ERR on line 706.
drivers/devfreq/rockchip_dmc.c:773:5-11: inconsistent IS_ERR and PTR_ERR on line 775.

Change-Id: I95f2f66649ead3d0c0f59ae713d9272863eb9f63
Signed-off-by: Huang, Tao <huangtao@rock-chips.com>
---
 drivers/devfreq/rockchip_dmc.c | 26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/drivers/devfreq/rockchip_dmc.c b/drivers/devfreq/rockchip_dmc.c
index 921c9dee8b7a..fa00e367b353 100644
--- a/drivers/devfreq/rockchip_dmc.c
+++ b/drivers/devfreq/rockchip_dmc.c
@@ -661,8 +661,8 @@ static int rk3288_dmc_init(struct platform_device *pdev,
 	dmc_clk = devm_clk_get(dev, "dmc_clk");
 	if (IS_ERR(dmc_clk)) {
 		dev_err(dev, "Cannot get the clk dmc_clk\n");
-		return PTR_ERR(pclk_phy);
-	};
+		return PTR_ERR(dmc_clk);
+	}
 	ret = clk_prepare_enable(dmc_clk);
 	if (ret < 0) {
 		dev_err(dev, "failed to prepare/enable dmc_clk\n");
@@ -673,17 +673,17 @@ static int rk3288_dmc_init(struct platform_device *pdev,
 	if (IS_ERR(pclk_phy)) {
 		dev_err(dev, "Cannot get the clk pclk_phy0\n");
 		return PTR_ERR(pclk_phy);
-	};
+	}
 	ret = clk_prepare_enable(pclk_phy);
 	if (ret < 0) {
 		dev_err(dev, "failed to prepare/enable pclk_phy0\n");
 		return ret;
 	}
 	pclk_upctl = devm_clk_get(dev, "pclk_upctl0");
-	if (IS_ERR(pclk_phy)) {
+	if (IS_ERR(pclk_upctl)) {
 		dev_err(dev, "Cannot get the clk pclk_upctl0\n");
 		return PTR_ERR(pclk_upctl);
-	};
+	}
 	ret = clk_prepare_enable(pclk_upctl);
 	if (ret < 0) {
 		dev_err(dev, "failed to prepare/enable pclk_upctl1\n");
@@ -694,17 +694,17 @@ static int rk3288_dmc_init(struct platform_device *pdev,
 	if (IS_ERR(pclk_phy)) {
 		dev_err(dev, "Cannot get the clk pclk_phy1\n");
 		return PTR_ERR(pclk_phy);
-	};
+	}
 	ret = clk_prepare_enable(pclk_phy);
 	if (ret < 0) {
 		dev_err(dev, "failed to prepare/enable pclk_phy1\n");
 		return ret;
 	}
 	pclk_upctl = devm_clk_get(dev, "pclk_upctl1");
-	if (IS_ERR(pclk_phy)) {
+	if (IS_ERR(pclk_upctl)) {
 		dev_err(dev, "Cannot get the clk pclk_upctl1\n");
 		return PTR_ERR(pclk_upctl);
-	};
+	}
 	ret = clk_prepare_enable(pclk_upctl);
 	if (ret < 0) {
 		dev_err(dev, "failed to prepare/enable pclk_upctl1\n");
@@ -763,17 +763,17 @@ static int rk3368_dmc_init(struct platform_device *pdev,
 	if (IS_ERR(pclk_phy)) {
 		dev_err(dev, "Cannot get the clk pclk_phy\n");
 		return PTR_ERR(pclk_phy);
-	};
+	}
 	ret = clk_prepare_enable(pclk_phy);
 	if (ret < 0) {
 		dev_err(dev, "failed to prepare/enable pclk_phy\n");
 		return ret;
 	}
 	pclk_upctl = devm_clk_get(dev, "pclk_upctl");
-	if (IS_ERR(pclk_phy)) {
+	if (IS_ERR(pclk_upctl)) {
 		dev_err(dev, "Cannot get the clk pclk_upctl\n");
 		return PTR_ERR(pclk_upctl);
-	};
+	}
 	ret = clk_prepare_enable(pclk_upctl);
 	if (ret < 0) {
 		dev_err(dev, "failed to prepare/enable pclk_upctl\n");
@@ -1019,7 +1019,7 @@ static int rockchip_get_system_status_rate(struct device_node *np,
 			break;
 		default:
 			break;
-		};
+		}
 	}
 
 	return 0;
@@ -1394,7 +1394,7 @@ static int rockchip_dmcfreq_probe(struct platform_device *pdev)
 	if (IS_ERR(data->dmc_clk)) {
 		dev_err(dev, "Cannot get the clk dmc_clk\n");
 		return PTR_ERR(data->dmc_clk);
-	};
+	}
 
 	data->edev = devfreq_event_get_edev_by_phandle(dev, 0);
 	if (IS_ERR(data->edev))
-- 
2.35.3

