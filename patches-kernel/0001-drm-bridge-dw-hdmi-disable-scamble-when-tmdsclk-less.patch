From 0181dc0e9ca2b9fd1348286185df65e0b2bff392 Mon Sep 17 00:00:00 2001
From: xuhuicong <xhc@rock-chips.com>
Date: Wed, 17 Jan 2018 10:01:18 +0800
Subject: [PATCH] drm: bridge: dw-hdmi: disable scamble when tmdsclk less than
 340Mhz

to Improve signal compatibility disable scamble when tmdsclk less than
340Mhz by default. and can enable it by define "scramble-low-rates;"
in dts file.

Change-Id: I0bd5d8e2ea4df065d84018615d4c39cac7ac441a
Signed-off-by: xuhuicong <xhc@rock-chips.com>
---
 .../devicetree/bindings/display/bridge/dw_hdmi.txt     |  1 +
 drivers/gpu/drm/bridge/synopsys/dw-hdmi.c              | 10 ++++++++--
 2 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/Documentation/devicetree/bindings/display/bridge/dw_hdmi.txt b/Documentation/devicetree/bindings/display/bridge/dw_hdmi.txt
index 8160c7fda810..cd692b24f84d 100644
--- a/Documentation/devicetree/bindings/display/bridge/dw_hdmi.txt
+++ b/Documentation/devicetree/bindings/display/bridge/dw_hdmi.txt
@@ -25,6 +25,7 @@ Optional properties
 - ddc-i2c-bus: phandle of an I2C controller used for DDC EDID probing
 - clocks, clock-names: phandle to the HDMI CEC clock, name should be "cec"
 - hdcp1x-enable: enable hdcp1.x, enable if defined, disable if not defined
+- scramble-low-rates: if defined enable scarmble when tmdsclk less than 340Mhz
 
 Example:
 	hdmi: hdmi@0120000 {
diff --git a/drivers/gpu/drm/bridge/synopsys/dw-hdmi.c b/drivers/gpu/drm/bridge/synopsys/dw-hdmi.c
index d53e54eec59b..37d91976af8f 100644
--- a/drivers/gpu/drm/bridge/synopsys/dw-hdmi.c
+++ b/drivers/gpu/drm/bridge/synopsys/dw-hdmi.c
@@ -252,6 +252,7 @@ struct dw_hdmi {
 	unsigned int audio_cts;
 	unsigned int audio_n;
 	bool audio_enable;
+	bool scramble_low_rates;
 
 #ifdef CONFIG_SWITCH
 	struct switch_dev switchdev;
@@ -1928,7 +1929,8 @@ static void hdmi_av_composer(struct dw_hdmi *hdmi,
 	 * when activate the scrambler feature.
 	 */
 	inv_val = (vmode->mtmdsclock > 340000000 ||
-		   hdmi_info->scdc.scrambling.low_rates ?
+		   (hdmi_info->scdc.scrambling.low_rates &&
+		    hdmi->scramble_low_rates) ?
 		   HDMI_FC_INVIDCONF_HDCP_KEEPOUT_ACTIVE :
 		   HDMI_FC_INVIDCONF_HDCP_KEEPOUT_INACTIVE);
 
@@ -1999,7 +2001,8 @@ static void hdmi_av_composer(struct dw_hdmi *hdmi,
 	/* Scrambling Control */
 	if (hdmi_info->scdc.supported) {
 		if (vmode->mtmdsclock > 340000000 ||
-		    hdmi_info->scdc.scrambling.low_rates) {
+		    (hdmi_info->scdc.scrambling.low_rates &&
+		     hdmi->scramble_low_rates)) {
 			drm_scdc_readb(&hdmi->i2c->adap, SCDC_SINK_VERSION,
 				       &bytes);
 			drm_scdc_writeb(&hdmi->i2c->adap, SCDC_SOURCE_VERSION,
@@ -3651,6 +3654,9 @@ int dw_hdmi_bind(struct device *dev, struct device *master,
 
 	dw_hdmi_register_debugfs(dev, hdmi);
 
+	if (of_property_read_bool(np, "scramble-low-rates"))
+		hdmi->scramble_low_rates = true;
+
 	if (of_property_read_bool(np, "hdcp1x-enable"))
 		hdcp1x_enable = true;
 	dw_hdmi_register_hdcp(dev, hdmi, val, hdcp1x_enable);
-- 
2.35.3

